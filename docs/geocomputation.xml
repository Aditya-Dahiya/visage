<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>visage</title>
<link>https://aditya-dahiya.github.io/visage/index.html/geocomputation.html</link>
<atom:link href="https://aditya-dahiya.github.io/visage/index.html/geocomputation.xml" rel="self" type="application/rss+xml"/>
<description>Visualizing Information and Spatial Analysis with ggplot2 Extensions</description>
<generator>quarto-1.4.549</generator>
<lastBuildDate>Sat, 19 Oct 2024 18:30:00 GMT</lastBuildDate>
<item>
  <title>Computing shortest routes in the sea that avoid land</title>
  <dc:creator>Aditya Dahiya</dc:creator>
  <link>https://aditya-dahiya.github.io/visage/index.html/geocomputation/computing_sea_routes.html</link>
  <description><![CDATA[ 




<p><strong>Dataset used:</strong> This <em>#TidyTuesday</em> dataset comes from the Center for Whale Research (CWR), which monitors Southern Resident killer whales in the Salish Sea, part of the Pacific Northwest. The dataset, scraped by <a href="https://github.com/jadeynryan">Jadey Ryan</a> and documented <a href="https://jadeynryan.github.io/orcas/">here</a>, contains information on encounters from 2017 to 2024. Each encounter involves photographing and identifying individual whales. The data can be accessed via the {<code>orcas</code>} R package and includes variables like encounter duration, location, and pod. While the dataset is mostly tidy, some inconsistencies such as missing values and negative durations remain. <strong>|</strong> <a href="https://github.com/jadeynryan/orcas">Source</a> <strong>|</strong> <a href="https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-10-15/readme.md">Data</a>.</p>
<p>Here’s my #TidyTuesday Visualization for this project in Figure&nbsp;1, and the <a href="https://raw.githubusercontent.com/Aditya-Dahiya/projects_presentations/refs/heads/main/data_vizs/tidy_orcas_encounters.qmd">code</a> used and the visualization <a href="https://aditya-dahiya.github.io/projects_presentations/data_vizs/tidy_orcas_encounters.html">webpage</a>.</p>
<div id="fig-tidytuesday" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-tidytuesday-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://aditya-dahiya.github.io/visage/index.html/geocomputation/images/tidy_orcas_encounters.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-tidytuesday-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: This map visualizes the movements of <a href="https://en.wikipedia.org/wiki/Southern_resident_orcas">Southern Resident killer whales</a>, with arrows marking the starting and ending points of each recorded encounter. The concentration of arrows within a small area highlights the key regions in the <a href="https://en.wikipedia.org/wiki/Salish_Sea">Salish Sea</a> where these encounters occur most frequently. Background map images provided by <a href="https://stadiamaps.com/">StadiaMaps</a>.
</figcaption>
</figure>
</div>
<hr>
<p><strong>The following code for computing sea routes is inspired from <a href="https://raw.githubusercontent.com/BjnNowak/TidyTuesday/refs/heads/main/orcas.R">Code</a> by <a href="https://twitter.com/BjnNowak">Benjamin Nowak</a> hosted on <a href="https://github.com/BjnNowak">GitHub</a> as a part of <a href="https://github.com/rfordatascience/tidytuesday/tree/master"><em>#TidyTuesday</em></a> visualizations.</strong></p>
<hr>
<section id="step-1-getting-the-data-and-cleaning-it" class="level3">
<h3 class="anchored" data-anchor-id="step-1-getting-the-data-and-cleaning-it">Step 1: Getting the data and cleaning it</h3>
<p>The packages used in this analysis are shown in the Table&nbsp;1</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loading the Libraries</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data wrangling</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rgeoboundaries)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Getting country &amp; admin boundaries.</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rmapshaper)      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For multi-polygon simplification</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SF objects</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(terra)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Spatial data analysis</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyterra)       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tidyverse methods for terra objects</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gdistance)       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Distances and Routes on Geographical Grids</span></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(showtext)        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using google fonts in R</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set fonts for including in all graphics</span></span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">font_add_google</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Saira Semi Condensed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"body_font"</span>)</span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">font_add_google</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Saira Extra Condensed"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caption_font"</span>)</span>
<span id="cb1-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">showtext_auto</span>()</span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load orcas data</span></span>
<span id="cb1-17">orcas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> readr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-10-15/orcas.csv'</span>)</span>
<span id="cb1-18"></span>
<span id="cb1-19">sessioninfo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>packages <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-21">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(package, </span>
<span id="cb1-22">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">version =</span> loadedversion, </span>
<span id="cb1-23">         date, source) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(package) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-25">  janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>(</span>
<span id="cb1-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">case =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span></span>
<span id="cb1-27">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-28">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-29">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">opt_interactive</span>(</span>
<span id="cb1-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use_search =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb1-31">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-32">  gtExtras<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt_theme_espn</span>()</span></code></pre></div>
</details>
<div id="tbl-env" class="cell quarto-float anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-env-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: List of packages used during this analysis and their versions
</figcaption>
<div aria-describedby="tbl-env-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<div id="cadjdopngo" class=".gt_table" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>@import url("https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
#cadjdopngo table {
  font-family: Lato, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#cadjdopngo thead, #cadjdopngo tbody, #cadjdopngo tfoot, #cadjdopngo tr, #cadjdopngo td, #cadjdopngo th {
  border-style: none;
}

#cadjdopngo p {
  margin: 0;
  padding: 0;
}

#cadjdopngo .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: #FFFFFF;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#cadjdopngo .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#cadjdopngo .gt_title {
  color: #333333;
  font-size: 24px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#cadjdopngo .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#cadjdopngo .gt_heading {
  background-color: #FFFFFF;
  text-align: left;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cadjdopngo .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cadjdopngo .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cadjdopngo .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#cadjdopngo .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#cadjdopngo .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#cadjdopngo .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#cadjdopngo .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#cadjdopngo .gt_spanner_row {
  border-bottom-style: hidden;
}

#cadjdopngo .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#cadjdopngo .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#cadjdopngo .gt_from_md > :first-child {
  margin-top: 0;
}

#cadjdopngo .gt_from_md > :last-child {
  margin-bottom: 0;
}

#cadjdopngo .gt_row {
  padding-top: 7px;
  padding-bottom: 7px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #F6F7F7;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#cadjdopngo .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#cadjdopngo .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#cadjdopngo .gt_row_group_first td {
  border-top-width: 2px;
}

#cadjdopngo .gt_row_group_first th {
  border-top-width: 2px;
}

#cadjdopngo .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cadjdopngo .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#cadjdopngo .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#cadjdopngo .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cadjdopngo .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cadjdopngo .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#cadjdopngo .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#cadjdopngo .gt_striped {
  background-color: #FAFAFA;
}

#cadjdopngo .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cadjdopngo .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cadjdopngo .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#cadjdopngo .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cadjdopngo .gt_sourcenote {
  font-size: 12px;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#cadjdopngo .gt_left {
  text-align: left;
}

#cadjdopngo .gt_center {
  text-align: center;
}

#cadjdopngo .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#cadjdopngo .gt_font_normal {
  font-weight: normal;
}

#cadjdopngo .gt_font_bold {
  font-weight: bold;
}

#cadjdopngo .gt_font_italic {
  font-style: italic;
}

#cadjdopngo .gt_super {
  font-size: 65%;
}

#cadjdopngo .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#cadjdopngo .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#cadjdopngo .gt_indent_1 {
  text-indent: 5px;
}

#cadjdopngo .gt_indent_2 {
  text-indent: 10px;
}

#cadjdopngo .gt_indent_3 {
  text-indent: 15px;
}

#cadjdopngo .gt_indent_4 {
  text-indent: 20px;
}

#cadjdopngo .gt_indent_5 {
  text-indent: 25px;
}

#cadjdopngo .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#cadjdopngo div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>
<div id="cadjdopngo" class="reactable html-widget" style="width:auto;height:auto;"></div>
<script type="application/json" data-for="cadjdopngo">{"x":{"tag":{"name":"Reactable","attribs":{"data":{"Package":["DBI","KernSmooth","Matrix","R6","Rcpp","V8","bit","bit64","cachem","class","classInt","cli","codetools","colorspace","countrycode","crayon","crul","curl","digest","dplyr","e1071","evaluate","fansi","fastmap","fontawesome","forcats","gdistance","generics","ggplot2","glue","gt","gtExtras","gtable","hms","htmltools","htmlwidgets","httpcode","igraph","janitor","jsonlite","knitr","lattice","lifecycle","lubridate","magrittr","memoise","munsell","paletteer","pillar","pkgconfig","proxy","purrr","raster","readr","rematch2","rgeoboundaries","rlang","rmapshaper","rmarkdown","rstudioapi","scales","sessioninfo","sf","showtext","showtextdb","snakecase","sp","stringi","stringr","sysfonts","terra","tibble","tidyr","tidyselect","tidyterra","tidyverse","timechange","tzdb","units","utf8","vctrs","vroom","withr","xfun","xml2","yaml"],"Version":["1.2.3","2.23-21","1.6-2","2.5.1","1.0.13","5.0.1","4.0.5","4.0.5","1.1.0","7.3-22","0.4-10","3.6.3","0.2-19","2.1-1","1.6.0","1.5.3","1.4.2","5.2.1","0.6.35","1.1.4","1.7-16","1.0.0","1.0.6","1.2.0","0.5.2","1.0.0","1.6.4","0.1.3","3.5.1","1.8.0","0.11.0","0.5.0","0.3.5","1.1.3","0.5.8.1","1.6.4","0.3.0","2.0.3","2.2.0","1.8.8","1.48","0.21-8","1.0.4","1.9.3","2.0.3","2.0.1","0.5.1","1.6.0","1.9.0","2.0.3","0.4-27","1.0.2","3.6-30","2.1.5","2.1.2","1.3","1.1.4","0.5.0","2.28","0.16.0","1.3.0","1.2.2","1.0-17","0.9-7","3.0","0.11.1","2.1-4","1.8.4","1.5.1","0.8.9","1.7-78","3.2.1","1.3.1","1.2.1","0.6.1","2.0.0","0.3.0","0.4.0","0.8-5","1.2.4","0.6.5","1.6.5","3.0.1","0.48","1.3.6","2.3.10"],"Date":["2024-06-02","2023-05-03","2023-11-08","2021-08-19","2024-07-17","2024-09-20","2022-11-15","2020-08-30","2024-05-16","2023-05-03","2023-09-05","2024-06-21","2023-02-01","2024-07-26","2024-03-22","2024-06-20","2024-04-09","2024-03-01","2024-03-11","2023-11-17","2024-09-16","2024-09-17","2023-12-08","2024-05-15","2023-08-19","2023-01-29","2023-06-19","2022-07-05","2024-04-23","2024-09-30","2024-07-09","2023-09-15","2024-04-22","2023-03-21","2024-04-04","2023-12-06","2020-04-10","2024-03-13","2023-02-02","2023-12-04","2024-07-07","2023-04-05","2023-11-07","2023-09-27","2022-03-30","2021-11-26","2024-04-01","2024-01-21","2023-03-22","2019-09-22","2022-06-09","2023-08-10","2024-10-02","2024-01-10","2020-05-01","2024-03-12","2024-06-04","2023-04-11","2024-08-17","2024-03-24","2023-11-28","2021-12-06","2024-09-06","2024-03-02","2020-06-04","2023-08-27","2024-04-30","2024-05-06","2023-11-14","2024-03-02","2024-05-22","2023-03-20","2024-01-24","2024-03-11","2024-06-08","2023-02-22","2024-01-18","2023-05-12","2023-11-28","2023-10-22","2023-12-01","2023-12-05","2024-07-31","2024-10-03","2023-12-04","2024-07-26"],"Source":["CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.2)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.2)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.2)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.1)","CRAN (R 4.3.1)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.2)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.1)","CRAN (R 4.3.2)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)","CRAN (R 4.3.3)"]},"columns":[{"id":"Package","name":"Package","type":"character","minWidth":125,"style":"function(rowInfo, colInfo) {\nconst rowIndex = rowInfo.index + 1\n}","html":true,"align":"left","headerStyle":{"font-weight":"normal"}},{"id":"Version","name":"Version","type":"character","minWidth":125,"style":"function(rowInfo, colInfo) {\nconst rowIndex = rowInfo.index + 1\n}","html":true,"align":"right","headerStyle":{"font-weight":"normal"}},{"id":"Date","name":"Date","type":"character","minWidth":125,"style":"function(rowInfo, colInfo) {\nconst rowIndex = rowInfo.index + 1\n}","html":true,"align":"right","headerStyle":{"font-weight":"normal"}},{"id":"Source","name":"Source","type":"character","minWidth":125,"style":"function(rowInfo, colInfo) {\nconst rowIndex = rowInfo.index + 1\n}","html":true,"align":"left","headerStyle":{"font-weight":"normal"}}],"searchable":true,"defaultPageSize":10,"showPageSizeOptions":false,"pageSizeOptions":[10,25,50,100],"paginationType":"numbers","showPagination":true,"showPageInfo":true,"minRows":1,"striped":true,"height":"auto","theme":{"color":"#333333","backgroundColor":"#FFFFFF","stripedColor":"#fafafa","style":{"fontFamily":"Lato, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif"},"tableStyle":{"borderTopStyle":"solid","borderTopWidth":"2px","borderTopColor":"#D3D3D3"},"headerStyle":{"borderBottomStyle":"solid","borderBottomWidth":"2px","borderBottomColor":"#D3D3D3"}},"elementId":"cadjdopngo","dataKey":"ea818015fd8c7162a67df43dd8d1ad93"},"children":[]},"class":"reactR_markup"},"evals":["tag.attribs.columns.0.style","tag.attribs.columns.1.style","tag.attribs.columns.2.style","tag.attribs.columns.3.style"],"jsHooks":[]}</script>
</div>
</div>
</div>
</figure>
</div>
</div>
</section>
<section id="step-2-clean-the-data" class="level3">
<h3 class="anchored" data-anchor-id="step-2-clean-the-data">Step 2: Clean the data</h3>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A cleaner tibble to use for our visualization</span></span>
<span id="cb2-2">df1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> orcas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-4">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(year, duration, </span>
<span id="cb2-5">         begin_latitude, begin_longitude,</span>
<span id="cb2-6">         end_latitude, end_longitude) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-7"></span>
<span id="cb2-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the duration of encounter into seconds</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove parenthesis content from duration</span></span>
<span id="cb2-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">duration =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(duration, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">s*</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(.*</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>),</span>
<span id="cb2-12">    </span>
<span id="cb2-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove the "s" for seconds</span></span>
<span id="cb2-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">duration =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_extract</span>(duration, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d+"</span>),</span>
<span id="cb2-15">    </span>
<span id="cb2-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert the duration into number</span></span>
<span id="cb2-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">duration =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(duration)</span>
<span id="cb2-18">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-19">  </span>
<span id="cb2-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove aberrant observation with durations less than zero</span></span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(duration <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-22">  </span>
<span id="cb2-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove observations with missingness</span></span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-25">  </span>
<span id="cb2-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Allot an ID number to each finally selected observation</span></span>
<span id="cb2-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-28">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">relocate</span>(id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.before =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>())</span>
<span id="cb2-29"></span>
<span id="cb2-30">df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-31">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-32">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">opt_interactive</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-33">  gtExtras<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt_theme_espn</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-34">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(</span>
<span id="cb2-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(year, id),</span>
<span id="cb2-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-37">  )</span></code></pre></div>
</details>
<div id="tbl-clean-data" class="cell quarto-float anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-clean-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;2: A table of clean data that shows id, year, duration and starting and ending coordinates of each Killer Whale encounter
</figcaption>
<div aria-describedby="tbl-clean-data-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<div id="htayfovfrk" class=".gt_table" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>@import url("https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
#htayfovfrk table {
  font-family: Lato, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#htayfovfrk thead, #htayfovfrk tbody, #htayfovfrk tfoot, #htayfovfrk tr, #htayfovfrk td, #htayfovfrk th {
  border-style: none;
}

#htayfovfrk p {
  margin: 0;
  padding: 0;
}

#htayfovfrk .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: #FFFFFF;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#htayfovfrk .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#htayfovfrk .gt_title {
  color: #333333;
  font-size: 24px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#htayfovfrk .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#htayfovfrk .gt_heading {
  background-color: #FFFFFF;
  text-align: left;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#htayfovfrk .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#htayfovfrk .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#htayfovfrk .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#htayfovfrk .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#htayfovfrk .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#htayfovfrk .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#htayfovfrk .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#htayfovfrk .gt_spanner_row {
  border-bottom-style: hidden;
}

#htayfovfrk .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#htayfovfrk .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#htayfovfrk .gt_from_md > :first-child {
  margin-top: 0;
}

#htayfovfrk .gt_from_md > :last-child {
  margin-bottom: 0;
}

#htayfovfrk .gt_row {
  padding-top: 7px;
  padding-bottom: 7px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #F6F7F7;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#htayfovfrk .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 80%;
  font-weight: bolder;
  text-transform: uppercase;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#htayfovfrk .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#htayfovfrk .gt_row_group_first td {
  border-top-width: 2px;
}

#htayfovfrk .gt_row_group_first th {
  border-top-width: 2px;
}

#htayfovfrk .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#htayfovfrk .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#htayfovfrk .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#htayfovfrk .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#htayfovfrk .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#htayfovfrk .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#htayfovfrk .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#htayfovfrk .gt_striped {
  background-color: #FAFAFA;
}

#htayfovfrk .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#htayfovfrk .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#htayfovfrk .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#htayfovfrk .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#htayfovfrk .gt_sourcenote {
  font-size: 12px;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#htayfovfrk .gt_left {
  text-align: left;
}

#htayfovfrk .gt_center {
  text-align: center;
}

#htayfovfrk .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#htayfovfrk .gt_font_normal {
  font-weight: normal;
}

#htayfovfrk .gt_font_bold {
  font-weight: bold;
}

#htayfovfrk .gt_font_italic {
  font-style: italic;
}

#htayfovfrk .gt_super {
  font-size: 65%;
}

#htayfovfrk .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#htayfovfrk .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#htayfovfrk .gt_indent_1 {
  text-indent: 5px;
}

#htayfovfrk .gt_indent_2 {
  text-indent: 10px;
}

#htayfovfrk .gt_indent_3 {
  text-indent: 15px;
}

#htayfovfrk .gt_indent_4 {
  text-indent: 20px;
}

#htayfovfrk .gt_indent_5 {
  text-indent: 25px;
}

#htayfovfrk .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#htayfovfrk div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>
<div id="htayfovfrk" class="reactable html-widget" style="width:auto;height:auto;"></div>
<script type="application/json" data-for="htayfovfrk">{"x":{"tag":{"name":"Reactable","attribs":{"data":{"id":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584],"yearduration":[5580,2460,9900,5460,2460,6300,6360,2340,3900,840,2220,2460,3240,3780,2880,4140,10020,2460,2640,4500,9060,3300,4140,1680,600,3780,1800,2220,12300,6000,8460,1140,4740,4500,9600,4080,3660,2700,1200,8640,3120,5520,4200,2100,1440,4500,5820,5220,8100,7380,1740,1200,600,2340,2280,6300,5820,7020,4200,4980,2100,1200,6060,2700,4500,7380,960,3600,3960,5040,1200,3660,2700,9840,3120,9540,420,8160,2520,3360,4260,4200,3300,3900,3660,3720,8700,8700,9960,9960,4740,7320,6300,16200,3960,4560,5160,3300,4560,660,5820,5820,3900,5280,7320,7320,14100,5760,5760,6000,7260,7260,2100,7740,7740,4320,4920,5400,3060,8340,660,3600,5280,9540,4980,2580,5940,2520,4080,6900,7020,5400,7500,4500,3540,3720,1620,2220,6000,4320,3540,1320,8280,900,7260,3660,3600,4800,5100,3540,6660,8640,2400,3360,4320,1500,10500,8520,480,4500,900,4020,8820,6300,1560,4200,4860,6000,2340,6900,4800,15120,5820,1560,7260,7260,5280,6300,6960,8700,7380,7380,7140,4020,4020,8160,8160,9060,4860,8100,6900,12120,7080,3000,2880,6720,6300,2160,4560,2160,5640,6600,1500,2400,1200,2880,420,1740,1200,5220,6240,5100,6600,5280,1320,8220,3240,3660,11460,10080,6540,2760,9540,9000,19800,3600,2700,3360,1320,8040,5280,6180,6900,11580,5760,8580,3720,4020,5760,8100,5700,2700,3180,540,720,7800,1800,4020,2760,2940,2460,1200,11100,900,1500,9300,4560,2040,3600,3180,2100,5820,12120,5640,2700,3960,11760,7860,3540,3540,6300,4260,3540,3540,3120,540,3660,2160,6360,3960,8820,6600,4860,2460,9600,3960,6300,9360,4920,10620,5520,6780,2700,2160,22200,13920,1680,2700,6600,15600,8400,18900,3360,1740,5640,4500,2460,6240,1680,4020,7140,3660,4680,12900,6600,11400,6600,3360,7200,8700,2700,6900,3600,8340,9900,7080,6300,1560,2760,3000,7020,7140,1320,2940,1680,1440,10500,5220,5340,7500,6000,2040,1860,7500,4500,7920,2340,9960,7380,840,10800,3180,3420,2700,22740,5640,3720,1200,1740,4440,16860,18240,1500,22200,720,1500,6000,2580,1020,7200,9300,4800,12000,20100,11880,3600,2880,5100,2700,10200,3480,23700,6600,1200,1500,5100,6000,3900,3360,1500,3060,1500,12000,3780,2700,3900,2580,10980,9600,16500,8580,4800,4500,5700,1500,2100,13800,8100,5220,7200,3300,5820,1800,7920,6300,10200,4500,2700,18000,3300,7200,7200,5700,3480,3300,5520,9240,7200,1980,3000,4500,4740,1200,4200,900,900,5400,14400,4380,8580,1860,7200,10200,9120,12900,1200,600,11700,9000,1260,2520,2520,360,4200,11700,1260,3480,3600,1620,4140,1560,6780,5940,9720,8700,5700,4860,3300,7680,14100,5700,3180,1800,1860,3600,540,600,4980,4020,1500,2220,3660,1140,9300,6120,8040,6000,6300,5100,18900,1740,4500,9900,1920,5880,6300,1800,12660,4380,600,12600,10260,4500,5820,3000,9300,5400,7860,6420,2220,2160,6000,14100,1140,11700,6300,3900,14100,2700,8700,4080,2700,12120,2940,34560,3000,7800,840,3240,7380,1260,1260,1440,960,6300,3960,1500,3300,13920,2280,8520,12960,3300,3000,3180,5760,8100,7200,8700,19020,4320,7800,4920,20700,4860,1800,7080,3000,3600,11580,14400,780,8100,4440,6420,2640,4680,7800,5460,4680,9060,7200,25620,4620,19200,6900,10200,7680,7200,2340,2400,6360,2760,2040],"begin_latitude":[48.5105018615723,48.4765014648438,48.5716667175293,49.0926666259766,48.7968330383301,48.4363327026367,48.8473320007324,48.02783203125,48.8699989318848,48.8033332824707,48.3646659851074,48.3470001220703,48.3050003051758,48.6940002441406,48.598331451416,48.3078346252441,48.7459983825684,48.576000213623,48.4954986572266,48.6144981384277,48.5893325805664,48.2900009155273,48.5540008544922,48.438835144043,48.6754989624023,48.5904998779297,48.5723342895508,48.6166648864746,48.4734992980957,48.3935012817383,48.3959999084473,48.5833320617676,48.4451675415039,48.5203323364258,48.5111656188965,48.3406677246094,48.2438316345215,48.34716796875,48.4408340454102,48.2999992370605,48.4751663208008,48.5796661376953,48.6183319091797,48.4198341369629,48.2756652832031,48.0999984741211,48.3078346252441,48.4458351135254,48.2813339233398,48.3096656799316,48.8201675415039,48.8025016784668,48.3733329772949,48.4941673278809,48.377498626709,48.2789993286133,48.3863334655762,48.5810012817383,48.2903327941895,48.548168182373,48.5456657409668,48.3516654968262,48.4916648864746,48.2883338928223,48.3359985351562,48.3068351745605,48.3133316040039,48.2745018005371,48.2849998474121,48.2756652832031,48.3063316345215,48.3025016784668,48.306999206543,48.2501678466797,48.546501159668,48.5741653442383,48.3074989318848,48.3401679992676,48.4305000305176,48.3546676635742,48.3361663818359,48.625,48.3166656494141,48.3206672668457,48.3068351745605,48.5260009765625,48.4684982299805,48.4684982299805,48.3720016479492,48.3720016479492,48.6221656799316,48.443000793457,48.3046836853027,48.4466667175293,48.5966682434082,48.5436668395996,48.4803352355957,48.339168548584,48.4803352355957,48.5896682739258,48.4766654968262,48.4766654968262,48.6551666259766,48.5876655578613,48.4205017089844,48.4205017089844,48.5341682434082,48.7403335571289,48.7403335571289,48.3834991455078,48.3870010375977,48.3870010375977,48.5561676025391,48.6246681213379,48.6246681213379,48.396167755127,48.2768325805664,48.4858322143555,48.5866661071777,48.5063323974609,48.4338340759277,48.3571662902832,48.5185012817383,48.5741653442383,48.3108329772949,48.4198341369629,48.5568351745605,48.4729995727539,48.714168548584,48.4253349304199,48.5919990539551,48.613166809082,48.976001739502,48.357666015625,48.2528343200684,48.2955017089844,48.4220008850098,48.318000793457,48.8158340454102,48.2598342895508,48.2928352355957,48.2888336181641,48.4056663513184,48.4008331298828,48.5,48.4976654052734,48.4954986572266,48.5063323974609,48.4459991455078,48.3918342590332,48.5248336791992,48.5368347167969,48.5209999084473,48.359001159668,48.4179992675781,48.298168182373,48.4676666259766,48.8224983215332,48.6549987792969,48.7265014648438,48.6180000305176,48.4150009155273,48.4485015869141,48.5711669921875,48.6476669311523,48.6319999694824,48.3591651916504,48.716667175293,48.3281669616699,48.3188323974609,48.5755004882812,48.4183349609375,48.6086654663086,48.3533325195312,48.6281661987305,48.6281661987305,48.6283340454102,48.5068321228027,48.3894996643066,48.7190017700195,48.5609321594238,48.5609321594238,48.5511665344238,48.6121673583984,48.6121673583984,48.7594985961914,48.7594985961914,48.4176483154297,48.679500579834,48.5895004272461,48.6181678771973,48.5193328857422,48.5108337402344,48.5369987487793,48.3066673278809,48.6123352050781,48.5839996337891,48.4165000915527,48.3600006103516,48.2700004577637,48.5816650390625,48.848331451416,48.3600006103516,48.4033317565918,48.3600006103516,48.235668182373,48.3484992980957,48.2345008850098,48.6640014648438,48.5923347473145,48.326000213623,48.7084999084473,48.6173324584961,48.4724998474121,48.7199172973633,48.4469680786133,48.3899993896484,48.2333335876465,48.5828323364258,48.4966659545898,48.8295516967773,48.3883323669434,48.464168548584,48.7698173522949,49.006233215332,48.3366661071777,48.638500213623,48.406566619873,48.5783653259277,48.7373657226562,48.6877326965332,48.5362014770508,48.4410171508789,48.4595489501953,48.6297988891602,48.601749420166,48.6039505004883,48.6534996032715,48.5133323669434,48.3643341064453,48.310001373291,48.5304985046387,48.4183349609375,48.6868324279785,48.4095001220703,48.485668182373,48.675666809082,48.375,48.3499984741211,48.4116668701172,48.416332244873,48.6184997558594,48.6736679077148,48.6246681213379,48.5861663818359,48.671501159668,48.3366661071777,48.4099998474121,48.5681648254395,48.6018333435059,48.6119995117188,48.5511665344238,48.5911102294922,48.5535011291504,48.408332824707,48.439998626709,48.5176658630371,48.375,48.6565017700195,48.4566650390625,48.546501159668,48.3800010681152,48.5833320617676,48.2966651916504,48.2433319091797,48.3300018310547,48.4366683959961,48.3050003051758,48.3133316040039,48.7133331298828,48.3800010681152,48.4449996948242,48.2666664123535,48.2716674804688,48.3133316040039,48.3171348571777,48.341667175293,48.4383316040039,48.4516677856445,48.5149993896484,48.4928321838379,48.5149993896484,48.3466682434082,48.6030006408691,48.2886657714844,48.283332824707,48.5616683959961,48.6619987487793,48.4754981994629,48.4749984741211,48.6904983520508,48.5,48.3801651000977,48.6511650085449,48.3533325195312,48.5218315124512,48.4799995422363,48.7700004577637,48.8033332824707,48.531665802002,48.3883323669434,48.7150001525879,48.341667175293,48.7426681518555,48.4049987792969,48.7036666870117,48.3633346557617,48.313835144043,48.4583320617676,48.6333351135254,48.4116668701172,48.75,48.4116668701172,48.3511657714844,48.2750015258789,48.375,48.2366676330566,48.341667175293,48.3650016784668,48.3816680908203,48.146900177002,48.4133338928223,48.3349990844727,48.3533325195312,48.3083343505859,48.2416648864746,48.5750007629395,48.5250015258789,48.3016662597656,48.6726684570312,48.8053321838379,48.314998626709,48.3950004577637,48.306999206543,48.3266677856445,48.276668548584,48.3083343505859,48.2649993896484,48.4592819213867,48.3216667175293,48.4848327636719,48.3250007629395,48.2416648864746,48.3316650390625,48.5341682434082,48.2744445800781,48.6673316955566,48.283332824707,48.3250007629395,48.533332824707,48.6133346557617,48.4099998474121,48.3600006103516,48.4716682434082,48.3983345031738,48.3816680908203,48.6375007629395,48.2827491760254,48.4751014709473,48.5213317871094,48.3683319091797,48.466667175293,48.474666595459,48.4923324584961,48.5900001525879,48.586498260498,48.276668548584,48.6889991760254,48.6856651306152,48.5009994506836,48.2952156066895,48.550666809082,48.7471656799316,48.6191673278809,48.4178352355957,48.5353317260742,48.473331451416,48.4743347167969,48.314998626709,48.6431655883789,48.9183349609375,48.423999786377,48.6419982910156,48.2933349609375,48.574333190918,48.7736663818359,48.4966659545898,47.891040802002,48.5656318664551,48.6923332214355,48.4501647949219,48.6983337402344,49.0731658935547,48.8874320983887,48.9015846252441,49.5298004150391,48.7316665649414,48.6383323669434,48.5841674804688,48.3983345031738,48.5685005187988,48.7836685180664,48.3050003051758,48.3516654968262,48.4933319091797,48.5098342895508,48.4047317504883,48.3731651306152,48.1575012207031,48.5099983215332,48.5469512939453,48.5483322143555,48.5349998474121,48.2533340454102,48.2511177062988,48.3866653442383,48.2533340454102,48.2266654968262,48.3983345031738,48.6733322143555,48.3400001525879,48.2866668701172,48.281665802002,47.8533325195312,48.5926666259766,48.4978675842285,47.941333770752,48.2313499450684,48.3499984741211,48.348331451416,48.2983322143555,48.2265014648438,48.4633331298828,48.4741668701172,48.2633323669434,48.623664855957,48.2683334350586,48.4668350219727,48.7223320007324,48.2983322143555,48.1766662597656,48.4049987792969,48.5161094665527,48.8083343505859,48.6723327636719,48.5233345031738,48.4949989318848,48.7416648864746,48.5431671142578,48.3733329772949,48.3199996948242,48.6546821594238,48.5299987792969,48.4154510498047,48.602165222168,48.473331451416,48.5576972961426,48.8693351745605,48.9379997253418,48.4905014038086,48.5429992675781,48.6423377990723,48.5871658325195,48.5880546569824,48.5419998168945,48.6850395202637,48.7083320617676,48.8640823364258,48.5914688110352,48.560001373291,48.3566665649414,48.7421493530273,48.3561515808105,48.5166664123535,48.6748504638672,48.4201164245605,48.7425003051758,48.4389991760254,48.5149993896484,49.0688819885254,48.6145668029785,48.5391654968262,48.8152160644531,48.3349990844727,48.4519500732422,48.3699989318848,48.3300018310547,48.5885009765625,48.4199981689453,48.5885009765625,48.6856651306152,48.4005012512207,48.485668182373,48.6871681213379,48.4233322143555,48.5499992370605,48.360767364502,48.2456665039062,48.6172180175781,48.6591682434082,48.3349990844727,48.4233322143555,48.5593338012695,48.310001373291,48.5364990234375,48.3366661071777,48.4565010070801,48.5748329162598,48.8730010986328,49.0499992370605,48.4656677246094,48.3983345031738,48.2783317565918,48.375,48.3266677856445,48.5043334960938,48.6548347473145,48.375,48.3466682434082,48.6313323974609,48.3466682434082,48.5510101318359,48.6017684936523,48.5882034301758,48.3540000915527,48.2909278869629,48.2265815734863,48.5895004272461,48.2050018310547,48.6421661376953,48.4589996337891,48.5033340454102,48.6306648254395,49.1920013427734,48.6371650695801,48.3600006103516,48.4508323669434,48.3723335266113,48.4280014038086,48.3451652526855,48.3950004577637,48.5050010681152,48.5439987182617,48.4790000915527,48.7211685180664,48.5856666564941,48.723331451416,48.4560012817383,48.5728340148926,48.5485153198242,48.4081649780273,48.6080017089844,48.5401649475098,48.7849998474121,48.6166648864746,48.4953346252441,48.5491676330566,48.7019500732422,48.6640014648438,48.3816680908203,48.5875015258789,48.5875015258789,48.3699989318848,48.593334197998,48.5573348999023,48.4766654968262,48.3166656494141,48.5099983215332,48.3783340454102,48.3166656494141,48.4099998474121,48.5618324279785,48.4852828979492,48.5136184692383],"begin_longitude":[-124.692497253418,-123.157836914062,-123.199996948242,-123.336669921875,-123.036834716797,-122.929496765137,-123.899169921875,-123.592002868652,-123.435836791992,-123.330169677734,-123.251831054688,-123.925003051758,-123.586334228516,-122.809997558594,-123.205001831055,-123.772331237793,-123.099334716797,-123.271003723145,-123.299003601074,-123.072334289551,-123.927169799805,-123.67733001709,-123.178169250488,-123.179832458496,-123.146331787109,-123.206336975098,-123.242332458496,-123.233329772949,-123.09733581543,-123.410163879395,-123.054496765137,-123.205001831055,-123.179496765137,-123.194999694824,-123.169830322266,-123.446830749512,-123.251998901367,-123.18383026123,-123.015335083008,-122.981666564941,-123.266166687012,-122.869003295898,-123.195335388184,-123.286003112793,-123.50316619873,-122.979499816895,-123.530670166016,-123.153663635254,-123.470664978027,-123.726333618164,-123.339332580566,-123.030166625977,-123.395500183105,-123.268165588379,-123.182830810547,-123.530502319336,-123.306831359863,-123.040000915527,-123.540168762207,-123.175163269043,-123.212669372559,-123.963333129883,-123.201164245605,-123.886329650879,-123.464668273926,-123.857833862305,-123.6943359375,-123.335998535156,-123.438331604004,-124.005500793457,-123.875999450684,-123.331832885742,-123.236000061035,-123.345336914062,-123.200996398926,-123.171333312988,-123.542831420898,-123.397834777832,-123.372665405273,-123.376663208008,-123.720001220703,-123.150001525879,-123.605667114258,-122.955833435059,-123.588996887207,-123.166000366211,-123.267997741699,-123.267997741699,-123.317169189453,-123.317169189453,-123.16633605957,-123.012001037598,-123.593399047852,-123.179168701172,-123.210334777832,-123.236335754395,-122.797668457031,-123.158836364746,-122.797668457031,-122.751335144043,-123.101997375488,-123.101997375488,-124.85066986084,-123.20532989502,-123.063331604004,-123.063331604004,-123.172500610352,-123.098663330078,-123.098663330078,-123.338333129883,-122.928001403809,-122.928001403809,-123.180999755859,-123.124496459961,-123.124496459961,-123.352333068848,-123.510498046875,-123.11833190918,-123.204330444336,-122.945335388184,-123.267669677734,-123.118667602539,-123.257499694824,-123.171333312988,-123.664001464844,-123.393333435059,-123.280830383301,-123.279502868652,-123.12816619873,-123.276168823242,-123.060668945312,-123.082168579102,-123.410003662109,-123.300163269043,-123.497497558594,-123.708999633789,-123.389167785645,-123.508666992188,-123.08683013916,-123.43733215332,-123.844329833984,-123.230331420898,-122.757667541504,-123.286003112793,-123.162002563477,-123.139503479004,-123.138496398926,-124.609497070312,-124.779502868652,-124.22216796875,-124.803337097168,-124.595832824707,-124.487503051758,-123.50366973877,-122.794998168945,-123.60066986084,-123.080833435059,-122.890335083008,-123.199996948242,-123.284164428711,-123.22533416748,-124.268333435059,-123.200668334961,-123.194664001465,-123.227996826172,-123.190002441406,-123.513664245605,-123.166664123535,-124.040664672852,-123.512832641602,-123.227668762207,-123.067665100098,-123.203498840332,-123.298332214355,-123.162666320801,-123.162666320801,-123.16300201416,-123.153999328613,-123.239669799805,-122.923500061035,-122.667251586914,-122.667251586914,-122.930999755859,-123.193496704102,-123.193450927734,-123.03450012207,-123.03450012207,-123.48999786377,-123.241500854492,-123.207000732422,-123.099166870117,-123.161499023438,-123.046501159668,-123.175331115723,-123.601997375488,-123.332664489746,-122.908332824707,-123.21900177002,-123.900001525879,-123.608329772949,-123.196334838867,-123.353332519531,-123.26000213623,-123.328330993652,-123.489334106445,-123.72200012207,-123.439163208008,-123.561996459961,-123.225166320801,-123.053001403809,-123.462669372559,-123.152496337891,-123.203666687012,-123.085670471191,-123.171012878418,-123.030052185059,-123.258331298828,-123.593330383301,-123.227836608887,-124.86833190918,-123.24528503418,-124.966667175293,-123.17749786377,-123.047248840332,-123.208435058594,-123.736663818359,-123.224670410156,-122.950134277344,-123.189270019531,-123.124984741211,-123.059585571289,-123.171813964844,-123.263885498047,-123.075981140137,-123.054718017578,-123.039413452148,-123.066268920898,-123.122665405273,-123.16300201416,-123.055168151855,-123.521667480469,-122.959999084473,-124.154998779297,-123.10033416748,-122.792999267578,-123.107002258301,-123.00333404541,-123.24333190918,-123.526664733887,-123.288330078125,-123.217666625977,-123.19100189209,-123.15966796875,-123.14282989502,-123.036163330078,-122.74666595459,-123.716667175293,-123.279998779297,-123.182334899902,-123.025329589844,-123.077163696289,-123.189834594727,-123.054496765137,-123.207168579102,-123.264999389648,-123.261665344238,-123.158668518066,-123.345001220703,-123.21549987793,-123.261665344238,-123.183334350586,-123.285003662109,-123.196662902832,-123.706665039062,-123.461669921875,-123.290000915527,-123.273330688477,-123.563331604004,-123.373336791992,-123.203330993652,-123.345001220703,-123.275001525879,-123.423332214355,-123.638336181641,-123.119834899902,-123.827018737793,-123.936668395996,-124.309997558594,-124.311668395996,-124.861663818359,-123.132667541504,-124.816665649414,-123.824996948242,-123.192337036133,-123.209335327148,-123.513336181641,-124.598335266113,-123.210166931152,-123.078834533691,-123.175163269043,-123.205833435059,-123.117164611816,-123.209335327148,-123.174835205078,-123.333168029785,-123.168167114258,-123.241668701172,-123.074996948242,-123.013336181641,-123.231666564941,-123.26000213623,-123.288330078125,-123.763336181641,-123.061164855957,-123.408332824707,-123.085670471191,-123.348335266113,-122.801170349121,-123.108329772949,-123.091667175293,-123.264999389648,-123.116668701172,-123.264999389648,-123.407997131348,-123.374664306641,-123.308334350586,-123.434997558594,-123.523330688477,-123.408332824707,-123.306663513184,-123.400413513184,-123.233329772949,-123.446662902832,-123.254997253418,-123.483329772949,-123.535003662109,-123.199996948242,-124.853332519531,-123.458335876465,-123.25,-123.072998046875,-123.25666809082,-123.326667785645,-123.225830078125,-123.933334350586,-123.626663208008,-124.096664428711,-123.665000915527,-123.106163024902,-123.876663208008,-123.106666564941,-123.696662902832,-123.838333129883,-123.598335266113,-123.167167663574,-123.708053588867,-123.217666625977,-123.951667785645,-124.238334655762,-124.561668395996,-124.839996337891,-124.251663208008,-124.298332214355,-123.126663208008,-123.214996337891,-123.281669616699,-123.303833007812,-123.557350158691,-123.122451782227,-123.154335021973,-123.438667297363,-123.116668701172,-123.091003417969,-123.137336730957,-124.86499786377,-123.207832336426,-123.629997253418,-122.759498596191,-123.067497253418,-123.225830078125,-123.313331604004,-123.172500610352,-122.800163269043,-123.168830871582,-124.676170349121,-123.221336364746,-123.107666015625,-123.203834533691,-123.526664733887,-123.171836853027,-123.653335571289,-123.202163696289,-122.750335693359,-123.394996643066,-123.063331604004,-122.973663330078,-123.221664428711,-122.444671630859,-122.755935668945,-123.118667602539,-123.226501464844,-123.089996337891,-123.567832946777,-123.436164855957,-123.298980712891,-123.33194732666,-123.295333862305,-123.136001586914,-123.390930175781,-123.449996948242,-123.207496643066,-123.013236999512,-123.648330688477,-123.468330383301,-123.273330688477,-123.22216796875,-123.199668884277,-123.324668884277,-122.744499206543,-123.24333190918,-123.252433776855,-122.98999786377,-123.236663818359,-123.644996643066,-123.591781616211,-122.87833404541,-123.441665649414,-123.074996948242,-123.271667480469,-123.268333435059,-123.233329772949,-123.203330993652,-122.905670166016,-122.473335266113,-123.205230712891,-122.763633728027,-122.538215637207,-122.832252502441,-123.436668395996,-123.458335876465,-123.688331604004,-122.969833374023,-124.336669921875,-123.125,-123.791664123535,-123.176330566406,-123.50333404541,-123.072998046875,-122.95866394043,-123.603332519531,-123.308334350586,-123.321662902832,-123.20694732666,-123.042999267578,-122.991165161133,-123,-123.291664123535,-123.019836425781,-123.30883026123,-124.038330078125,-123.531669616699,-123.033714294434,-124.816665649414,-123.229507446289,-123.207168579102,-124.376663208008,-122.997932434082,-123.041664123535,-123.153503417969,-123.136169433594,-123.171669006348,-123.239990234375,-123.202835083008,-123.209167480469,-122.970832824707,-123.292465209961,-123.375,-123.202117919922,-123.211929321289,-123.219169616699,-123.831665039062,-123.385665893555,-123.244529724121,-123.172332763672,-123.236129760742,-123.203186035156,-123.552017211914,-123.943168640137,-123.159332275391,-123.58415222168,-123.091415405273,-123.168663024902,-123.334197998047,-123.714996337891,-122.701530456543,-123.46183013916,-123.423332214355,-123.051330566406,-123.26000213623,-123.22233581543,-123.241996765137,-123.295364379883,-123.124664306641,-123.237503051758,-123.251663208008,-123.171669006348,-123.214019775391,-123.468200683594,-123.081253051758,-123.143165588379,-123.483329772949,-123.391670227051,-123.184829711914,-123.718330383301,-123.172996520996,-123.318336486816,-123.139335632324,-123.189834594727,-122.922836303711,-123.256164550781,-123.1875,-125.616668701172,-123.87833404541,-123.315002441406,-123.518333435059,-123.322998046875,-123.226165771484,-124.13166809082,-123.754997253418,-122.766166687012,-123.998336791992,-123.238677978516,-123.216369628906,-123.217330932617,-123.189834594727,-123.458671569824,-122.981117248535,-123.170997619629,-123.458335876465,-123.073501586914,-123.049835205078,-123.148170471191,-123.083168029785,-123.790496826172,-123.245002746582,-123.358329772949,-122.950500488281,-122.986335754395,-123.019500732422,-123.426170349121,-123.268333435059,-123.207168579102,-123.183502197266,-123.140663146973,-123.117164611816,-123.203834533691,-123.303337097168,-123.041496276855,-123.301002502441,-123.169998168945,-123.251502990723,-123.250335693359,-123.230003356934,-123.558334350586,-123,-123.283500671387,-123.18049621582,-122.961853027344,-123.050834655762,-123.110000610352,-123.204666137695,-123.204666137695,-123.338333129883,-123.204833984375,-123.188499450684,-123.141670227051,-123.921669006348,-123.183334350586,-123.415000915527,-123.75333404541,-123.221664428711,-123.184669494629,-123.221450805664,-124.461502075195],"end_latitude":[48.5263328552246,48.468334197998,48.5583343505859,49.1871681213379,48.8523330688477,48.4221649169922,48.9153327941895,49.060001373291,48.923999786377,48.8258323669434,48.34716796875,48.3619995117188,48.2928352355957,48.7190017700195,48.6266670227051,48.3053321838379,48.6838340759277,48.5808334350586,48.5304985046387,48.6266670227051,48.5063323974609,48.308666229248,48.6071662902832,48.4539985656738,48.6786651611328,48.651668548584,48.5828323364258,48.6430015563965,48.5551681518555,48.3935012817383,48.4531669616699,48.5876655578613,48.5716667175293,48.5468330383301,48.6505012512207,48.3578338623047,48.2285003662109,48.3863334655762,48.4431648254395,48.2653350830078,48.5374984741211,48.6361656188965,48.630500793457,48.4625015258789,48.280834197998,48.0746650695801,48.3118324279785,48.4266662597656,48.3380012512207,48.2314987182617,48.8411674499512,48.8063316345215,48.3839988708496,48.5245018005371,48.3634986877441,48.2783317565918,48.4098320007324,48.6264991760254,48.3019981384277,48.6198348999023,48.5041656494141,48.359001159668,48.3981666564941,48.2938346862793,48.2878341674805,48.3726654052734,48.3123321533203,48.2985000610352,48.2716674804688,48.2651672363281,48.2921676635742,48.3236656188965,48.3105010986328,48.2131652832031,48.5019989013672,48.6496658325195,48.3013343811035,48.3245010375977,48.4133338928223,48.3735008239746,48.3564987182617,48.6633338928223,48.3098335266113,48.2746658325195,48.2993316650391,48.6218338012695,48.4671669006348,48.4671669006348,48.4765014648438,48.4765014648438,48.6356658935547,48.5105018615723,48.3063011169434,48.5791664123535,48.6214981079102,48.5133323669434,48.5276679992676,48.4743347167969,48.5276679992676,48.6020011901855,48.5763320922852,48.5763320922852,48.6551666259766,48.5805015563965,48.464168548584,48.464168548584,48.582332611084,48.6959991455078,48.6959991455078,48.4183349609375,48.261833190918,48.261833190918,48.5994987487793,48.6003341674805,48.6003341674805,48.3503341674805,48.2811660766602,48.4444999694824,48.6396675109863,48.4296684265137,48.4566650390625,48.3858337402344,48.5713348388672,48.6496658325195,48.300666809082,48.4025001525879,48.6691665649414,48.5258331298828,48.6988334655762,48.3928337097168,48.6196670532227,48.6590003967285,49.0521659851074,48.3706665039062,48.2886657714844,48.306999206543,48.4109992980957,48.3245010375977,48.7568321228027,48.3301658630371,48.3136672973633,48.3133316040039,48.2910003662109,48.3963317871094,48.4743347167969,48.5690002441406,48.4894981384277,48.529167175293,48.476001739502,48.3904991149902,48.5273323059082,48.5200004577637,48.5366668701172,49.3214988708496,48.4785003662109,48.3091659545898,48.4739990234375,48.7196655273438,48.6581649780273,48.7751655578613,48.6336669921875,48.3466682434082,48.4485015869141,48.484001159668,48.6661682128906,48.5833320617676,48.3095016479492,48.6616668701172,48.300666809082,48.3646659851074,48.6404991149902,48.453498840332,48.6306648254395,48.3400001525879,48.7043342590332,48.7043342590332,48.6631660461426,48.5078315734863,48.4485015869141,48.6650009155273,48.6077842712402,48.6077842712402,48.6213340759277,48.5526657104492,48.5526657104492,48.8848342895508,48.8848342895508,48.5086517333984,48.6829986572266,48.6285018920898,48.5984992980957,48.5466651916504,48.5688323974609,48.5591659545898,48.3083343505859,48.6214981079102,48.5968322753906,48.4376678466797,48.4049987792969,48.2799987792969,48.6881675720215,48.9116668701172,48.348331451416,48.3983345031738,48.3443336486816,48.2436676025391,48.3568344116211,48.2423324584961,48.6730003356934,48.5605010986328,48.3011665344238,48.6713333129883,48.6241683959961,48.4858322143555,48.7604675292969,48.498233795166,48.3633346557617,48.2416648864746,48.701831817627,48.5233345031738,48.5794982910156,48.4433326721191,48.6373329162598,48.6900177001953,48.9111518859863,48.2933349609375,48.617000579834,48.4166984558105,48.5802154541016,48.7170181274414,48.7408981323242,48.6284332275391,48.445068359375,48.5502510070801,48.7278671264648,48.7183151245117,48.6280822753906,48.6526679992676,48.5313339233398,48.3811683654785,48.3916664123535,48.52783203125,48.4033317565918,48.7031669616699,48.4023323059082,48.5750007629395,48.6958351135254,48.3600006103516,48.3816680908203,48.3883323669434,48.4581680297852,48.626335144043,48.6333351135254,48.6254997253418,48.5906677246094,48.6271667480469,48.3050003051758,48.3899993896484,48.6554985046387,48.6163902282715,48.5938339233398,48.6301651000977,48.6891670227051,48.6593322753906,48.4383316040039,48.4850006103516,48.4846649169922,48.3083343505859,48.6980018615723,48.526668548584,48.4723320007324,48.3549995422363,48.5883331298828,48.276668548584,48.2316665649414,48.3233337402344,48.4550018310547,48.2900009155273,48.2633323669434,48.7016677856445,48.4766654968262,48.4049987792969,48.2799987792969,48.25,48.4866676330566,48.3261184692383,48.2716674804688,48.3916664123535,48.5066680908203,48.6733322143555,48.4793319702148,48.5416679382324,48.3400001525879,48.6198348999023,48.4896659851074,48.4033317565918,48.5683326721191,48.7053337097168,48.4926681518555,48.5008316040039,48.5913314819336,48.6311683654785,48.3808326721191,48.6559982299805,48.3400001525879,48.5751647949219,48.5200004577637,48.7316665649414,48.8116683959961,48.5883331298828,48.375,48.7388343811035,48.314998626709,48.7158317565918,48.4133338928223,48.5849990844727,48.3316650390625,48.2586669921875,48.3499984741211,48.658332824707,48.3899993896484,48.8250007629395,48.3899993896484,48.2961654663086,48.3718338012695,48.4333343505859,48.2966651916504,48.3600006103516,48.3400001525879,48.4183349609375,48.1275329589844,48.3950004577637,48.3650016784668,48.3633346557617,48.3233337402344,48.2649993896484,48.5166664123535,48.5283317565918,48.2883338928223,48.5703315734863,48.7533340454102,48.3300018310547,48.3933334350586,48.3061676025391,48.3316650390625,48.2866668701172,48.3250007629395,48.2433319091797,48.4206504821777,48.3233337402344,48.3908348083496,48.2966651916504,48.2383346557617,48.3116683959961,48.4529991149902,48.2930564880371,48.7205009460449,48.283332824707,48.3383331298828,48.5499992370605,48.6416664123535,48.5183334350586,48.3633346557617,48.3718338012695,48.3933334350586,48.4133338928223,48.6868324279785,48.3136100769043,48.4784507751465,48.5763320922852,48.3758316040039,48.5683326721191,48.4724998474121,48.474666595459,48.5683326721191,48.6098327636719,48.2666664123535,48.7089996337891,48.7080001831055,48.6053352355957,48.2299995422363,48.5181655883789,48.8078346252441,48.6193351745605,48.4199981689453,48.4913330078125,48.6433334350586,48.4861679077148,48.3016662597656,48.6548347473145,48.901668548584,48.4173316955566,48.6349983215332,48.2849998474121,48.5589981079102,48.7905006408691,48.5283317565918,47.9449615478516,48.5195007324219,48.6754989624023,48.4994850158691,48.7133331298828,48.9961814880371,48.9536514282227,48.8495330810547,49.5573348999023,48.7371673583984,48.6430015563965,48.6199340820312,48.4049987792969,48.6068344116211,48.7686996459961,48.2966651916504,48.2966651916504,48.5883331298828,48.3746681213379,48.6371650695801,48.3528327941895,48.3199996948242,48.4616661071777,48.4128341674805,48.4366683959961,48.4716682434082,48.2616653442383,48.2633323669434,48.375,48.2550010681152,48.2000007629395,48.3733329772949,48.6933326721191,48.3450012207031,48.2483329772949,48.2784843444824,47.8584175109863,48.5871849060059,48.5057830810547,47.9686508178711,48.2491149902344,48.314998626709,48.3083343505859,48.2733345031738,48.2376670837402,48.5149993896484,48.3556671142578,48.2583351135254,48.6233329772949,48.2683334350586,48.4843330383301,48.5911674499512,48.310001373291,48.2150001525879,48.406665802002,48.5094451904297,48.7929992675781,48.6213340759277,48.3549995422363,48.5233345031738,48.704833984375,48.5706672668457,48.4216651916504,48.3083343505859,48.604850769043,48.5483322143555,48.4711685180664,48.4521675109863,48.5183334350586,48.5676956176758,48.8518333435059,48.9538345336914,48.408332824707,48.4596672058105,48.688777923584,48.6074981689453,48.6313896179199,48.473331451416,48.6840438842773,48.7150001525879,48.9599838256836,48.6496734619141,48.5550003051758,48.3716659545898,48.7131156921387,48.341983795166,48.5923347473145,48.7509498596191,48.4571495056152,48.7841491699219,48.5890007019043,48.5686683654785,48.8869819641113,48.6133995056152,48.5723342895508,48.9307670593262,48.3316650390625,48.3913993835449,48.3202323913574,48.3466682434082,48.5856666564941,48.4483337402344,48.5885009765625,48.6591682434082,48.4660987854004,48.3826675415039,48.716667175293,48.4383316040039,48.3856658935547,48.3043823242188,48.2590827941895,48.5630493164062,48.6570014953613,48.3016662597656,48.4283332824707,48.8559989929199,48.2916679382324,48.5066680908203,48.3233337402344,48.4720001220703,48.4581680297852,48.8585014343262,48.9866676330566,48.4428329467773,48.3400001525879,48.2599983215332,48.401668548584,48.3050003051758,48.5398330688477,48.5233345031738,48.3766670227051,48.2916679382324,48.6953315734863,48.3400001525879,48.5720100402832,48.5635414123535,48.6054992675781,48.2856674194336,48.412956237793,48.2198181152344,48.6221656799316,48.3216667175293,48.6066665649414,48.460334777832,48.4366683959961,48.6563339233398,49.1866683959961,48.693000793457,48.3733329772949,48.5320014953613,48.5416679382324,48.3740005493164,48.3041648864746,48.3916664123535,48.6333351135254,48.5890007019043,48.5688323974609,48.6373329162598,48.607666015625,48.6333351135254,48.5738334655762,48.603832244873,48.4114837646484,48.6713333129883,48.5861663818359,48.7003326416016,48.8333320617676,48.6666679382324,48.5279998779297,48.4933319091797,48.7216682434082,48.6041679382324,48.2649993896484,48.6759986877441,48.5006675720215,48.5258331298828,48.5229988098145,48.7088317871094,48.3766670227051,48.375,48.5476684570312,48.2866668701172,48.314998626709,48.4533348083496,48.6203346252441,48.4211158752441,48.5135841369629],"end_longitude":[-124.860000610352,-123.161003112793,-123.183334350586,-123.308334350586,-123.060333251953,-122.78816986084,-123.90599822998,-123.6181640625,-123.501167297363,-123.336166381836,-123.347503662109,-123.872169494629,-123.53133392334,-122.76000213623,-123.131332397461,-123.850830078125,-123.239501953125,-123.294166564941,-123.290664672852,-123.172668457031,-125.086166381836,-123.763336181641,-123.198669433594,-123.161003112793,-123.15283203125,-123.161163330078,-123.228668212891,-123.237663269043,-123.185668945312,-123.304664611816,-123.061386108398,-123.213836669922,-123.193832397461,-123.243835449219,-123.203330993652,-123.36483001709,-123.329330444336,-123.262832641602,-122.980834960938,-122.966835021973,-123.273330688477,-122.880668640137,-123.127166748047,-123.267333984375,-123.462829589844,-122.895332336426,-123.480331420898,-123.01000213623,-123.380500793457,-123.862167358398,-123.365165710449,-123.053665161133,-123.367164611816,-123.269165039062,-123.143501281738,-123.779502868652,-123.139335632324,-123.082832336426,-123.470497131348,-123.188667297363,-123.200500488281,-124.029167175293,-123.289329528809,-123.806503295898,-123.571502685547,-124.048667907715,-123.682662963867,-123.38500213623,-123.51000213623,-123.960334777832,-123.903167724609,-123.265830993652,-123.22533416748,-123.39282989502,-123.22566986084,-123.163833618164,-123.471168518066,-123.456497192383,-123.394500732422,-123.462501525879,-123.760665893555,-123.071662902832,-123.604331970215,-122.871002197266,-123.525665283203,-123.203834533691,-123.135833740234,-123.135833740234,-123.09033203125,-123.09033203125,-123.224334716797,-123.166168212891,-123.541496276855,-123.200836181641,-123.16300201416,-123.267669677734,-122.720664978027,-123.150665283203,-122.720664978027,-122.744331359863,-123.209831237793,-123.209831237793,-124.87816619873,-123.224670410156,-123.064331054688,-123.064331054688,-123.195831298828,-123.218330383301,-123.218330383301,-123.164329528809,-122.99649810791,-122.99649810791,-123.209999084473,-123.214500427246,-123.214500427246,-123.366996765137,-123.56583404541,-123.054168701172,-123.207168579102,-122.946662902832,-123.25666809082,-123.145500183105,-123.240837097168,-123.163833618164,-123.747329711914,-123.413497924805,-123.352836608887,-123.295829772949,-123.131164550781,-123.297996520996,-123.205169677734,-123.12166595459,-123.321388244629,-123.242332458496,-123.485496520996,-123.847999572754,-123.386169433594,-123.466163635254,-123.102836608887,-123.383163452148,-123.936836242676,-123.211669921875,-122.81916809082,-123.290168762207,-123.094833374023,-123.179336547852,-123.119667053223,-124.633499145508,-124.694000244141,-124.278831481934,-124.858001708984,-124.571662902832,-124.549331665039,-123.537330627441,-122.782669067383,-123.656669616699,-123.09716796875,-122.768501281738,-123.207000732422,-123.34733581543,-123.251663208008,-124.268333435059,-122.044502258301,-123.123497009277,-123.21866607666,-123.200332641602,-123.554168701172,-123.243499755859,-124.016166687012,-123.339668273926,-123.278663635254,-123.087501525879,-123.288833618164,-123.23999786377,-122.991836547852,-122.991836547852,-123.069999694824,-123.153999328613,-123.205001831055,-122.725166320801,-122.699798583984,-122.699798583984,-123.059997558594,-123.178833007812,-123.178833007812,-123.013999938965,-123.013999938965,-122.671798706055,-123.315330505371,-123.175331115723,-123.071662902832,-123.175003051758,-123.013168334961,-123.202331542969,-123.559669494629,-123.347503662109,-122.976165771484,-123.214164733887,-124.01000213623,-123.671669006348,-123.245834350586,-123.478332519531,-123.288330078125,-123.375,-123.500335693359,-123.821502685547,-123.448501586914,-123.601669311523,-123.221664428711,-123.00700378418,-123.564002990723,-123.24333190918,-123.106330871582,-123.115165710449,-123.932716369629,-123.143119812012,-123.203330993652,-123.603332519531,-123.233497619629,-124.833000183105,-123.194183349609,-124.964996337891,-123.216163635254,-123.213912963867,-123.059135437012,-123.669998168945,-123.221168518066,-122.8173828125,-123.200302124023,-122.918899536133,-123.016319274902,-123.185836791992,-123.222450256348,-123.172714233398,-123.001350402832,-123.068565368652,-123.119667053223,-123.12133026123,-123.172500610352,-122.992500305176,-123.430000305176,-122.959663391113,-124.080001831055,-123.08716583252,-122.787666320801,-123.187164306641,-123.013336181641,-123.266670227051,-123.501663208008,-123.300003051758,-123.216163635254,-123.1875,-123.136665344238,-123.151336669922,-123.051170349121,-122.758834838867,-123.581665039062,-123.305000305176,-123.209663391113,-123.053169250488,-123.054832458496,-123.054832458496,-123.251167297363,-123.197830200195,-123.203330993652,-123.181663513184,-123.100997924805,-123.536666870117,-123.248497009277,-123.291664123535,-123.105331420898,-123.180000305176,-123.206665039062,-123.848335266113,-123.513336181641,-123.283332824707,-123.261665344238,-123.514999389648,-123.589996337891,-123.245002746582,-123.205001831055,-123.379997253418,-123.586669921875,-123.714996337891,-123.12133026123,-123.947235107422,-123.805000305176,-124.151664733887,-124.404998779297,-124.893333435059,-123.09349822998,-124.830001831055,-123.74333190918,-123.169166564941,-123.158836364746,-123.154998779297,-124.63166809082,-123.22566986084,-123.175834655762,-122.956497192383,-123.206336975098,-123.221336364746,-123.195335388184,-123.21866607666,-123.391670227051,-123.188667297363,-123.261665344238,-123.230003356934,-123.008331298828,-123.251663208008,-123.360000610352,-123.324996948242,-123.661666870117,-122.790496826172,-123.394996643066,-123.060501098633,-123.483329772949,-122.789169311523,-123.050003051758,-123.183334350586,-123.236663818359,-123.316665649414,-123.236663818359,-123.55916595459,-123.404663085938,-123.080001831055,-123.338333129883,-123.485000610352,-123.464996337891,-123.176666259766,-123.454498291016,-123.171669006348,-123.430000305176,-123.224998474121,-123.464996337891,-123.523330688477,-123.191665649414,-124.858329772949,-123.523330688477,-123.186500549316,-123.068832397461,-123.231666564941,-123.294998168945,-122.926002502441,-124.023330688477,-123.663330078125,-124.125,-123.803337097168,-123.08032989502,-123.903335571289,-123.004837036133,-123.656669616699,-123.761665344238,-123.599998474121,-123.054496765137,-123.567497253418,-123.226669311523,-123.816665649414,-124.180000305176,-124.62166595459,-124.956665039062,-124.538330078125,-124.309997558594,-123.025001525879,-123.218330383301,-123.216667175293,-123.30899810791,-123.57551574707,-123.122146606445,-123.200996398926,-123.353164672852,-123.201110839844,-123.087333679199,-123.101333618164,-124.741668701172,-123.207000732422,-123.589996337891,-122.776496887207,-123.123168945312,-123.222663879395,-123.218887329102,-123.154663085938,-122.869163513184,-123.169998168945,-124.635330200195,-123.185333251953,-123.170829772949,-123.183502197266,-123.485000610352,-123.190002441406,-123.62166595459,-123.18399810791,-122.60033416748,-123.346664428711,-123.02116394043,-123.013336181641,-123.216667175293,-122.520156860352,-122.771751403809,-123.121170043945,-123.220115661621,-123.002182006836,-123.467819213867,-123.593414306641,-123.217987060547,-123.32576751709,-123.15266418457,-123.186668395996,-122.743263244629,-123.311668395996,-123.264999389648,-122.925285339355,-123.608329772949,-123.573333740234,-123.318336486816,-123.372665405273,-123.175331115723,-123.389335632324,-123.356666564941,-123.248336791992,-123.273216247559,-122.976669311523,-123.199996948242,-123.754997253418,-123.581665039062,-123.053337097168,-123.415000915527,-122.843330383301,-123.269996643066,-123.258331298828,-123.290000915527,-123.144996643066,-122.922348022461,-122.473770141602,-123.207153320312,-122.762031555176,-122.59203338623,-122.919052124023,-123.483329772949,-123.516670227051,-123.665000915527,-122.972503662109,-124.548332214355,-123.303497314453,-123.783332824707,-123.171333312988,-123.50333404541,-123.152496337891,-123.053497314453,-123.589996337891,-123.251663208008,-123.328330993652,-123.207496643066,-122.98999786377,-123.158836364746,-123.419998168945,-123.336669921875,-123.174003601074,-123.317832946777,-124.158332824707,-123.561668395996,-123.037246704102,-124.830001831055,-123.099746704102,-123.102500915527,-124.5,-122.907707214355,-123.023330688477,-123.21849822998,-123.03783416748,-123.056663513184,-123.285331726074,-123.233329772949,-123.220832824707,-122.978332519531,-123.292121887207,-123.389999389648,-123.258850097656,-123.167198181152,-123.203666687012,-123.921669006348,-123.393363952637,-123.25,-123.205001831055,-123.29810333252,-123.278579711914,-123.55615234375,-123.957832336426,-123.203002929688,-123.303268432617,-123.092468261719,-123.173835754395,-123.262298583984,-123.683334350586,-122.778266906738,-123.512603759766,-123.394996643066,-123.202331542969,-123.261665344238,-123.22233581543,-123.057662963867,-123.063751220703,-123.192497253418,-123.157836914062,-123.276664733887,-123.257499694824,-123.088417053223,-123.747367858887,-123.005081176758,-123.193000793457,-123.543334960938,-123.448333740234,-123.333831787109,-123.650001525879,-123.172500610352,-123.361663818359,-123.126167297363,-123.087333679199,-122.88516998291,-123.154335021973,-123.258499145508,-125.623336791992,-123.518333435059,-123.223335266113,-123.694999694824,-123.34049987793,-123.172500610352,-124.136665344238,-123.718330383301,-122.782997131348,-123.936668395996,-123.248001098633,-123.220016479492,-123.217529296875,-123.142997741699,-123.207870483398,-122.963050842285,-123.154663085938,-123.964996337891,-123.044166564941,-123.060997009277,-123.019500732422,-123.073501586914,-123.783668518066,-123.253829956055,-123.498336791992,-122.967666625977,-123.178337097168,-123.990837097168,-123.508003234863,-123.305000305176,-123.257667541504,-123.205665588379,-123.1875,-123.044166564941,-123.210830688477,-123.308334350586,-123.189002990723,-123.335998535156,-123.149536132812,-123.237167358398,-123.252166748047,-123.24666595459,-123.571662902832,-123,-123.305168151855,-123.136001586914,-122.858329772949,-123.082168579102,-123.211669921875,-123.092834472656,-123.22533416748,-123.16471862793,-123.175498962402,-123.248001098633,-123.389999389648,-124.11833190918,-123.174163818359,-123.536666870117,-123.816665649414,-123.214996337891,-123.190330505371,-123.188316345215,-124.519096374512]},"columns":[{"id":"id","name":"id","type":"numeric","minWidth":125,"style":"function(rowInfo, colInfo) {\nconst rowIndex = rowInfo.index + 1\n}","html":true,"align":"right","headerStyle":{"font-weight":"normal"}},{"id":"year","name":"year","type":"numeric","minWidth":125,"style":"function(rowInfo, colInfo) {\nconst rowIndex = rowInfo.index + 1\n}","html":true,"align":"right","headerStyle":{"font-weight":"normal"}},{"id":"duration","name":"duration","type":"numeric","minWidth":125,"style":"function(rowInfo, colInfo) {\nconst rowIndex = rowInfo.index + 1\n}","cell":["5,580.00","2,460.00","9,900.00","5,460.00","2,460.00","6,300.00","6,360.00","2,340.00","3,900.00","840.00","2,220.00","2,460.00","3,240.00","3,780.00","2,880.00","4,140.00","10,020.00","2,460.00","2,640.00","4,500.00","9,060.00","3,300.00","4,140.00","1,680.00","600.00","3,780.00","1,800.00","2,220.00","12,300.00","6,000.00","8,460.00","1,140.00","4,740.00","4,500.00","9,600.00","4,080.00","3,660.00","2,700.00","1,200.00","8,640.00","3,120.00","5,520.00","4,200.00","2,100.00","1,440.00","4,500.00","5,820.00","5,220.00","8,100.00","7,380.00","1,740.00","1,200.00","600.00","2,340.00","2,280.00","6,300.00","5,820.00","7,020.00","4,200.00","4,980.00","2,100.00","1,200.00","6,060.00","2,700.00","4,500.00","7,380.00","960.00","3,600.00","3,960.00","5,040.00","1,200.00","3,660.00","2,700.00","9,840.00","3,120.00","9,540.00","420.00","8,160.00","2,520.00","3,360.00","4,260.00","4,200.00","3,300.00","3,900.00","3,660.00","3,720.00","8,700.00","8,700.00","9,960.00","9,960.00","4,740.00","7,320.00","6,300.00","16,200.00","3,960.00","4,560.00","5,160.00","3,300.00","4,560.00","660.00","5,820.00","5,820.00","3,900.00","5,280.00","7,320.00","7,320.00","14,100.00","5,760.00","5,760.00","6,000.00","7,260.00","7,260.00","2,100.00","7,740.00","7,740.00","4,320.00","4,920.00","5,400.00","3,060.00","8,340.00","660.00","3,600.00","5,280.00","9,540.00","4,980.00","2,580.00","5,940.00","2,520.00","4,080.00","6,900.00","7,020.00","5,400.00","7,500.00","4,500.00","3,540.00","3,720.00","1,620.00","2,220.00","6,000.00","4,320.00","3,540.00","1,320.00","8,280.00","900.00","7,260.00","3,660.00","3,600.00","4,800.00","5,100.00","3,540.00","6,660.00","8,640.00","2,400.00","3,360.00","4,320.00","1,500.00","10,500.00","8,520.00","480.00","4,500.00","900.00","4,020.00","8,820.00","6,300.00","1,560.00","4,200.00","4,860.00","6,000.00","2,340.00","6,900.00","4,800.00","15,120.00","5,820.00","1,560.00","7,260.00","7,260.00","5,280.00","6,300.00","6,960.00","8,700.00","7,380.00","7,380.00","7,140.00","4,020.00","4,020.00","8,160.00","8,160.00","9,060.00","4,860.00","8,100.00","6,900.00","12,120.00","7,080.00","3,000.00","2,880.00","6,720.00","6,300.00","2,160.00","4,560.00","2,160.00","5,640.00","6,600.00","1,500.00","2,400.00","1,200.00","2,880.00","420.00","1,740.00","1,200.00","5,220.00","6,240.00","5,100.00","6,600.00","5,280.00","1,320.00","8,220.00","3,240.00","3,660.00","11,460.00","10,080.00","6,540.00","2,760.00","9,540.00","9,000.00","19,800.00","3,600.00","2,700.00","3,360.00","1,320.00","8,040.00","5,280.00","6,180.00","6,900.00","11,580.00","5,760.00","8,580.00","3,720.00","4,020.00","5,760.00","8,100.00","5,700.00","2,700.00","3,180.00","540.00","720.00","7,800.00","1,800.00","4,020.00","2,760.00","2,940.00","2,460.00","1,200.00","11,100.00","900.00","1,500.00","9,300.00","4,560.00","2,040.00","3,600.00","3,180.00","2,100.00","5,820.00","12,120.00","5,640.00","2,700.00","3,960.00","11,760.00","7,860.00","3,540.00","3,540.00","6,300.00","4,260.00","3,540.00","3,540.00","3,120.00","540.00","3,660.00","2,160.00","6,360.00","3,960.00","8,820.00","6,600.00","4,860.00","2,460.00","9,600.00","3,960.00","6,300.00","9,360.00","4,920.00","10,620.00","5,520.00","6,780.00","2,700.00","2,160.00","22,200.00","13,920.00","1,680.00","2,700.00","6,600.00","15,600.00","8,400.00","18,900.00","3,360.00","1,740.00","5,640.00","4,500.00","2,460.00","6,240.00","1,680.00","4,020.00","7,140.00","3,660.00","4,680.00","12,900.00","6,600.00","11,400.00","6,600.00","3,360.00","7,200.00","8,700.00","2,700.00","6,900.00","3,600.00","8,340.00","9,900.00","7,080.00","6,300.00","1,560.00","2,760.00","3,000.00","7,020.00","7,140.00","1,320.00","2,940.00","1,680.00","1,440.00","10,500.00","5,220.00","5,340.00","7,500.00","6,000.00","2,040.00","1,860.00","7,500.00","4,500.00","7,920.00","2,340.00","9,960.00","7,380.00","840.00","10,800.00","3,180.00","3,420.00","2,700.00","22,740.00","5,640.00","3,720.00","1,200.00","1,740.00","4,440.00","16,860.00","18,240.00","1,500.00","22,200.00","720.00","1,500.00","6,000.00","2,580.00","1,020.00","7,200.00","9,300.00","4,800.00","12,000.00","20,100.00","11,880.00","3,600.00","2,880.00","5,100.00","2,700.00","10,200.00","3,480.00","23,700.00","6,600.00","1,200.00","1,500.00","5,100.00","6,000.00","3,900.00","3,360.00","1,500.00","3,060.00","1,500.00","12,000.00","3,780.00","2,700.00","3,900.00","2,580.00","10,980.00","9,600.00","16,500.00","8,580.00","4,800.00","4,500.00","5,700.00","1,500.00","2,100.00","13,800.00","8,100.00","5,220.00","7,200.00","3,300.00","5,820.00","1,800.00","7,920.00","6,300.00","10,200.00","4,500.00","2,700.00","18,000.00","3,300.00","7,200.00","7,200.00","5,700.00","3,480.00","3,300.00","5,520.00","9,240.00","7,200.00","1,980.00","3,000.00","4,500.00","4,740.00","1,200.00","4,200.00","900.00","900.00","5,400.00","14,400.00","4,380.00","8,580.00","1,860.00","7,200.00","10,200.00","9,120.00","12,900.00","1,200.00","600.00","11,700.00","9,000.00","1,260.00","2,520.00","2,520.00","360.00","4,200.00","11,700.00","1,260.00","3,480.00","3,600.00","1,620.00","4,140.00","1,560.00","6,780.00","5,940.00","9,720.00","8,700.00","5,700.00","4,860.00","3,300.00","7,680.00","14,100.00","5,700.00","3,180.00","1,800.00","1,860.00","3,600.00","540.00","600.00","4,980.00","4,020.00","1,500.00","2,220.00","3,660.00","1,140.00","9,300.00","6,120.00","8,040.00","6,000.00","6,300.00","5,100.00","18,900.00","1,740.00","4,500.00","9,900.00","1,920.00","5,880.00","6,300.00","1,800.00","12,660.00","4,380.00","600.00","12,600.00","10,260.00","4,500.00","5,820.00","3,000.00","9,300.00","5,400.00","7,860.00","6,420.00","2,220.00","2,160.00","6,000.00","14,100.00","1,140.00","11,700.00","6,300.00","3,900.00","14,100.00","2,700.00","8,700.00","4,080.00","2,700.00","12,120.00","2,940.00","34,560.00","3,000.00","7,800.00","840.00","3,240.00","7,380.00","1,260.00","1,260.00","1,440.00","960.00","6,300.00","3,960.00","1,500.00","3,300.00","13,920.00","2,280.00","8,520.00","12,960.00","3,300.00","3,000.00","3,180.00","5,760.00","8,100.00","7,200.00","8,700.00","19,020.00","4,320.00","7,800.00","4,920.00","20,700.00","4,860.00","1,800.00","7,080.00","3,000.00","3,600.00","11,580.00","14,400.00","780.00","8,100.00","4,440.00","6,420.00","2,640.00","4,680.00","7,800.00","5,460.00","4,680.00","9,060.00","7,200.00","25,620.00","4,620.00","19,200.00","6,900.00","10,200.00","7,680.00","7,200.00","2,340.00","2,400.00","6,360.00","2,760.00","2,040.00"],"html":true,"align":"right","headerStyle":{"font-weight":"normal"}},{"id":"begin_latitude","name":"begin_latitude","type":"numeric","minWidth":125,"style":"function(rowInfo, colInfo) {\nconst rowIndex = rowInfo.index + 1\n}","cell":["48.51","48.48","48.57","49.09","48.80","48.44","48.85","48.03","48.87","48.80","48.36","48.35","48.31","48.69","48.60","48.31","48.75","48.58","48.50","48.61","48.59","48.29","48.55","48.44","48.68","48.59","48.57","48.62","48.47","48.39","48.40","48.58","48.45","48.52","48.51","48.34","48.24","48.35","48.44","48.30","48.48","48.58","48.62","48.42","48.28","48.10","48.31","48.45","48.28","48.31","48.82","48.80","48.37","48.49","48.38","48.28","48.39","48.58","48.29","48.55","48.55","48.35","48.49","48.29","48.34","48.31","48.31","48.27","48.28","48.28","48.31","48.30","48.31","48.25","48.55","48.57","48.31","48.34","48.43","48.35","48.34","48.62","48.32","48.32","48.31","48.53","48.47","48.47","48.37","48.37","48.62","48.44","48.30","48.45","48.60","48.54","48.48","48.34","48.48","48.59","48.48","48.48","48.66","48.59","48.42","48.42","48.53","48.74","48.74","48.38","48.39","48.39","48.56","48.62","48.62","48.40","48.28","48.49","48.59","48.51","48.43","48.36","48.52","48.57","48.31","48.42","48.56","48.47","48.71","48.43","48.59","48.61","48.98","48.36","48.25","48.30","48.42","48.32","48.82","48.26","48.29","48.29","48.41","48.40","48.50","48.50","48.50","48.51","48.45","48.39","48.52","48.54","48.52","48.36","48.42","48.30","48.47","48.82","48.65","48.73","48.62","48.42","48.45","48.57","48.65","48.63","48.36","48.72","48.33","48.32","48.58","48.42","48.61","48.35","48.63","48.63","48.63","48.51","48.39","48.72","48.56","48.56","48.55","48.61","48.61","48.76","48.76","48.42","48.68","48.59","48.62","48.52","48.51","48.54","48.31","48.61","48.58","48.42","48.36","48.27","48.58","48.85","48.36","48.40","48.36","48.24","48.35","48.23","48.66","48.59","48.33","48.71","48.62","48.47","48.72","48.45","48.39","48.23","48.58","48.50","48.83","48.39","48.46","48.77","49.01","48.34","48.64","48.41","48.58","48.74","48.69","48.54","48.44","48.46","48.63","48.60","48.60","48.65","48.51","48.36","48.31","48.53","48.42","48.69","48.41","48.49","48.68","48.38","48.35","48.41","48.42","48.62","48.67","48.62","48.59","48.67","48.34","48.41","48.57","48.60","48.61","48.55","48.59","48.55","48.41","48.44","48.52","48.38","48.66","48.46","48.55","48.38","48.58","48.30","48.24","48.33","48.44","48.31","48.31","48.71","48.38","48.44","48.27","48.27","48.31","48.32","48.34","48.44","48.45","48.51","48.49","48.51","48.35","48.60","48.29","48.28","48.56","48.66","48.48","48.47","48.69","48.50","48.38","48.65","48.35","48.52","48.48","48.77","48.80","48.53","48.39","48.72","48.34","48.74","48.40","48.70","48.36","48.31","48.46","48.63","48.41","48.75","48.41","48.35","48.28","48.38","48.24","48.34","48.37","48.38","48.15","48.41","48.33","48.35","48.31","48.24","48.58","48.53","48.30","48.67","48.81","48.31","48.40","48.31","48.33","48.28","48.31","48.26","48.46","48.32","48.48","48.33","48.24","48.33","48.53","48.27","48.67","48.28","48.33","48.53","48.61","48.41","48.36","48.47","48.40","48.38","48.64","48.28","48.48","48.52","48.37","48.47","48.47","48.49","48.59","48.59","48.28","48.69","48.69","48.50","48.30","48.55","48.75","48.62","48.42","48.54","48.47","48.47","48.31","48.64","48.92","48.42","48.64","48.29","48.57","48.77","48.50","47.89","48.57","48.69","48.45","48.70","49.07","48.89","48.90","49.53","48.73","48.64","48.58","48.40","48.57","48.78","48.31","48.35","48.49","48.51","48.40","48.37","48.16","48.51","48.55","48.55","48.53","48.25","48.25","48.39","48.25","48.23","48.40","48.67","48.34","48.29","48.28","47.85","48.59","48.50","47.94","48.23","48.35","48.35","48.30","48.23","48.46","48.47","48.26","48.62","48.27","48.47","48.72","48.30","48.18","48.40","48.52","48.81","48.67","48.52","48.49","48.74","48.54","48.37","48.32","48.65","48.53","48.42","48.60","48.47","48.56","48.87","48.94","48.49","48.54","48.64","48.59","48.59","48.54","48.69","48.71","48.86","48.59","48.56","48.36","48.74","48.36","48.52","48.67","48.42","48.74","48.44","48.51","49.07","48.61","48.54","48.82","48.33","48.45","48.37","48.33","48.59","48.42","48.59","48.69","48.40","48.49","48.69","48.42","48.55","48.36","48.25","48.62","48.66","48.33","48.42","48.56","48.31","48.54","48.34","48.46","48.57","48.87","49.05","48.47","48.40","48.28","48.38","48.33","48.50","48.65","48.38","48.35","48.63","48.35","48.55","48.60","48.59","48.35","48.29","48.23","48.59","48.21","48.64","48.46","48.50","48.63","49.19","48.64","48.36","48.45","48.37","48.43","48.35","48.40","48.51","48.54","48.48","48.72","48.59","48.72","48.46","48.57","48.55","48.41","48.61","48.54","48.78","48.62","48.50","48.55","48.70","48.66","48.38","48.59","48.59","48.37","48.59","48.56","48.48","48.32","48.51","48.38","48.32","48.41","48.56","48.49","48.51"],"html":true,"align":"right","headerStyle":{"font-weight":"normal"}},{"id":"begin_longitude","name":"begin_longitude","type":"numeric","minWidth":125,"style":"function(rowInfo, colInfo) {\nconst rowIndex = rowInfo.index + 1\n}","cell":["−124.69","−123.16","−123.20","−123.34","−123.04","−122.93","−123.90","−123.59","−123.44","−123.33","−123.25","−123.93","−123.59","−122.81","−123.21","−123.77","−123.10","−123.27","−123.30","−123.07","−123.93","−123.68","−123.18","−123.18","−123.15","−123.21","−123.24","−123.23","−123.10","−123.41","−123.05","−123.21","−123.18","−123.19","−123.17","−123.45","−123.25","−123.18","−123.02","−122.98","−123.27","−122.87","−123.20","−123.29","−123.50","−122.98","−123.53","−123.15","−123.47","−123.73","−123.34","−123.03","−123.40","−123.27","−123.18","−123.53","−123.31","−123.04","−123.54","−123.18","−123.21","−123.96","−123.20","−123.89","−123.46","−123.86","−123.69","−123.34","−123.44","−124.01","−123.88","−123.33","−123.24","−123.35","−123.20","−123.17","−123.54","−123.40","−123.37","−123.38","−123.72","−123.15","−123.61","−122.96","−123.59","−123.17","−123.27","−123.27","−123.32","−123.32","−123.17","−123.01","−123.59","−123.18","−123.21","−123.24","−122.80","−123.16","−122.80","−122.75","−123.10","−123.10","−124.85","−123.21","−123.06","−123.06","−123.17","−123.10","−123.10","−123.34","−122.93","−122.93","−123.18","−123.12","−123.12","−123.35","−123.51","−123.12","−123.20","−122.95","−123.27","−123.12","−123.26","−123.17","−123.66","−123.39","−123.28","−123.28","−123.13","−123.28","−123.06","−123.08","−123.41","−123.30","−123.50","−123.71","−123.39","−123.51","−123.09","−123.44","−123.84","−123.23","−122.76","−123.29","−123.16","−123.14","−123.14","−124.61","−124.78","−124.22","−124.80","−124.60","−124.49","−123.50","−122.79","−123.60","−123.08","−122.89","−123.20","−123.28","−123.23","−124.27","−123.20","−123.19","−123.23","−123.19","−123.51","−123.17","−124.04","−123.51","−123.23","−123.07","−123.20","−123.30","−123.16","−123.16","−123.16","−123.15","−123.24","−122.92","−122.67","−122.67","−122.93","−123.19","−123.19","−123.03","−123.03","−123.49","−123.24","−123.21","−123.10","−123.16","−123.05","−123.18","−123.60","−123.33","−122.91","−123.22","−123.90","−123.61","−123.20","−123.35","−123.26","−123.33","−123.49","−123.72","−123.44","−123.56","−123.23","−123.05","−123.46","−123.15","−123.20","−123.09","−123.17","−123.03","−123.26","−123.59","−123.23","−124.87","−123.25","−124.97","−123.18","−123.05","−123.21","−123.74","−123.22","−122.95","−123.19","−123.12","−123.06","−123.17","−123.26","−123.08","−123.05","−123.04","−123.07","−123.12","−123.16","−123.06","−123.52","−122.96","−124.15","−123.10","−122.79","−123.11","−123.00","−123.24","−123.53","−123.29","−123.22","−123.19","−123.16","−123.14","−123.04","−122.75","−123.72","−123.28","−123.18","−123.03","−123.08","−123.19","−123.05","−123.21","−123.26","−123.26","−123.16","−123.35","−123.22","−123.26","−123.18","−123.29","−123.20","−123.71","−123.46","−123.29","−123.27","−123.56","−123.37","−123.20","−123.35","−123.28","−123.42","−123.64","−123.12","−123.83","−123.94","−124.31","−124.31","−124.86","−123.13","−124.82","−123.82","−123.19","−123.21","−123.51","−124.60","−123.21","−123.08","−123.18","−123.21","−123.12","−123.21","−123.17","−123.33","−123.17","−123.24","−123.07","−123.01","−123.23","−123.26","−123.29","−123.76","−123.06","−123.41","−123.09","−123.35","−122.80","−123.11","−123.09","−123.26","−123.12","−123.26","−123.41","−123.37","−123.31","−123.43","−123.52","−123.41","−123.31","−123.40","−123.23","−123.45","−123.25","−123.48","−123.54","−123.20","−124.85","−123.46","−123.25","−123.07","−123.26","−123.33","−123.23","−123.93","−123.63","−124.10","−123.67","−123.11","−123.88","−123.11","−123.70","−123.84","−123.60","−123.17","−123.71","−123.22","−123.95","−124.24","−124.56","−124.84","−124.25","−124.30","−123.13","−123.21","−123.28","−123.30","−123.56","−123.12","−123.15","−123.44","−123.12","−123.09","−123.14","−124.86","−123.21","−123.63","−122.76","−123.07","−123.23","−123.31","−123.17","−122.80","−123.17","−124.68","−123.22","−123.11","−123.20","−123.53","−123.17","−123.65","−123.20","−122.75","−123.39","−123.06","−122.97","−123.22","−122.44","−122.76","−123.12","−123.23","−123.09","−123.57","−123.44","−123.30","−123.33","−123.30","−123.14","−123.39","−123.45","−123.21","−123.01","−123.65","−123.47","−123.27","−123.22","−123.20","−123.32","−122.74","−123.24","−123.25","−122.99","−123.24","−123.64","−123.59","−122.88","−123.44","−123.07","−123.27","−123.27","−123.23","−123.20","−122.91","−122.47","−123.21","−122.76","−122.54","−122.83","−123.44","−123.46","−123.69","−122.97","−124.34","−123.12","−123.79","−123.18","−123.50","−123.07","−122.96","−123.60","−123.31","−123.32","−123.21","−123.04","−122.99","−123.00","−123.29","−123.02","−123.31","−124.04","−123.53","−123.03","−124.82","−123.23","−123.21","−124.38","−123.00","−123.04","−123.15","−123.14","−123.17","−123.24","−123.20","−123.21","−122.97","−123.29","−123.38","−123.20","−123.21","−123.22","−123.83","−123.39","−123.24","−123.17","−123.24","−123.20","−123.55","−123.94","−123.16","−123.58","−123.09","−123.17","−123.33","−123.71","−122.70","−123.46","−123.42","−123.05","−123.26","−123.22","−123.24","−123.30","−123.12","−123.24","−123.25","−123.17","−123.21","−123.47","−123.08","−123.14","−123.48","−123.39","−123.18","−123.72","−123.17","−123.32","−123.14","−123.19","−122.92","−123.26","−123.19","−125.62","−123.88","−123.32","−123.52","−123.32","−123.23","−124.13","−123.75","−122.77","−124.00","−123.24","−123.22","−123.22","−123.19","−123.46","−122.98","−123.17","−123.46","−123.07","−123.05","−123.15","−123.08","−123.79","−123.25","−123.36","−122.95","−122.99","−123.02","−123.43","−123.27","−123.21","−123.18","−123.14","−123.12","−123.20","−123.30","−123.04","−123.30","−123.17","−123.25","−123.25","−123.23","−123.56","−123.00","−123.28","−123.18","−122.96","−123.05","−123.11","−123.20","−123.20","−123.34","−123.20","−123.19","−123.14","−123.92","−123.18","−123.42","−123.75","−123.22","−123.18","−123.22","−124.46"],"html":true,"align":"right","headerStyle":{"font-weight":"normal"}},{"id":"end_latitude","name":"end_latitude","type":"numeric","minWidth":125,"style":"function(rowInfo, colInfo) {\nconst rowIndex = rowInfo.index + 1\n}","cell":["48.53","48.47","48.56","49.19","48.85","48.42","48.92","49.06","48.92","48.83","48.35","48.36","48.29","48.72","48.63","48.31","48.68","48.58","48.53","48.63","48.51","48.31","48.61","48.45","48.68","48.65","48.58","48.64","48.56","48.39","48.45","48.59","48.57","48.55","48.65","48.36","48.23","48.39","48.44","48.27","48.54","48.64","48.63","48.46","48.28","48.07","48.31","48.43","48.34","48.23","48.84","48.81","48.38","48.52","48.36","48.28","48.41","48.63","48.30","48.62","48.50","48.36","48.40","48.29","48.29","48.37","48.31","48.30","48.27","48.27","48.29","48.32","48.31","48.21","48.50","48.65","48.30","48.32","48.41","48.37","48.36","48.66","48.31","48.27","48.30","48.62","48.47","48.47","48.48","48.48","48.64","48.51","48.31","48.58","48.62","48.51","48.53","48.47","48.53","48.60","48.58","48.58","48.66","48.58","48.46","48.46","48.58","48.70","48.70","48.42","48.26","48.26","48.60","48.60","48.60","48.35","48.28","48.44","48.64","48.43","48.46","48.39","48.57","48.65","48.30","48.40","48.67","48.53","48.70","48.39","48.62","48.66","49.05","48.37","48.29","48.31","48.41","48.32","48.76","48.33","48.31","48.31","48.29","48.40","48.47","48.57","48.49","48.53","48.48","48.39","48.53","48.52","48.54","49.32","48.48","48.31","48.47","48.72","48.66","48.78","48.63","48.35","48.45","48.48","48.67","48.58","48.31","48.66","48.30","48.36","48.64","48.45","48.63","48.34","48.70","48.70","48.66","48.51","48.45","48.67","48.61","48.61","48.62","48.55","48.55","48.88","48.88","48.51","48.68","48.63","48.60","48.55","48.57","48.56","48.31","48.62","48.60","48.44","48.40","48.28","48.69","48.91","48.35","48.40","48.34","48.24","48.36","48.24","48.67","48.56","48.30","48.67","48.62","48.49","48.76","48.50","48.36","48.24","48.70","48.52","48.58","48.44","48.64","48.69","48.91","48.29","48.62","48.42","48.58","48.72","48.74","48.63","48.45","48.55","48.73","48.72","48.63","48.65","48.53","48.38","48.39","48.53","48.40","48.70","48.40","48.58","48.70","48.36","48.38","48.39","48.46","48.63","48.63","48.63","48.59","48.63","48.31","48.39","48.66","48.62","48.59","48.63","48.69","48.66","48.44","48.49","48.48","48.31","48.70","48.53","48.47","48.35","48.59","48.28","48.23","48.32","48.46","48.29","48.26","48.70","48.48","48.40","48.28","48.25","48.49","48.33","48.27","48.39","48.51","48.67","48.48","48.54","48.34","48.62","48.49","48.40","48.57","48.71","48.49","48.50","48.59","48.63","48.38","48.66","48.34","48.58","48.52","48.73","48.81","48.59","48.38","48.74","48.31","48.72","48.41","48.58","48.33","48.26","48.35","48.66","48.39","48.83","48.39","48.30","48.37","48.43","48.30","48.36","48.34","48.42","48.13","48.40","48.37","48.36","48.32","48.26","48.52","48.53","48.29","48.57","48.75","48.33","48.39","48.31","48.33","48.29","48.33","48.24","48.42","48.32","48.39","48.30","48.24","48.31","48.45","48.29","48.72","48.28","48.34","48.55","48.64","48.52","48.36","48.37","48.39","48.41","48.69","48.31","48.48","48.58","48.38","48.57","48.47","48.47","48.57","48.61","48.27","48.71","48.71","48.61","48.23","48.52","48.81","48.62","48.42","48.49","48.64","48.49","48.30","48.65","48.90","48.42","48.63","48.28","48.56","48.79","48.53","47.94","48.52","48.68","48.50","48.71","49.00","48.95","48.85","49.56","48.74","48.64","48.62","48.40","48.61","48.77","48.30","48.30","48.59","48.37","48.64","48.35","48.32","48.46","48.41","48.44","48.47","48.26","48.26","48.38","48.26","48.20","48.37","48.69","48.35","48.25","48.28","47.86","48.59","48.51","47.97","48.25","48.31","48.31","48.27","48.24","48.51","48.36","48.26","48.62","48.27","48.48","48.59","48.31","48.22","48.41","48.51","48.79","48.62","48.35","48.52","48.70","48.57","48.42","48.31","48.60","48.55","48.47","48.45","48.52","48.57","48.85","48.95","48.41","48.46","48.69","48.61","48.63","48.47","48.68","48.72","48.96","48.65","48.56","48.37","48.71","48.34","48.59","48.75","48.46","48.78","48.59","48.57","48.89","48.61","48.57","48.93","48.33","48.39","48.32","48.35","48.59","48.45","48.59","48.66","48.47","48.38","48.72","48.44","48.39","48.30","48.26","48.56","48.66","48.30","48.43","48.86","48.29","48.51","48.32","48.47","48.46","48.86","48.99","48.44","48.34","48.26","48.40","48.31","48.54","48.52","48.38","48.29","48.70","48.34","48.57","48.56","48.61","48.29","48.41","48.22","48.62","48.32","48.61","48.46","48.44","48.66","49.19","48.69","48.37","48.53","48.54","48.37","48.30","48.39","48.63","48.59","48.57","48.64","48.61","48.63","48.57","48.60","48.41","48.67","48.59","48.70","48.83","48.67","48.53","48.49","48.72","48.60","48.26","48.68","48.50","48.53","48.52","48.71","48.38","48.38","48.55","48.29","48.31","48.45","48.62","48.42","48.51"],"html":true,"align":"right","headerStyle":{"font-weight":"normal"}},{"id":"end_longitude","name":"end_longitude","type":"numeric","minWidth":125,"style":"function(rowInfo, colInfo) {\nconst rowIndex = rowInfo.index + 1\n}","cell":["−124.86","−123.16","−123.18","−123.31","−123.06","−122.79","−123.91","−123.62","−123.50","−123.34","−123.35","−123.87","−123.53","−122.76","−123.13","−123.85","−123.24","−123.29","−123.29","−123.17","−125.09","−123.76","−123.20","−123.16","−123.15","−123.16","−123.23","−123.24","−123.19","−123.30","−123.06","−123.21","−123.19","−123.24","−123.20","−123.36","−123.33","−123.26","−122.98","−122.97","−123.27","−122.88","−123.13","−123.27","−123.46","−122.90","−123.48","−123.01","−123.38","−123.86","−123.37","−123.05","−123.37","−123.27","−123.14","−123.78","−123.14","−123.08","−123.47","−123.19","−123.20","−124.03","−123.29","−123.81","−123.57","−124.05","−123.68","−123.39","−123.51","−123.96","−123.90","−123.27","−123.23","−123.39","−123.23","−123.16","−123.47","−123.46","−123.39","−123.46","−123.76","−123.07","−123.60","−122.87","−123.53","−123.20","−123.14","−123.14","−123.09","−123.09","−123.22","−123.17","−123.54","−123.20","−123.16","−123.27","−122.72","−123.15","−122.72","−122.74","−123.21","−123.21","−124.88","−123.22","−123.06","−123.06","−123.20","−123.22","−123.22","−123.16","−123.00","−123.00","−123.21","−123.21","−123.21","−123.37","−123.57","−123.05","−123.21","−122.95","−123.26","−123.15","−123.24","−123.16","−123.75","−123.41","−123.35","−123.30","−123.13","−123.30","−123.21","−123.12","−123.32","−123.24","−123.49","−123.85","−123.39","−123.47","−123.10","−123.38","−123.94","−123.21","−122.82","−123.29","−123.09","−123.18","−123.12","−124.63","−124.69","−124.28","−124.86","−124.57","−124.55","−123.54","−122.78","−123.66","−123.10","−122.77","−123.21","−123.35","−123.25","−124.27","−122.04","−123.12","−123.22","−123.20","−123.55","−123.24","−124.02","−123.34","−123.28","−123.09","−123.29","−123.24","−122.99","−122.99","−123.07","−123.15","−123.21","−122.73","−122.70","−122.70","−123.06","−123.18","−123.18","−123.01","−123.01","−122.67","−123.32","−123.18","−123.07","−123.18","−123.01","−123.20","−123.56","−123.35","−122.98","−123.21","−124.01","−123.67","−123.25","−123.48","−123.29","−123.38","−123.50","−123.82","−123.45","−123.60","−123.22","−123.01","−123.56","−123.24","−123.11","−123.12","−123.93","−123.14","−123.20","−123.60","−123.23","−124.83","−123.19","−124.96","−123.22","−123.21","−123.06","−123.67","−123.22","−122.82","−123.20","−122.92","−123.02","−123.19","−123.22","−123.17","−123.00","−123.07","−123.12","−123.12","−123.17","−122.99","−123.43","−122.96","−124.08","−123.09","−122.79","−123.19","−123.01","−123.27","−123.50","−123.30","−123.22","−123.19","−123.14","−123.15","−123.05","−122.76","−123.58","−123.31","−123.21","−123.05","−123.05","−123.05","−123.25","−123.20","−123.20","−123.18","−123.10","−123.54","−123.25","−123.29","−123.11","−123.18","−123.21","−123.85","−123.51","−123.28","−123.26","−123.51","−123.59","−123.25","−123.21","−123.38","−123.59","−123.71","−123.12","−123.95","−123.81","−124.15","−124.40","−124.89","−123.09","−124.83","−123.74","−123.17","−123.16","−123.15","−124.63","−123.23","−123.18","−122.96","−123.21","−123.22","−123.20","−123.22","−123.39","−123.19","−123.26","−123.23","−123.01","−123.25","−123.36","−123.32","−123.66","−122.79","−123.39","−123.06","−123.48","−122.79","−123.05","−123.18","−123.24","−123.32","−123.24","−123.56","−123.40","−123.08","−123.34","−123.49","−123.46","−123.18","−123.45","−123.17","−123.43","−123.22","−123.46","−123.52","−123.19","−124.86","−123.52","−123.19","−123.07","−123.23","−123.29","−122.93","−124.02","−123.66","−124.12","−123.80","−123.08","−123.90","−123.00","−123.66","−123.76","−123.60","−123.05","−123.57","−123.23","−123.82","−124.18","−124.62","−124.96","−124.54","−124.31","−123.03","−123.22","−123.22","−123.31","−123.58","−123.12","−123.20","−123.35","−123.20","−123.09","−123.10","−124.74","−123.21","−123.59","−122.78","−123.12","−123.22","−123.22","−123.15","−122.87","−123.17","−124.64","−123.19","−123.17","−123.18","−123.49","−123.19","−123.62","−123.18","−122.60","−123.35","−123.02","−123.01","−123.22","−122.52","−122.77","−123.12","−123.22","−123.00","−123.47","−123.59","−123.22","−123.33","−123.15","−123.19","−122.74","−123.31","−123.26","−122.93","−123.61","−123.57","−123.32","−123.37","−123.18","−123.39","−123.36","−123.25","−123.27","−122.98","−123.20","−123.75","−123.58","−123.05","−123.42","−122.84","−123.27","−123.26","−123.29","−123.14","−122.92","−122.47","−123.21","−122.76","−122.59","−122.92","−123.48","−123.52","−123.67","−122.97","−124.55","−123.30","−123.78","−123.17","−123.50","−123.15","−123.05","−123.59","−123.25","−123.33","−123.21","−122.99","−123.16","−123.42","−123.34","−123.17","−123.32","−124.16","−123.56","−123.04","−124.83","−123.10","−123.10","−124.50","−122.91","−123.02","−123.22","−123.04","−123.06","−123.29","−123.23","−123.22","−122.98","−123.29","−123.39","−123.26","−123.17","−123.20","−123.92","−123.39","−123.25","−123.21","−123.30","−123.28","−123.56","−123.96","−123.20","−123.30","−123.09","−123.17","−123.26","−123.68","−122.78","−123.51","−123.39","−123.20","−123.26","−123.22","−123.06","−123.06","−123.19","−123.16","−123.28","−123.26","−123.09","−123.75","−123.01","−123.19","−123.54","−123.45","−123.33","−123.65","−123.17","−123.36","−123.13","−123.09","−122.89","−123.15","−123.26","−125.62","−123.52","−123.22","−123.69","−123.34","−123.17","−124.14","−123.72","−122.78","−123.94","−123.25","−123.22","−123.22","−123.14","−123.21","−122.96","−123.15","−123.96","−123.04","−123.06","−123.02","−123.07","−123.78","−123.25","−123.50","−122.97","−123.18","−123.99","−123.51","−123.31","−123.26","−123.21","−123.19","−123.04","−123.21","−123.31","−123.19","−123.34","−123.15","−123.24","−123.25","−123.25","−123.57","−123.00","−123.31","−123.14","−122.86","−123.08","−123.21","−123.09","−123.23","−123.16","−123.18","−123.25","−123.39","−124.12","−123.17","−123.54","−123.82","−123.21","−123.19","−123.19","−124.52"],"html":true,"align":"right","headerStyle":{"font-weight":"normal"}}],"defaultPageSize":10,"showPageSizeOptions":false,"pageSizeOptions":[10,25,50,100],"paginationType":"numbers","showPagination":true,"showPageInfo":true,"minRows":1,"striped":true,"height":"auto","theme":{"color":"#333333","backgroundColor":"#FFFFFF","stripedColor":"#fafafa","style":{"fontFamily":"Lato, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif"},"tableStyle":{"borderTopStyle":"solid","borderTopWidth":"2px","borderTopColor":"#D3D3D3"},"headerStyle":{"borderBottomStyle":"solid","borderBottomWidth":"2px","borderBottomColor":"#D3D3D3"}},"elementId":"htayfovfrk","dataKey":"05dfbe5a64665f540b22431b4fe39a9c"},"children":[]},"class":"reactR_markup"},"evals":["tag.attribs.columns.0.style","tag.attribs.columns.1.style","tag.attribs.columns.2.style","tag.attribs.columns.3.style","tag.attribs.columns.4.style","tag.attribs.columns.5.style","tag.attribs.columns.6.style"],"jsHooks":[]}</script>
</div>
</div>
</div>
</figure>
</div>
</div>
</section>
<section id="step-3-creating-data-is-specific-formats-needed-by-sf-terra" class="level3">
<h3 class="anchored" data-anchor-id="step-3-creating-data-is-specific-formats-needed-by-sf-terra">Step 3: Creating data is specific formats needed by {<code>sf</code>} <code>{terra}</code></h3>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The starting Coordinates as an sf object</span></span>
<span id="cb3-2">start_coordinates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-3">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(id, begin_latitude, begin_longitude) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-4">  sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(</span>
<span id="cb3-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"begin_longitude"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"begin_latitude"</span>),</span>
<span id="cb3-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'EPSG:4326'</span></span>
<span id="cb3-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"start"</span>)</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The ending Coordinates as an sf object  </span></span>
<span id="cb3-11">end_coordinates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-12">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(id, end_latitude, end_longitude) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-13">  sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(</span>
<span id="cb3-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_longitude"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_latitude"</span>),</span>
<span id="cb3-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'EPSG:4326'</span></span>
<span id="cb3-16">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end"</span>)</span>
<span id="cb3-18"></span>
<span id="cb3-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compiling starting and ending coordinates into a tibble</span></span>
<span id="cb3-20">orcas_sf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> start_coordinates <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(end_coordinates)</span>
<span id="cb3-22"></span>
<span id="cb3-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extracting the bounding box of that tibble to get our map</span></span>
<span id="cb3-24">bb_orcas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_bbox</span>(orcas_sf)</span>
<span id="cb3-25"></span>
<span id="cb3-26">orcas_sf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Simple feature collection with 1168 features and 2 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: -125.6233 ymin: 47.85333 xmax: -122.0445 ymax: 49.55733
Geodetic CRS:  WGS 84
# A tibble: 1,168 × 3
      id             geometry type 
 * &lt;int&gt;          &lt;POINT [°]&gt; &lt;chr&gt;
 1     1  (-124.6925 48.5105) start
 2     2  (-123.1578 48.4765) start
 3     3    (-123.2 48.57167) start
 4     4 (-123.3367 49.09267) start
 5     5 (-123.0368 48.79683) start
 6     6 (-122.9295 48.43633) start
 7     7 (-123.8992 48.84733) start
 8     8  (-123.592 48.02783) start
 9     9    (-123.4358 48.87) start
10    10 (-123.3302 48.80333) start
# ℹ 1,158 more rows</code></pre>
</div>
</div>
</section>
<section id="step-4-getting-background-maps-for-the-salish-sea-area-usa-and-canada" class="level3">
<h3 class="anchored" data-anchor-id="step-4-getting-background-maps-for-the-salish-sea-area-usa-and-canada">Step 4: Getting background maps for the Salish Sea area: USA and Canada</h3>
<p>For this, we first convert our <code>sf</code> object on Map of USA and Canada, shown in Figure&nbsp;2 (a) into a <strong><code>SpatVector</code></strong>. In the <strong>{terra}</strong> package in R, a <code>SpatVector</code> is the main class used to represent and work with vector data in geographic information system (GIS) contexts. A <code>SpatVector</code> can store points, lines, polygons, or any combination of these geometries, along with associated attributes (data linked to these geometries). We can create a <code>SpatVector</code> from:</p>
<ul>
<li><p>Shapefiles (widely used for vector data in GIS)</p></li>
<li><p>Other vector file formats like GeoJSON, KML, or GPKG.</p></li>
<li><p>R objects such as data frames or matrices that contain coordinate information.</p></li>
</ul>
<p>The reason to create a <code>SpatVector</code> is for performing <strong>spatial operations</strong> like buffering, intersecting, or spatial joins.The <code>terra::vect()</code> is the method to create these objects from various file formats or other R objects.</p>
<p>Then, we use the <code>terra::crop()</code> to <strong>crop</strong> USA and Canada map to a specified geographic extent Figure&nbsp;2 (b) defined by bounding box of the <code>sf</code> objects of orcas created in previous step. When applied to a <code>SpatVector</code> object (vector data), <code>terra::crop()</code> trims the geometries (points, lines, or polygons) so that only the portions within a specified spatial extent remain. Lastly, we re-convert the cropped <code>SpatVector</code> back into an <code>sf</code> object, shown in Figure&nbsp;2 (c)</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract country borders data</span></span>
<span id="cb5-2">base_map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rgeoboundaries<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gb_adm0</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"USA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Canada"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">  rmapshaper<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ms_simplify</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># checking the size</span></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># object.size(base_map) |&gt; print(units = "Mb")</span></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4.3 Mb</span></span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(base_map) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(</span>
<span id="cb5-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> usmap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">usmap_crs</span>()</span>
<span id="cb5-13">  )</span>
<span id="cb5-14"></span>
<span id="cb5-15">sea <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crop</span>(terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vect</span>(base_map), bb_orcas)</span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(sea) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>()</span>
<span id="cb5-19"></span>
<span id="cb5-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Finally, reconvert the Cropped area back into an sf object</span></span>
<span id="cb5-21">sea_sf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sea <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>()</span>
<span id="cb5-23"></span>
<span id="cb5-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(sea_sf) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>()</span></code></pre></div>
</details>
<div id="fig-basemap" class="cell quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-basemap-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<div id="fig-basemap-1" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-basemap-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://aditya-dahiya.github.io/visage/index.html/geocomputation/computing_sea_routes_files/figure-html/fig-basemap-1.png" class="img-fluid figure-img" data-ref-parent="fig-basemap" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-basemap-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(a) Map of entire USA and Canada from {rgeoboundaries}
</figcaption>
</figure>
</div>
</div>
<div class="cell-output-display">
<div id="fig-basemap-2" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-basemap-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://aditya-dahiya.github.io/visage/index.html/geocomputation/computing_sea_routes_files/figure-html/fig-basemap-2.png" class="img-fluid figure-img" data-ref-parent="fig-basemap" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-basemap-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(b) Using the terra::crop() from {terra} to focus on Salish Sea area
</figcaption>
</figure>
</div>
</div>
<div class="cell-output-display">
<div id="fig-basemap-3" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-basemap-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://aditya-dahiya.github.io/visage/index.html/geocomputation/computing_sea_routes_files/figure-html/fig-basemap-3.png" class="img-fluid figure-img" data-ref-parent="fig-basemap" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-basemap-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(c) The same Salish Sea area plotted as an sf object
</figcaption>
</figure>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-basemap-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Background Map of the Salish Sea Area in 2 steps: (4.1) Getting map of USA and Canada from {rgeoboundaries}, and (4.2) Cropping out the map of Salish Sea area
</figcaption>
</figure>
</div>
</div>
</section>
<section id="step-5-converting-into-rasters-to-plot-compute-distances-and-intersections" class="level3">
<h3 class="anchored" data-anchor-id="step-5-converting-into-rasters-to-plot-compute-distances-and-intersections">Step 5: Converting into rasters to plot compute distances and intersections</h3>
<p><strong><code>terra::rast()</code></strong> function is used to create a raster object or load an existing raster dataset (e.g., GeoTIFF, ASCII, or other raster formats). A raster is a grid of cells (pixels) where each cell has a value representing information such as elevation, temperature, land cover, etc. We use it here to Create an empty raster, defining the number of rows, columns, extent, and coordinate reference system (CRS) to create a raster template.</p>
<p><strong><code>terra::rasterize()</code></strong> function is then used to convert vector data (points, lines, polygons) into raster format. This process assigns values from vector geometries to raster cells, typically based on whether the geometries overlap with the cells or using attributes from the vector data. For example, here we are Rasterizing polygons: i.e., for each land types: USA, Canada or other, we can rasterize it so that each raster cell represents one of these three.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert vector to raster and set highly diffferent pixel values based on whether an area is sea or land (i.e. not sea)</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 5.1: Generate an empty raster defining the resolution by</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#           number of rows and columns, and a CRS from sea_sf</span></span>
<span id="cb6-5">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rast</span>(sea_sf, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncols =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrows =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_spatraster</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> r)</span>
<span id="cb6-9"></span>
<span id="cb6-10">rr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rasterize</span>(sea_sf, r, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shapeISO"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shapeISO =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(</span>
<span id="cb6-12">    shapeISO <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CAN'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'USA'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign value 1 to land</span></span>
<span id="cb6-13">    <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>                         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign value 1000 to sea</span></span>
<span id="cb6-14">  ))</span>
<span id="cb6-15"></span>
<span id="cb6-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_spatraster</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> rr)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-rast1-1" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-rast1-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://aditya-dahiya.github.io/visage/index.html/geocomputation/computing_sea_routes_files/figure-html/fig-rast1-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-rast1-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: The empty raster of 500 X 500 created using terra::rast()
</figcaption>
</figure>
</div>
</div>
<div class="cell-output-display">
<div id="fig-rast1-2" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-rast1-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://aditya-dahiya.github.io/visage/index.html/geocomputation/computing_sea_routes_files/figure-html/fig-rast1-2.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-rast1-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: The raster is enhanced by adding the polygons data from the salish sea area map we cropped in the last step.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="step-6-computing-the-distance-between-starting-and-ending-coordinates" class="level3">
<h3 class="anchored" data-anchor-id="step-6-computing-the-distance-between-starting-and-ending-coordinates">Step 6: Computing the distance between starting and ending coordinates</h3>
<ol type="1">
<li><p>The <code>gdistance::transition()</code> function is used to create a transition matrix from raster data. The Transition Matrix is a sparse matrix where each element represents the movement “cost” or “resistance” from one cell to its neighboring cells. The transition matrix enables the calculation of the most efficient path (e.g., the least-cost path) from one location to another. Thus, it is used for <strong>calculating least-cost paths, commute distances</strong>, and other kinds of spatial movement analyses.</p>
<p><strong>The transition matrix helps in Movement Modeling</strong>: It is used to model movement across a landscape, such as wildlife migration, water flow, or human navigation, where each raster cell’s value might represent an obstacle or ease of travel. <em>Note that we had assigned different value to land and sea raster points.</em></p></li>
<li><p>After creating a transition layer using <code>gdistance::transition()</code>, the <code>gdistance::geoCorrection()</code> function is used to apply geographic corrections to account for the varying distances between raster cells due to the curvature of the Earth or grid layout. This step is crucial when working with spatial data in a geographic coordinate system (e.g., latitude and longitude) where distances between cells are not uniform.</p></li>
<li><p>The <code>gdistance::shortestPath()</code> is then used to compute the <strong>shortest (or least-cost) path</strong> between two points on a raster grid, based on a transition matrix that describes the “cost” or “resistance” of moving from one cell to another. The function calculates this path by minimizing the total cost or resistance, taking into account the values in the transition matrix, which typically represent the difficulty or ease of moving through each cell.</p></li>
</ol>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For quick rendering of this .qmd file, I have not evaluated </span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this chunk of code, and rather saved the results of "distance"</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># as an .rds file and reloaded it.</span></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute transition matrix from raster pixels</span></span>
<span id="cb7-6">r_trans <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gdistance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transition</span>(</span>
<span id="cb7-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">raster</span>(rr), </span>
<span id="cb7-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transitionFunction =</span> mean, </span>
<span id="cb7-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">directions =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb7-10">)</span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># object.size(r_trans) |&gt; print(units = "Mb")</span></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 24.7 Mb</span></span>
<span id="cb7-13"></span>
<span id="cb7-14">r_trans <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geoCorrection</span>(r_trans)</span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># object.size(r_trans) |&gt; print(units = "Mb")</span></span>
<span id="cb7-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 24.7 Mb</span></span>
<span id="cb7-17"></span>
<span id="cb7-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the shortest path between start and end for the </span></span>
<span id="cb7-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># first line of the transition matrix, and convert into sf object:</span></span>
<span id="cb7-20"></span>
<span id="cb7-21">distance <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gdistance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shortestPath</span>(</span>
<span id="cb7-22">  r_trans, </span>
<span id="cb7-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(begin_longitude),</span>
<span id="cb7-24">    df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(begin_latitude)), </span>
<span id="cb7-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(end_longitude),</span>
<span id="cb7-26">    df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(end_latitude)), </span>
<span id="cb7-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">output =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SpatialLines"</span></span>
<span id="cb7-28">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>()</span>
<span id="cb7-30"></span>
<span id="cb7-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Repeat the process for the other points / IDs</span></span>
<span id="cb7-32"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(df1)) {</span>
<span id="cb7-33">  </span>
<span id="cb7-34">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gdistance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shortestPath</span>(</span>
<span id="cb7-35">  r_trans, </span>
<span id="cb7-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(begin_longitude),</span>
<span id="cb7-37">    df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(begin_latitude)), </span>
<span id="cb7-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(end_longitude),</span>
<span id="cb7-39">    df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(end_latitude)), </span>
<span id="cb7-40">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">output =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SpatialLines"</span></span>
<span id="cb7-41">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>()</span>
<span id="cb7-43">  </span>
<span id="cb7-44">  distance <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> distance <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-45">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(temp)</span>
<span id="cb7-46"></span>
<span id="cb7-47">}</span>
<span id="cb7-48"></span>
<span id="cb7-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a CRS to the newly created sf object </span></span>
<span id="cb7-50">distance <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> distance <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-51">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_set_crs</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(base_map))</span>
<span id="cb7-52"></span>
<span id="cb7-53"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">saveRDS</span>(distance, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orcas_distance.rds"</span>))</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">distance <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orcas_distance.rds"</span>))</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Displaying the shortest paths</span></span>
<span id="cb8-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-5">  </span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(</span>
<span id="cb8-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sea_sf, </span>
<span id="cb8-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, </span>
<span id="cb8-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#725428"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-10"></span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(</span>
<span id="cb8-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> distance</span>
<span id="cb8-13">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-15">  </span>
<span id="cb8-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb8-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#b6e3db"</span>)</span>
<span id="cb8-18">  )</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-shortpaths" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-shortpaths-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://aditya-dahiya.github.io/visage/index.html/geocomputation/computing_sea_routes_files/figure-html/fig-shortpaths-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-shortpaths-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: The shortest paths computed using {gdistance} show us that many of them are passing over land - these seem to be errors in the data
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="step-7-check-whether-paths-intersect-land-and-retain-only-non-intersecting-routes" class="level3">
<h3 class="anchored" data-anchor-id="step-7-check-whether-paths-intersect-land-and-retain-only-non-intersecting-routes">Step 7: Check whether paths intersect land, and retain only non-intersecting routes</h3>
<p>The <code>sf::st_intersects()</code> function is used to determine whether two spatial geometries intersect. It checks if any part of one geometry touches or overlaps with another.</p>
<p>The <code>sf::st_length()</code> function is then used to calculate the length of geometries represented in <code>sf</code> (simple features) objects. It returns the length of each geometry in the specified unit of measurement.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test if path is only sea. Each logical test if for each ID in the </span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df1 tibble</span></span>
<span id="cb9-3">test_intersect <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lengths</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_intersects</span>(distance, base_map)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute distance for each </span></span>
<span id="cb9-6">dist_encounter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_length</span>(distance)</span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a second tibble of distance &amp; paths for each encounter</span></span>
<span id="cb9-9">df2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> distance <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> start_coordinates<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">whether_intersect_land =</span> test_intersect) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist_encounter =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(dist_encounter)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(year, id, duration)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed =</span> dist_encounter <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> duration)</span>
<span id="cb9-15">  </span>
<span id="cb9-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A vector of IDs whose paths dont intersect land</span></span>
<span id="cb9-17">ids_to_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(whether_intersect_land <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(id)</span>
<span id="cb9-20"></span>
<span id="cb9-21">df2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-22">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">relocate</span>(geometry, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.after =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geometry =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(geometry)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-25">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gt::cols_hide(geometry) |&gt; </span></span>
<span id="cb9-27">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(</span>
<span id="cb9-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(dist_encounter, speed),</span>
<span id="cb9-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb9-30">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-31">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt</span>(</span>
<span id="cb9-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> geometry,</span>
<span id="cb9-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fns =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_sub</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)}</span>
<span id="cb9-34">  )</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="lxliwkopeo" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#lxliwkopeo table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#lxliwkopeo thead, #lxliwkopeo tbody, #lxliwkopeo tfoot, #lxliwkopeo tr, #lxliwkopeo td, #lxliwkopeo th {
  border-style: none;
}

#lxliwkopeo p {
  margin: 0;
  padding: 0;
}

#lxliwkopeo .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#lxliwkopeo .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#lxliwkopeo .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#lxliwkopeo .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#lxliwkopeo .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lxliwkopeo .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lxliwkopeo .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lxliwkopeo .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#lxliwkopeo .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#lxliwkopeo .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#lxliwkopeo .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#lxliwkopeo .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#lxliwkopeo .gt_spanner_row {
  border-bottom-style: hidden;
}

#lxliwkopeo .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#lxliwkopeo .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#lxliwkopeo .gt_from_md > :first-child {
  margin-top: 0;
}

#lxliwkopeo .gt_from_md > :last-child {
  margin-bottom: 0;
}

#lxliwkopeo .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#lxliwkopeo .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#lxliwkopeo .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#lxliwkopeo .gt_row_group_first td {
  border-top-width: 2px;
}

#lxliwkopeo .gt_row_group_first th {
  border-top-width: 2px;
}

#lxliwkopeo .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lxliwkopeo .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#lxliwkopeo .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#lxliwkopeo .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lxliwkopeo .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lxliwkopeo .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#lxliwkopeo .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#lxliwkopeo .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#lxliwkopeo .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lxliwkopeo .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lxliwkopeo .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#lxliwkopeo .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lxliwkopeo .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#lxliwkopeo .gt_left {
  text-align: left;
}

#lxliwkopeo .gt_center {
  text-align: center;
}

#lxliwkopeo .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#lxliwkopeo .gt_font_normal {
  font-weight: normal;
}

#lxliwkopeo .gt_font_bold {
  font-weight: bold;
}

#lxliwkopeo .gt_font_italic {
  font-style: italic;
}

#lxliwkopeo .gt_super {
  font-size: 65%;
}

#lxliwkopeo .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#lxliwkopeo .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#lxliwkopeo .gt_indent_1 {
  text-indent: 5px;
}

#lxliwkopeo .gt_indent_2 {
  text-indent: 10px;
}

#lxliwkopeo .gt_indent_3 {
  text-indent: 15px;
}

#lxliwkopeo .gt_indent_4 {
  text-indent: 20px;
}

#lxliwkopeo .gt_indent_5 {
  text-indent: 25px;
}

#lxliwkopeo .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#lxliwkopeo div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="id" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">id</th>
<th id="whether_intersect_land" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">whether_intersect_land</th>
<th id="dist_encounter" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">dist_encounter</th>
<th id="year" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">year</th>
<th id="duration" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">duration</th>
<th id="speed" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">speed</th>
<th id="geometry" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">geometry</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_right" headers="id">1</td>
<td class="gt_row gt_center" headers="whether_intersect_land">FALSE</td>
<td class="gt_row gt_right" headers="dist_encounter">12,981.52</td>
<td class="gt_row gt_right" headers="year">2024</td>
<td class="gt_row gt_right" headers="duration">5580</td>
<td class="gt_row gt_right" headers="speed">2.33</td>
<td class="gt_row gt_left" headers="geometry">c(-124.689260978699, -124.703576316833, -124.71789</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="id">2</td>
<td class="gt_row gt_center" headers="whether_intersect_land">FALSE</td>
<td class="gt_row gt_right" headers="dist_encounter">757.91</td>
<td class="gt_row gt_right" headers="year">2024</td>
<td class="gt_row gt_right" headers="duration">2460</td>
<td class="gt_row gt_right" headers="speed">0.31</td>
<td class="gt_row gt_left" headers="geometry">c(-123.157519798279, -123.157519798279, -123.15751</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="id">3</td>
<td class="gt_row gt_center" headers="whether_intersect_land">FALSE</td>
<td class="gt_row gt_right" headers="dist_encounter">1,845.91</td>
<td class="gt_row gt_right" headers="year">2024</td>
<td class="gt_row gt_right" headers="duration">9900</td>
<td class="gt_row gt_right" headers="speed">0.19</td>
<td class="gt_row gt_left" headers="geometry">c(-123.200465812683, -123.193308143616, -123.18615</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="id">4</td>
<td class="gt_row gt_center" headers="whether_intersect_land">FALSE</td>
<td class="gt_row gt_right" headers="dist_encounter">11,256.39</td>
<td class="gt_row gt_right" headers="year">2024</td>
<td class="gt_row gt_right" headers="duration">5460</td>
<td class="gt_row gt_right" headers="speed">2.06</td>
<td class="gt_row gt_left" headers="geometry">c(-123.336461524963, -123.336461524963, -123.33646</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="id">5</td>
<td class="gt_row gt_center" headers="whether_intersect_land">FALSE</td>
<td class="gt_row gt_right" headers="dist_encounter">6,932.37</td>
<td class="gt_row gt_right" headers="year">2024</td>
<td class="gt_row gt_right" headers="duration">2460</td>
<td class="gt_row gt_right" headers="speed">2.82</td>
<td class="gt_row gt_left" headers="geometry">c(-123.035839424133, -123.035839424133, -123.03583</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="id">6</td>
<td class="gt_row gt_center" headers="whether_intersect_land">FALSE</td>
<td class="gt_row gt_right" headers="dist_encounter">11,305.02</td>
<td class="gt_row gt_right" headers="year">2024</td>
<td class="gt_row gt_right" headers="duration">6300</td>
<td class="gt_row gt_right" headers="speed">1.79</td>
<td class="gt_row gt_left" headers="geometry">c(-122.928474388123, -122.921316719055, -122.91415</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="id">7</td>
<td class="gt_row gt_center" headers="whether_intersect_land">TRUE</td>
<td class="gt_row gt_right" headers="dist_encounter">7,742.05</td>
<td class="gt_row gt_right" headers="year">2024</td>
<td class="gt_row gt_right" headers="duration">6360</td>
<td class="gt_row gt_right" headers="speed">1.22</td>
<td class="gt_row gt_left" headers="geometry">c(-123.901917381287, -123.901917381287, -123.90191</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="id">8</td>
<td class="gt_row gt_center" headers="whether_intersect_land">TRUE</td>
<td class="gt_row gt_right" headers="dist_encounter">130,922.24</td>
<td class="gt_row gt_right" headers="year">2024</td>
<td class="gt_row gt_right" headers="duration">2340</td>
<td class="gt_row gt_right" headers="speed">55.95</td>
<td class="gt_row gt_left" headers="geometry">c(-123.594137611389, -123.594137611389, -123.59413</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="id">9</td>
<td class="gt_row gt_center" headers="whether_intersect_land">FALSE</td>
<td class="gt_row gt_right" headers="dist_encounter">7,738.62</td>
<td class="gt_row gt_right" headers="year">2024</td>
<td class="gt_row gt_right" headers="duration">3900</td>
<td class="gt_row gt_right" headers="speed">1.98</td>
<td class="gt_row gt_left" headers="geometry">c(-123.436668891907, -123.443826560974, -123.45098</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="id">10</td>
<td class="gt_row gt_center" headers="whether_intersect_land">FALSE</td>
<td class="gt_row gt_right" headers="dist_encounter">2,816.18</td>
<td class="gt_row gt_right" headers="year">2024</td>
<td class="gt_row gt_right" headers="duration">840</td>
<td class="gt_row gt_right" headers="speed">3.35</td>
<td class="gt_row gt_left" headers="geometry">c(-123.329303855896, -123.329303855896, -123.32930</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="step-8-plotting-the-final-routes-with-ggplot2" class="level3">
<h3 class="anchored" data-anchor-id="step-8-plotting-the-final-routes-with-ggplot2">Step 8: Plotting the final routes with ggplot2</h3>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">land <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#725428"</span></span>
<span id="cb10-2">sea <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#b6e3db"</span></span>
<span id="cb10-3">orc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey10"</span></span>
<span id="cb10-4"></span>
<span id="cb10-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(</span>
<span id="cb10-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sea_sf,</span>
<span id="cb10-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geometry =</span> geometry),</span>
<span id="cb10-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> land, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb10-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb10-11">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(</span>
<span id="cb10-13">    df2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>whether_intersect_land),</span>
<span id="cb10-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb10-15">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> speed,</span>
<span id="cb10-16">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geometry =</span> geometry</span>
<span id="cb10-17">    ),</span>
<span id="cb10-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> orc</span>
<span id="cb10-19">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(</span>
<span id="cb10-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> F</span>
<span id="cb10-22">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_alpha</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">range =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb10-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> sea, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb10-28">  )</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-final1" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-final1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://aditya-dahiya.github.io/visage/index.html/geocomputation/computing_sea_routes_files/figure-html/fig-final1-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-final1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: The final map with routes shown that don’t intersect land. The alpha (transparency) of each route is mapped to speed.
</figcaption>
</figure>
</div>
</div>
</div>
<hr>
<p>Another Method: geoc</p>


</section>

 ]]></description>
  <guid>https://aditya-dahiya.github.io/visage/index.html/geocomputation/computing_sea_routes.html</guid>
  <pubDate>Sat, 19 Oct 2024 18:30:00 GMT</pubDate>
</item>
<item>
  <title>Driving Directions using Open Street Maps Routing Service</title>
  <dc:creator>Aditya Dahiya</dc:creator>
  <link>https://aditya-dahiya.github.io/visage/index.html/geocomputation/osm_driving_directions.html</link>
  <description><![CDATA[ 




<p>Inspired from the <a href="https://www.andrewheiss.com/blog/2023/06/01/geocoding-routing-openstreetmap-r/">tutorial</a> from <a href="https://www.andrewheiss.com/">Andrew Heiss</a>, titled “<strong><em>How to make fancy road trip maps with R and OpenStreetMap</em></strong>”.</p>



 ]]></description>
  <guid>https://aditya-dahiya.github.io/visage/index.html/geocomputation/osm_driving_directions.html</guid>
  <pubDate>Wed, 16 Oct 2024 18:30:00 GMT</pubDate>
</item>
<item>
  <title>Creating Maps in R with ggplot2 having background Raster Images using ggmap</title>
  <dc:creator>Aditya Dahiya</dc:creator>
  <link>https://aditya-dahiya.github.io/visage/index.html/geocomputation/ggmap_rasters.html</link>
  <description><![CDATA[ 




<p>On this page, we’ll explore how to create visually appealing maps in R using the <code>ggmap</code> package <span class="citation" data-cites="ggmap">(<strong>ggmap?</strong>)</span>, a popular extension of <code>ggplot2</code> designed for easy integration of raster map tiles from online mapping services. Let us see how to set up the required tools and generate maps with custom base layers, using both <code>ggmap</code> and functions like <code>get_stadiamap()</code>.</p>
<p><code>ggmap</code> is an extension of the <code>ggplot2</code> package that enables users to overlay data on geographic maps. It retrieves raster map tiles from sources such as <a href="https://developers.google.com/maps">Google Maps</a>, <a href="https://maps.stamen.com/">Stamen Maps</a>, and <a href="https://stadiamaps.com/">Stadia Maps</a>, making it easier to create maps and integrate geospatial data visualization with familiar <code>ggplot2</code> workflows.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggmap)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span>
<span id="cb1-4"></span>
<span id="cb1-5">sysfonts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">font_add_google</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Saira Condensed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caption_font"</span>)</span>
<span id="cb1-6">sysfonts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">font_add_google</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Saira"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"body_font"</span>)</span>
<span id="cb1-7">showtext<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">showtext_auto</span>()</span></code></pre></div>
</details>
</div>
<p><strong>About the Sample Dataset:</strong> The <code>lnd</code> dataset, part of the <code>spData</code> package <span class="citation" data-cites="spData">(Bivand, Nowosad, and Lovelace 2024)</span> in R, contains polygons representing the large administrative boroughs of London. This dataset includes attributes such as the borough name (<code>NAME</code>), official code (<code>GSS_CODE</code>), land area in hectares (<code>HECTARES</code>), and geometry data in the <code>sfc_MULTIPOLYGON</code> format. You can explore the dataset’s source <a href="https://github.com/Robinlovelace/Creating-maps-in-R">here</a>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data on The boroughs of London</span></span>
<span id="cb2-2">spData<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>lnd <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb2-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb2-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> NAME,</span>
<span id="cb2-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> NAME,</span>
<span id="cb2-7">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> HECTARES</span>
<span id="cb2-8">    )</span>
<span id="cb2-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(</span>
<span id="cb2-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span></span>
<span id="cb2-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf_text</span>(</span>
<span id="cb2-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">check_overlap =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb2-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caption_font"</span></span>
<span id="cb2-16">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_grey</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb2-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span></span>
<span id="cb2-21">  )</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-1" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://aditya-dahiya.github.io/visage/index.html/geocomputation/ggmap_rasters_files/figure-html/fig-1-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: A basic map of the boroughs of London drawn with geom_sf() and data from {spData} plotted using {ggplot2} and geom_sf()
</figcaption>
</figure>
</div>
</div>
</div>
<section id="getting-started-with-ggmap" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-ggmap">Getting Started with <code>ggmap</code></h2>
<p>Before creating maps, you’ll need to install the <a href="https://github.com/dkahle/ggmap"><code>ggmap</code> package</a>, which is available through CRAN.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggmap"</span>)</span></code></pre></div>
<p>To ensure that you can access map tiles from Stadia Maps, you will need an API key. This key allows you to authenticate and use their map services within your R scripts.</p>
<p>Setting Up API Key Authentication: To access Stadia Maps, follow these steps:</p>
<ol type="1">
<li><a href="https://client.stadiamaps.com/signup/">Sign up</a> for a free Stadia Maps account and generate an API key.</li>
<li>Save the API key securely in your environment using the <code>register_stadiamaps()</code> function.</li>
</ol>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">register_stadiamaps</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YOUR-API-KEY-HERE"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">write =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<p>By saving the key in your <code>.Renviron</code> file, you ensure it will automatically load in new R sessions, avoiding the need to hard code it into your script.</p>
</section>
<section id="retrieving-a-base-map-with-get_stadiamap" class="level2">
<h2 class="anchored" data-anchor-id="retrieving-a-base-map-with-get_stadiamap">Retrieving a Base-map with <code>get_stadiamap()</code></h2>
<p>Once your API key is set, you can start generating maps using functions such as <code>get_stadiamap()</code> etc. This function allows you to fetch base maps by specifying the bounding box coordinates of your area of interest. The function will return a <code>ggmap</code> object that you can further customize using <code>ggplot2</code> syntax.</p>
</section>
<section id="exploring-various-ggmap-functions" class="level2">
<h2 class="anchored" data-anchor-id="exploring-various-ggmap-functions">Exploring various <code>ggmap</code> Functions</h2>
<section id="base-functions-get_stadiamap-ggmap" class="level3">
<h3 class="anchored" data-anchor-id="base-functions-get_stadiamap-ggmap"><strong>Base functions: <code>get_stadiamap()</code> &amp; <code>ggmap()</code></strong></h3>
<p>Fetches map tiles from Stadia Maps and <a href="https://stadiamaps.com/stamen">Stamen Design</a>, after choosing the design from <a href="https://docs.stadiamaps.com/themes/"><strong>Map Style Library</strong></a>, for a specified bounding box or region and zoom level, and displays them using <code>ggmap()</code>. The various map styles available under the <code>get_stadiamap(maptype = "your-map-type-here")</code> argument are: —</p>
<table class="table">
<colgroup>
<col style="width: 21%">
<col style="width: 78%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Map Type</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>stamen_terrain</code></td>
<td>A detailed terrain map highlighting elevation and natural features like hills and rivers.</td>
</tr>
<tr class="even">
<td><code>stamen_toner</code></td>
<td>A bold, high-contrast map design with stark black-and-white features, ideal for print or urban areas.</td>
</tr>
<tr class="odd">
<td><code>stamen_toner_lite</code></td>
<td>A lighter version of the toner map, providing clearer backgrounds with less emphasis on contrast.</td>
</tr>
<tr class="even">
<td><code>stamen_watercolor</code></td>
<td>A unique, artistic map style that looks like a watercolor painting, perfect for creative visualizations.</td>
</tr>
<tr class="odd">
<td><code>stamen_terrain_background</code></td>
<td>A terrain map focusing only on the background without labels, useful for overlaying custom data.</td>
</tr>
<tr class="even">
<td><code>stamen_toner_background</code></td>
<td>A simplified toner map background without labels, ideal for adding data layers on top.</td>
</tr>
<tr class="odd">
<td><code>stamen_terrain_lines</code></td>
<td>Terrain map with added contour lines to emphasize elevation changes.</td>
</tr>
<tr class="even">
<td><code>stamen_terrain_labels</code></td>
<td>Terrain map that includes place labels, enhancing context for geographic features.</td>
</tr>
<tr class="odd">
<td><code>stamen_toner_lines</code></td>
<td>Toner map with a focus on roads and paths, outlined clearly against the background.</td>
</tr>
<tr class="even">
<td><code>stamen_toner_labels</code></td>
<td>A toner map style with added labels for places, roads, and other key features.</td>
</tr>
</tbody>
</table>
<p><strong>Note:</strong> It is very important is to add the <code>inherit.aes = FALSE</code> argument in <code>geom_sf()</code> if overlaying <code>sf</code> objects on the the {ggmap} raster tiles.</p>
<p>The R code below demonstrates how to overlay spatial geometries from <code>sf</code> objects onto raster base maps using <code>ggmap</code> and <code>geom_sf()</code>. The <code>get_stadiamap()</code> function from <strong>Stadia Maps</strong> is used to fetch raster tiles (specifically with the <code>stamen_toner_lines</code> style) for the London area, which are then transformed into EPSG:3857 (Web Mercator) using a custom function <code>ggmap_bbox()</code> (credits: <a href="https://stackoverflow.com/users/1736291/andyteucher">andyteuchner</a> on <a href="https://stackoverflow.com/questions/47749078/how-to-put-a-geom-sf-produced-map-on-top-of-a-ggmap-produced-raster">stackoverflow post</a>) to ensure the map tiles align correctly with the CRS of the spatial data. The London Boroughs dataset (<code>spData::lnd</code>) is similarly projected to EPSG:3857, and the boroughs are visualized with semi-transparent polygons and labeled with their names using <code>geom_sf()</code> and <code>geom_sf_text()</code>. This approach ensures the raster background and vector geometries are properly aligned.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Obtain the bounding box of London Boroughs</span></span>
<span id="cb5-2">london_bbox <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_bbox</span>(spData<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>lnd)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A bounding box in the format c(lowerleftlon, lowerleftlat, upperrightlon, upperrightlat)</span></span>
<span id="cb5-5">london_bbox <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb5-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> london_bbox<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>xmin,</span>
<span id="cb5-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> london_bbox<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>xmax,</span>
<span id="cb5-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bottom =</span> london_bbox<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ymin,</span>
<span id="cb5-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top =</span> london_bbox<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ymax</span>
<span id="cb5-10">)</span>
<span id="cb5-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(london_bbox) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>)</span>
<span id="cb5-12"></span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Getting the map tiles</span></span>
<span id="cb5-15">london_base1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_stadiamap</span>(</span>
<span id="cb5-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bbox =</span> london_bbox,</span>
<span id="cb5-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zoom =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb5-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">maptype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stamen_toner_lines"</span></span>
<span id="cb5-19">)</span>
<span id="cb5-20"></span>
<span id="cb5-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(london_base1)</span>
<span id="cb5-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># As we can see the raster images have no CRS system</span></span>
<span id="cb5-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Empirically we know that the coordinate refence system is 3857</span></span>
<span id="cb5-24"></span>
<span id="cb5-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Getting London Boroughs Data</span></span>
<span id="cb5-26">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> spData<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>lnd <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_transform</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3857</span>))</span>
<span id="cb5-28"></span>
<span id="cb5-29"></span>
<span id="cb5-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Starting the process of Overlaying the geom_sf() data on this</span></span>
<span id="cb5-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Most important is to add the inherit.aes = FALSE argument.</span></span>
<span id="cb5-32"></span>
<span id="cb5-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step: 1: </span></span>
<span id="cb5-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Credits: https://stackoverflow.com/questions/47749078/how-to-put-a-geom-sf-produced-map-on-top-of-a-ggmap-produced-raster by andyteucher on StackOverFlow (https://stackoverflow.com/users/1736291/andyteucher)</span></span>
<span id="cb5-35"></span>
<span id="cb5-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a function to fix the bbox to be in CRS EPSG:3857</span></span>
<span id="cb5-37">ggmap_bbox <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(map) {</span>
<span id="cb5-38">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the bounding box (in lat/lon) from the ggmap</span></span>
<span id="cb5-39">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to a numeric vector, and set the names to what</span></span>
<span id="cb5-40">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sf::st_bbox expects:</span></span>
<span id="cb5-41">  map_bbox <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(</span>
<span id="cb5-42">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(map, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bb"</span>)),</span>
<span id="cb5-43">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ymin"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xmin"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ymax"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xmax"</span>)</span>
<span id="cb5-44">  )</span>
<span id="cb5-45"></span>
<span id="cb5-46">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Coonvert the bbox to an sf polygon, transform it to 3857,</span></span>
<span id="cb5-47">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and convert back to a bbox (convoluted, but it works)</span></span>
<span id="cb5-48">  bbox_3857 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_bbox</span>(</span>
<span id="cb5-49">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_transform</span>(</span>
<span id="cb5-50">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sfc</span>(</span>
<span id="cb5-51">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_bbox</span>(map_bbox, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4326</span>)</span>
<span id="cb5-52">        ), </span>
<span id="cb5-53">      <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3857</span></span>
<span id="cb5-54">    )</span>
<span id="cb5-55">  )</span>
<span id="cb5-56"></span>
<span id="cb5-57">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Overwrite the bbox of the ggmap object with the transformed coordinates</span></span>
<span id="cb5-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(map, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bb"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ll.lat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bbox_3857[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ymin"</span>]</span>
<span id="cb5-59">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(map, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bb"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ll.lon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bbox_3857[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xmin"</span>]</span>
<span id="cb5-60">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(map, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bb"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ur.lat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bbox_3857[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ymax"</span>]</span>
<span id="cb5-61">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(map, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bb"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ur.lon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bbox_3857[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xmax"</span>]</span>
<span id="cb5-62">  map</span>
<span id="cb5-63">}</span>
<span id="cb5-64"></span>
<span id="cb5-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the function to convert our downloaded Raster Files into </span></span>
<span id="cb5-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the new CRS and new bounding box CRS</span></span>
<span id="cb5-67">london_base2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggmap_bbox</span>(london_base1)</span>
<span id="cb5-68"></span>
<span id="cb5-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plotting the actual map</span></span>
<span id="cb5-70"></span>
<span id="cb5-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Starting with base map tiles</span></span>
<span id="cb5-72">g <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggmap</span>(london_base2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-73">  </span>
<span id="cb5-74">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plotting the actual sf object data on london boroughs</span></span>
<span id="cb5-75">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(</span>
<span id="cb5-76">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df,</span>
<span id="cb5-77">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> NAME),</span>
<span id="cb5-78">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb5-79">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb5-80">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpha</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb5-81">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-82">  </span>
<span id="cb5-83">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plotting names of London Boroughs on top of the geom_sf</span></span>
<span id="cb5-84">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf_text</span>(</span>
<span id="cb5-85">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df,</span>
<span id="cb5-86">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> NAME),</span>
<span id="cb5-87">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb5-88">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caption_font"</span>,</span>
<span id="cb5-89">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontface =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>,</span>
<span id="cb5-90">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">check_overlap =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb5-91">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-92">  </span>
<span id="cb5-93">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forcing the ggplot2 map to be in CRS: 3857</span></span>
<span id="cb5-94">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(</span>
<span id="cb5-95">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3857</span>)</span>
<span id="cb5-96">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-97">  </span>
<span id="cb5-98">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Some theme elements</span></span>
<span id="cb5-99">  ggthemes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_map</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-100">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb5-101">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span></span>
<span id="cb5-102">  )</span>
<span id="cb5-103"></span>
<span id="cb5-104"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(</span>
<span id="cb5-105">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geocomputation"</span>, </span>
<span id="cb5-106">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggmap_rasters"</span>, </span>
<span id="cb5-107">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fig_2.png"</span>),</span>
<span id="cb5-108">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot =</span> g</span>
<span id="cb5-109">)</span></code></pre></div>
</details>
</div>
<div id="fig-2" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://aditya-dahiya.github.io/visage/index.html/geocomputation/ggmap_rasters/fig_2.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: “Overlapping a geom_sf() object over and above ggmap raster tiles obtained from Stadia Maps”
</figcaption>
</figure>
</div>
</section>
<section id="section" class="level3">
<h3 class="anchored" data-anchor-id="section"></h3>
<p><strong><code>qmplot()</code></strong>: Similar to <code>qplot()</code>, but automatically adds a background map. It simplifies mapping by automatically computing the bounding box.</p>
</section>
<section id="work-in-progress-other-ggmap-functions" class="level3">
<h3 class="anchored" data-anchor-id="work-in-progress-other-ggmap-functions"><strong>Work-in-Progress: Other <code>ggmap()</code> functions</strong></h3>
<ol type="1">
<li><strong><code>make_bbox()</code></strong>: Computes a bounding box for a dataset based on latitude and longitude columns.</li>
<li><strong><code>geom_hdr()</code> and <code>geom_labeldensity2d()</code></strong>: Useful for plotting density and contour maps on top of ggmap layers, commonly used for visualizing spatial data like crime maps.</li>
<li><strong><code>get_googlemap()</code></strong>: Retrieves maps from Google Maps by specifying a location and zoom level. Different map types are supported (e.g., satellite, terrain, hybrid).</li>
<li><strong><code>geocode()</code> and <code>revgeocode()</code></strong>: Provides geocoding and reverse geocoding services using Google Maps API to convert addresses to coordinates and vice versa.</li>
<li><strong><code>mutate_geocode()</code></strong>: Works like <code>mutate()</code> in dplyr, adding latitude and longitude columns to a data frame based on an address.</li>
<li><strong><code>trek()</code> and <code>route()</code></strong>: Calculates routes between locations using Google’s routing API, which can be plotted as paths on a map using <code>geom_path()</code>.</li>
<li><strong><code>mapdist()</code></strong>: Computes distances and travel times between multiple locations. It’s vectorized for multiple origin-destination pairs.</li>
<li><strong><code>register_google()</code></strong>: Registers a Google Maps API key for use with the ggmap package, allowing access to various Google Maps services. The key can be saved for future sessions.</li>
</ol>



</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-spData" class="csl-entry">
Bivand, Roger, Jakub Nowosad, and Robin Lovelace. 2024. <span>“spData: Datasets for Spatial Analysis.”</span> <a href="https://CRAN.R-project.org/package=spData">https://CRAN.R-project.org/package=spData</a>.
</div>
</div></section></div> ]]></description>
  <guid>https://aditya-dahiya.github.io/visage/index.html/geocomputation/ggmap_rasters.html</guid>
  <pubDate>Tue, 15 Oct 2024 18:30:00 GMT</pubDate>
</item>
<item>
  <title>Starting Document</title>
  <dc:creator>Aditya Dahiya</dc:creator>
  <link>https://aditya-dahiya.github.io/visage/index.html/geocomputation/chapter1.html</link>
  <description><![CDATA[ 







 ]]></description>
  <guid>https://aditya-dahiya.github.io/visage/index.html/geocomputation/chapter1.html</guid>
  <pubDate>Mon, 14 Oct 2024 18:30:00 GMT</pubDate>
</item>
</channel>
</rss>
