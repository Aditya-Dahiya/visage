---
title: "3 types of Cartograms in R with {sf} and {cartogram}"
subtitle: "Creating Cartograms -- contiguous, non-contiguous and packed-circles -- in R with {cartogram}, and making non-overlapping text annotations in maps, and custom callouts in Quarto."
date: "2024-10-25"
author: "Aditya Dahiya"
bibliography: references.bib
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
execute: 
  error: false
  message: false
  warning: false
  eval: false
filters:
  - social-share
  - custom-callout
share:
  permalink: "https://aditya-dahiya.github.io/visage/geocomputation/cartogram_types.html"
  description: "Visualizing Information and Spatial Analysis with ggplot2 Extensions"
  twitter: true
  linkedin: true
  email: true
  mastodon: true
  facebook: true
custom-callout:    
  keylearning:
    icon: false
    title: "Key Learnings"
    color: "#baddff"
comments:
  giscus: 
    repo: Aditya-Dahiya/visage
---

# Introduction

On this webpage, we’ll explore how to create cartograms in `R`, using population data from the [CIA World Factbook](https://www.cia.gov/the-world-factbook/). Cartograms are a unique type of thematic map that reshape geographic regions to represent data variables rather than their actual geographic area. By resizing areas to reflect variables like population, cartograms reveal spatial patterns and disparities in a more visually striking way, making them a powerful tool for storytelling with data.

Unlike traditional maps, where region size is based solely on geographical area, cartograms alter these sizes to communicate insights about underlying data trends. This approach offers several advantages: it enhances visualization by making patterns more apparent, communicates complex data to a broad audience effectively, and highlights disparities between regions, drawing attention to areas of interest. Additionally, cartograms facilitate comparative analysis by allowing viewers to easily compare regions resized according to a single variable.

To create cartograms in R, we’ll use a combination of packages, including [{`cartogram`}](https://cran.r-project.org/package=cartogram) [@cartogram]for cartogram-specific functions, [{`sf`}](https://cran.r-project.org/package=sf) [@sf] for handling spatial data, [{](https://cran.r-project.org/package=tmap)[`ggplot2`](https://cran.r-project.org/package=ggplot2)[}](https://cran.r-project.org/package=tmap) [@ggplot2] for flexible mapping and plotting, and {[`tidyverse`](https://www.tidyverse.org/)} [@tidyverse] for streamlined data manipulation. The `{cartogram}` package provides various cartogram types, including

-   *Dorling cartograms* (@fig-cartodorling) that represent regions as resized circles,

-   *Contiguous area cartograms* (@fig-cartocont) that maintain topological relationships between regions, and

-   *Non-contiguous area cartograms* (@fig-cartoncont) that allow flexibility in resizing by ignoring boundaries.

### About the Data

The dataset used in this tutorial is sourced from the [CIA World Factbook](https://www.cia.gov/the-world-factbook/), specifically the [Country Comparisons from 2014](https://www.cia.gov/the-world-factbook/references/guide-to-country-comparisons). This resource provides essential statistics on population, area, and other key indicators for 265 global entities. Through the [{`openintro`}](https://openintrostat.github.io/openintro/) and [{`usdatasets`}](https://cran.r-project.org/package=usdatasets) R packages, we access population metrics that allow us to create cartograms—maps where countries’ sizes are distorted according to population values rather than geographic area. This dataset, which required no additional cleaning, enables the visualization of demographic distributions, highlighting countries' population density and size in an intuitive way for mapping exercises in `R`.

::: keylearning
1.  **Creating Cartograms with `{cartogram}`**, such as contiguous, non-contiguous, and Dorling cartograms to visually [communicate data](https://r-graph-gallery.com/cartogram.html) through shape transformations.

2.  **Custom Callouts in Quarto** with the [Custom Callout Extension](https://quarto.thecoatlessprofessor.com/custom-callout/), which enhances document structure and readability, such as the present call-out.

3.  **Repelling Overlapping Text Labels with `{ggrepel}`** with [`geom_sf()`](https://ggplot2.tidyverse.org/reference/ggsf.html) and [`geom_sf_text()`](https://yutani.rbind.io/post/geom-sf-text-and-geom-sf-label-are-coming/) for improved clarity on maps.
:::

### Step 1: Getting libraries and raw data

In this step, we are setting up our workspace to create a population-based cartogram using data from the [CIA World Factbook](https://www.cia.gov/the-world-factbook/). We begin by loading essential libraries, including `{tidyverse}` for data manipulation and visualization, `{sf}` for handling spatial data, and `{cartogram}` for creating cartograms. We load the `cia_factbook` dataset and use the `{countrycode}` package to add ISO3 country codes for mapping. The `world_map` object is created using the `{rnaturalearth}` package, which provides geographic data in `sf` format. Additionally, we set up custom fonts using `{showtext}` and define color palettes for filling and labeling countries, enhancing the map’s readability and aesthetic.

```{r}
#| label: setup

# Load essential libraries
library(tidyverse)         # For data wrangling and visualization
library(sf)                # For handling spatial objects in R
library(ggrepel)           # For repelling overlapping labels in plots
library(cartogram)         # For creating different types of cartograms
library(showtext)          # For using custom Google Fonts in plots

# Load and prepare the CIA Factbook data
cia_data <- openintro::cia_factbook |> 
  mutate(
    # Convert country names to ISO3 codes for easy matching with 
    # Geographical Maps data
    iso_a3 = countrycode::countrycode(country, "country.name", "iso3c") 
  )

# Retrieve the world map data
world_map <- rnaturalearth::ne_countries(
  scale = "small",      # Use small scale for manageable detail
  returnclass = "sf"    # Return as an 'sf' object for spatial handling
  )

# Add a custom Google font for captions
font_add_google("Saira Extra Condensed", "caption_font")
showtext_auto()           # Automatically apply custom fonts

# Display the size of the world_map object in KB
# object.size(world_map) |> print(units = "Kb")

# Define colors for country fill and text
# Fill color palette for countries
fill_palette <- paletteer::paletteer_d("khroma::stratigraphy")

# Define a darker color palette for text labels
colour_palette <- fill_palette |> 
  str_sub(start = 1, end = 7) |>  # Truncate hex codes to 6 characters
  colorspace::darken(0.5)         # Darken colors by 50% for better contrast

```

### Step 2: Converting the data into a "tidy" tibble.

In this code snippet, we refine the `world_map` data and visualize it in the Mercator projection using the [ggplot2](https://ggplot2.tidyverse.org/) package. We start by selecting relevant columns, grouping by country name, and keeping the entry with the highest population estimate for countries with multiple entries. After joining this map data with the `cia_data` dataset, we filter out any countries without population data and apply the Pseudo-Mercator projection (CRS 3857) using `{sf}`'s `st_transform()` function. Finally, we use `ggplot2` to plot the world map with `geom_sf()` and set a minimal theme and informative title and caption.

```{r}
#| label: tbl-worlddata1


# Filter, join, and transform world map data for plotting

world_map <- world_map |> 
  select(name, geometry, pop_est, iso_a3) |>      # Select relevant columns
  group_by(name) |>                               # Group by country name
  slice_max(order_by = pop_est, n = 1) |>         # Retain country entry with max population estimate
  left_join(cia_data) |>                          # Join with CIA Factbook data
  filter(!is.na(population)) |>                   # Filter out entries without population data
  st_transform(crs = 3857) |>                     # Transform to Psuedo-Mercator projection (CRS = 3857)
  ungroup()
```

```{r}
#| label: tbl-worlddata
#| tbl-cap: "The sf object morld map to be used in the susequent analysis"
#| echo: false
#| eval: true


library(gt)
library(tidyverse)
library(sf)

world_map <- structure(list(name = c("Afghanistan", "Albania", "Algeria", 
"Angola", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", 
"Bahamas", "Bangladesh", "Belarus", "Belgium", "Belize", "Benin", 
"Bhutan", "Bolivia", "Bosnia and Herz.", "Botswana", "Brazil"
), geometry = structure(list(structure(list(list(structure(c(7404817.43784272, 
7466841.90773884, 7550801.01904786, 7584816.10813113, 7665398.44668658, 
7702893.85521774, 7738795.79517523, 7805341.80405654, 7822484.53456021, 
7834254.34214762, 7882179.20383418, 7942437.62733278, 7930334.1692859, 
7964009.85531557, 7953632.17550732, 7997708.55172176, 8036492.54133775, 
8085901.57230954, 8155272.10490807, 8231931.17426772, 8346735.69529507, 
8366553.38206859, 8301750.40920829, 8245162.14076383, 8117420.03554093, 
7997892.63473388, 7932888.32107907, 7959206.43921807, 7971931.17743086, 
7916487.67521802, 7921135.77127404, 7890526.21791499, 7784632.46519307, 
7828386.6961363, 7757537.74684668, 7710268.68089079, 7716418.20401441, 
7672882.57164808, 7631722.76065691, 7546647.64608691, 7534480.90950461, 
7451603.28589179, 7389550.05302503, 7385655.54679987, 7240983.55705607, 
7163455.84598299, 7140922.93478069, 7074382.67849351, 6963018.20875514, 
6776490.34413061, 6877454.1236842, 6868336.26199014, 6784026.24243926, 
6775311.06233421, 6738845.3681521, 6786448.08456746, 6737993.98422105, 
6768580.52720358, 6813956.98969112, 6927484.43482189, 7011420.5357544, 
7034672.52122278, 7122543.39653935, 7185281.18810744, 7207503.45922678, 
7301328.2694666, 7318770.13486496, 7371285.56666627, 7404817.43784272, 
4489795.60644026, 4488865.6022824, 4459336.39794548, 4442329.22951382, 
4487212.06268839, 4460195.23366921, 4524336.46229896, 4521417.70692314, 
4542080.7258411, 4598995.0021154, 4648350.70054128, 4616065.29385453, 
4572825.83847664, 4566123.43959859, 4448260.78598599, 4402673.80902061, 
4431901.20376583, 4445737.84671773, 4508365.88023768, 4498031.72542806, 
4497810.80452757, 4457665.83771705, 4442012.2046095, 4416296.31897286, 
4400150.90549177, 4371017.42992545, 4310861.81333684, 4252645.33220811, 
4184720.41867152, 4127672.87812431, 4075749.08314643, 4027305.74427249, 
4031503.98998282, 3942990.44151707, 3909315.57385286, 3829380.43925392, 
3750376.39988535, 3713557.15640931, 3725736.66859309, 3708687.4149527, 
3672182.38727708, 3672411.3000864, 3598886.46165762, 3489154.13267159, 
3435882.42772468, 3447120.3245497, 3419096.61207793, 3435390.16636129, 
3416255.99756658, 3481618.93953802, 3598491.58611445, 3682133.93814672, 
3704133.50373587, 3787345.69309459, 3892817.97714652, 3965709.82359506, 
3985438.93578919, 4083192.96461498, 4252578.07849266, 4200724.40130052, 
4218925.14595463, 4280985.34068246, 4301716.36222627, 4343647.57484262, 
4454704.21925835, 4481735.89099685, 4531669.61983092, 4494139.12804327, 
4489795.60644026), dim = c(69L, 2L)))), class = c("XY", "MULTIPOLYGON", 
"sfg")), structure(list(list(structure(c(2339940.18459555, 2337708.17807361, 
2301530.11359794, 2294851.35181446, 2243089.50984402, 2224163.47516044, 
2221937.22123262, 2160275.16476662, 2150587.79625381, 2159993.2876543, 
2175185.88874831, 2156455.44226514, 2156455.36770916, 2148965.5647095, 
2197229.82944966, 2204305.52022803, 2234260.10386456, 2257977.22344921, 
2284604.34357582, 2292095.7608844, 2292095.85922679, 2277950.23026421, 
2293758.35893001, 2339940.18459555, 4989171.52917649, 4950588.33598881, 
4929358.1038593, 4881941.07188352, 4811596.66985637, 4821718.04005496, 
4853598.83081967, 4902451.18893159, 4972191.0420299, 5072941.51032108, 
5119126.56675379, 5142654.26763277, 5142654.74118567, 5190346.36605352, 
5264639.66489017, 5236187.90006196, 5249565.28401685, 5209074.14517953, 
5193671.3901174, 5139344.94864246, 5139344.2375083, 5088616.63547817, 
5025068.35537104, 4989171.52917649), dim = c(24L, 2L)))), class = c("XY", 
"MULTIPOLYGON", "sfg")), structure(list(list(structure(c(-966742.962112797, 
-964597.244502777, -964649.017849934, -965598.195881178, -785829.629357917, 
-674666.500414058, -583551.162008874, -540973.336564971, -410818.018105068, 
-406037.612384077, -341637.321112786, -291279.112109755, -145594.665799302, 
-125184.461830518, -154516.939292988, -192967.278449515, -199594.266885829, 
-241553.68846089, -134541.056180922, -14188.1581163934, 56091.2843544771, 
163296.628537756, 351958.705584059, 536087.738456912, 592233.057153456, 
697062.579961566, 816014.721355744, 861287.637148961, 937417.467848767, 
914804.020328672, 932452.979115658, 906249.91285923, 837621.464903307, 
847435.390486946, 938475.945168455, 939436.628387956, 1008065.07634387, 
1055546.98828253, 1091558.22752847, 1097609.95655191, 1078005.11576115, 
1086047.24235313, 1071901.61339055, 1081611.99227986, 1037432.06937112, 
1103253.25139221, 1107435.38732381, 1147018.9875237, 1199062.70660645, 
1286927.82932889, 1335778.85867019, 954330.094587276, 632023.750741981, 
475046.962156803, 351561.776589177, 350284.700692595, 298735.704704917, 
229428.450641802, 202960.765055451, -172551.321886601, -548063.408828651, 
-966742.962112797, 3173002.35031109, 3197314.39135868, 3205725.60544024, 
3355461.14347279, 3449577.435729, 3469108.75618891, 3503606.78973917, 
3568136.89699842, 3619373.56656036, 3715793.43265782, 3727200.78974178, 
3775701.41579206, 3797868.56583752, 3849140.09633328, 3877268.10796443, 
4018026.50966306, 4099910.79979621, 4186789.14261844, 4261455.6037568, 
4285312.28758636, 4342155.63681216, 4384280.6996272, 4409028.57277361, 
4420311.33518173, 4399666.49017728, 4454541.91336692, 4455620.39258194, 
4423187.83842837, 4431642.07404949, 4360390.73283136, 4229287.1175816, 
4117115.05575634, 4041884.80541784, 3941069.04260727, 3861947.39381067, 
3829953.41164813, 3776798.10431726, 3543144.88429624, 3429804.80421922, 
3370554.60929227, 3267163.0094093, 3209726.87733298, 3141093.0875826, 
3062659.44538521, 3010768.17874887, 2920699.68257705, 2868002.78408302, 
2799697.67314667, 2822106.45252484, 2765343.3240478, 2689159.49135578, 
2459456.81618318, 2225847.77804081, 2173224.4330594, 2161690.78601237, 
2236766.21667066, 2256007.17181788, 2289888.05791205, 2345531.81260916, 
2606964.27048879, 2872621.94631253, 3173002.35031109), dim = c(62L, 
2L)))), class = c("XY", "MULTIPOLYGON", "sfg")), structure(list(
    list(structure(c(1446654.35790761, 1406144.59005299, 1387931.87704139, 
    1384445.80499937, 1356131.53669769, 1326367.61467556, 1371301.12741519, 
    1404936.54528595, 1446654.35790761, -532848.725142585, -556329.872563331, 
    -585063.693199841, -633814.397809843, -645631.895516048, 
    -561550.199057648, -513316.436211043, -494533.262737184, 
    -532848.725142585), dim = c(9L, 2L))), list(structure(c(1371726.81938071, 
    1417672.78868699, 1449921.83137274, 1488964.68772452, 1817460.82285235, 
    1844917.95462884, 1876867.86241989, 1902449.64851041, 1945082.12359854, 
    2018692.31806995, 2055422.63158199, 2116935.12060065, 2133617.64357401, 
    2161546.48806906, 2230589.12280226, 2236589.07847854, 2293384.44031163, 
    2283691.31920469, 2418762.22934762, 2420804.40026332, 2443366.07443625, 
    2426965.4285752, 2435134.11223802, 2472267.10733906, 2466313.17241581, 
    2493868.0982925, 2542241.66232111, 2611198.00814237, 2661895.620199, 
    2673659.67519228, 2660998.21551491, 2680562.78814677, 2663978.0592736, 
    2673464.0869919, 2441669.05916827, 2436543.49779956, 2511643.61415032, 
    2584287.37280811, 2379696.36261931, 2110193.08028176, 2033062.29820356, 
    1581817.30955659, 1564985.21913588, 1498623.29326669, 1426456.99992159, 
    1359818.94953421, 1306245.04041321, 1295769.56650477, 1311180.76617568, 
    1349590.8371733, 1355383.69946095, 1391504.23799534, 1418040.95471123, 
    1481986.79104636, 1517698.8953976, 1529388.16666721, 1523560.78881479, 
    1490270.52659175, 1460621.6564522, 1433279.57655828, 1439256.52185804, 
    1473472.95173581, 1439699.47160596, 1416907.69366787, 1361142.04618382, 
    1371726.81938071, -680345.707885038, -665299.879234457, -667393.693287158, 
    -653947.092547011, -655427.52153421, -738876.529331695, -806120.141202082, 
    -842420.963559455, -901170.471602861, -892078.557152804, 
    -876269.294919164, -892142.455677186, -864041.409712168, 
    -798617.304494666, -794234.394579895, -774799.84532391, -774376.805361213, 
    -814795.592794471, -813815.470291416, -884481.074059647, 
    -927864.218644813, -995732.937097425, -1065090.23918399, 
    -1106999.99901988, -1241724.89250882, -1231321.54658865, 
    -1234105.22238218, -1217125.4628873, -1223809.70689995, -1259028.05845732, 
    -1314118.41318082, -1367486.99450025, -1410174.24934208, 
    -1449571.3303445, -1448131.32679389, -1814025.00466138, -1909007.38564326, 
    -1981804.82764274, -2029431.26225275, -2012877.15062809, 
    -1956935.18683996, -1961967.06529534, -1970165.23652187, 
    -1917474.18744388, -1913998.07290794, -1933827.77939189, 
    -1955995.23039052, -1882809.80655644, -1780857.76453017, 
    -1675180.51174088, -1625796.56631554, -1522375.80112789, 
    -1475492.07707913, -1400798.75760151, -1350106.74044834, 
    -1265902.60340723, -1201623.79202382, -1161142.66258479, 
    -1092550.1454883, -1024840.04417431, -1001410.59702969, -956755.597495446, 
    -848131.298546088, -773009.192502689, -702108.403849218, 
    -680345.707885038), dim = c(66L, 2L)))), class = c("XY", 
"MULTIPOLYGON", "sfg")), structure(list(list(structure(c(-7640303.0696349, 
-7597555.24664092, -7541895.50124428, -7397180.16321303, -7241332.87610245, 
-7291426.64695942, -7397180.16321303, -7453944.19795834, -7521016.4175511, 
-7640229.57343652, -7640303.0696349, -6916017.51312811, -7001516.67745022, 
-7141799.11711034, -7255845.78476699, -7303858.57970745, -7400779.18915312, 
-7410537.97676342, -7341864.73911442, -7336678.46646562, -7336579.8059083, 
-6916017.51312811), dim = c(11L, 2L))), list(structure(c(-6414800.51027562, 
-6442608.55029397, -6472386.85380142, -6471296.73721402, -6495449.00366355, 
-6504072.14226254, -6511682.82429487, -6370350.21544281, -6385548.56913096, 
-6315988.20092618, -6321643.00095473, -6428606.73618461, -6593660.16692654, 
-6816921.22136018, -6939206.99105196, -6915808.31443329, -6938602.96866845, 
-6918060.4550347, -6984830.81508704, -7098899.00406591, -7205943.27561358, 
-7248906.52486411, -7233380.27331063, -7158222.63101859, -7097279.64881867, 
-7064118.81996352, -7166615.66585242, -7256005.22601898, -7272371.35631526, 
-7298692.35075133, -7403855.52401891, -7491110.8717637, -7523032.01658411, 
-7413551.52142291, -7307125.65374407, -7345426.42545325, -7476904.84056277, 
-7549252.34062292, -7650848.90553068, -7696466.97697162, -7660513.26366697, 
-7586422.72758581, -7633349.51419104, -7736522.28989007, -8005519.34394429, 
-8051672.4066392, -8049509.4312468, -8123622.97770448, -8162841.28817719, 
-8172568.9248489, -8087165.91241356, -8051867.99483958, -8064802.70273806, 
-8005792.5921654, -7965133.25686344, -7977078.51857178, -7928483.47966921, 
-7940397.10210984, -7992029.51071238, -7955342.34165631, -8005588.37507383, 
-8031578.5953475, -7986817.66043174, -8005622.8906386, -7979465.8451352, 
-7949716.3045984, -7883052.36753745, -7916889.12620272, -7917251.53963283, 
-7832970.2830526, -7835561.8267076, -7772027.30085268, -7771745.42374037, 
-7800646.45664318, -7851927.95700388, -7783348.40609805, -7793872.77705659, 
-7754084.95976513, -7681182.33437155, -7602624.90894941, -7635938.18154897, 
-7612694.82497178, -7616218.28887564, -7494967.98612703, -7456762.13222097, 
-7470280.72842352, -7377514.39550339, -7231858.71216358, -7166417.20135498, 
-7122982.2393859, -6996036.86844983, -6978068.6406887, -6773408.59937036, 
-6682393.93136242, -6546379.59578239, -6431730.39479652, -6415749.68830687, 
-6525345.23535064, -6413089.11352232, -6288070.86161938, -6200033.16107308, 
-6099060.75262829, -6080859.54480494, -6025729.55897212, -5969880.49887321, 
-5972149.897257, -6065879.78969369, -6140637.62669379, -6266274.28246557, 
-6414800.51027562, -3531382.93901416, -3634899.45287666, -3769153.84492036, 
-3900689.78073745, -3930290.23062298, -4016650.44000685, -4086888.76432069, 
-4203092.02802198, -4297510.74865937, -4357616.77523154, -4425395.99614139, 
-4605433.21512797, -4681674.38936651, -4711424.18663541, -4697022.07095313, 
-4782604.31941671, -4891053.84533911, -4964800.17497059, -5016584.90290203, 
-5036974.25307095, -4983280.00358318, -5021832.72642548, -5169671.67465922, 
-5214910.96720472, -5167525.73570437, -5245711.65384964, -5292745.91308012, 
-5387680.43871003, -5543360.41246123, -5627314.48268469, -5627762.22817049, 
-5708828.7775131, -5828841.13327338, -5947613.19877707, -5980702.77260369, 
-6129058.10313174, -6223661.04389657, -6423735.30581614, -6492160.18324817, 
-6574113.58647949, -6758843.46930729, -6863656.01562977, -6854450.89542149, 
-6825979.73384596, -6801756.96744066, -6696989.16219369, -6564358.13835159, 
-6575686.0753731, -6512135.01215429, -6329067.13055618, -6254290.49305185, 
-6147584.00957547, -6063465.72112914, -5923296.94349845, -5710233.63686032, 
-5617380.25380757, -5587618.65254011, -5528725.21450726, -5497558.72261203, 
-5432633.13735421, -5374367.75073414, -5199237.25969495, -5168679.98933604, 
-4987643.12383733, -4838104.25218487, -4709649.60636915, -4657842.75128783, 
-4519817.00622391, -4391560.19567651, -4301321.60564142, -4186964.98745774, 
-4054823.65445928, -3931714.43176265, -3907416.80775841, -3680243.9563549, 
-3546856.79038946, -3422558.23526573, -3306985.28037036, -3188742.82329227, 
-3110901.19322071, -3062000.44806158, -3022014.1172278, -2816724.78655221, 
-2756491.72215815, -2630367.81095663, -2600114.26772184, -2491403.9713719, 
-2520635.75384883, -2607619.39214695, -2510762.17440611, -2515726.17388558, 
-2541450.5439883, -2738879.14011011, -2757404.99317895, -2847699.54130065, 
-2895697.61879619, -2950074.33957645, -3138937.29507056, -3173021.70989905, 
-3192168.18452678, -3172010.98324285, -3076297.801197, -2966822.29272218, 
-2943161.14539648, -3014554.24598071, -3113913.90945118, -3182912.58144158, 
-3234094.16129103, -3356919.06159336, -3531382.93901416), dim = c(110L, 
2L)))), class = c("XY", "MULTIPOLYGON", "sfg")), structure(list(
    list(structure(c(5176993.05182148, 5136684.62476136, 5091239.13114428, 
    5091751.11202174, 5042566.43222097, 5009598.31526914, 4986444.12390094, 
    4942586.3462634, 4859812.26934489, 4870523.59961262, 4851609.0701173, 
    5006313.58402163, 5029358.47610138, 5071755.09483023, 5049360.24588702, 
    5108663.73876025, 5077283.33778795, 5124540.89855558, 5174519.43634611, 
    5176993.05182148, 4688865.82456019, 4684668.41208755, 4767572.62024714, 
    4789797.10909514, 4789472.93557931, 4828231.92578032, 4824323.83207971, 
    4866668.93780065, 4902858.20782781, 4974096.55205285, 5025942.287947, 
    5049009.74903011, 5010181.60870631, 4984693.71501262, 4947877.14650911, 
    4897741.54263453, 4851420.27573927, 4812033.59375466, 4788377.53015683, 
    4688865.82456019), dim = c(20L, 2L)))), class = c("XY", "MULTIPOLYGON", 
"sfg")), structure(list(list(structure(c(16440693.1603798, 16507463.5204321, 
16515344.5743885, 16477210.627909, 16465716.9448398, 16426812.1507471, 
16349531.8012216, 16326486.9091418, 16258031.0390097, 16189408.3436479, 
16174175.474395, 16109942.0083535, 16112801.0476355, 16185628.8893054, 
16293179.3891364, 16353788.7208768, 16440693.1603798, -4984100.79011879, 
-4993986.05038041, -5170338.02125125, -5222145.95420782, -5344223.31974962, 
-5302492.26591164, -5409068.30291147, -5400805.80725904, -5396026.46350737, 
-5265476.999066, -5166015.34661779, -5036347.65954305, -4968775.6270196, 
-4981790.60428327, -5032672.96915626, -5012422.22215226, -4984100.79011879
), dim = c(17L, 2L))), list(structure(c(14042810.5867246, 13924801.8707675, 
13828290.5990696, 13806839.1755635, 13765731.1379195, 13671262.0371372, 
13601356.5132847, 13502964.1433067, 13422934.0537876, 13346505.0881931, 
13280292.7297712, 13247836.5936969, 13191996.1624892, 13138479.7793094, 
13057276.1605881, 12982647.7569559, 12864564.2572751, 12804725.7731479, 
12807153.3678703, 12862424.2922593, 12881298.5535957, 12877369.5318057, 
12890980.1695143, 12878508.5454432, 12819653.754912, 12801412.2789298, 
12806198.4372449, 12761886.2046712, 12759050.1757657, 12709744.6914883, 
12695863.6818556, 12632257.2485741, 12616834.5437149, 12665748.8515916, 
12628190.164525, 12683397.8103786, 12716342.9169539, 12714484.8290503, 
12659392.2350793, 12648715.4203764, 12622909.2831149, 12634989.7307852, 
12657804.5190998, 12672991.3675997, 12661095.0029415, 12707092.7455949, 
12715503.0382111, 12762530.4952136, 12852967.0275116, 12907202.4849574, 
12992277.5995274, 13042894.6752662, 13073532.9915959, 13161254.2994651, 
13228772.4967542, 13245662.1131162, 13275126.9002436, 13336656.6470447, 
13453652.9064351, 13514170.1966695, 13542588.0116655, 13607879.9550267, 
13612884.7119187, 13615795.5245479, 13693697.1542393, 13740586.5489827, 
13787959.1616329, 13748318.0354918, 13783253.5396356, 13832369.1883069, 
13845887.7845094, 13906715.7148267, 13933557.3190315, 13989530.0599041, 
13991278.8485193, 14040187.4038019, 14042154.7909939, 14091109.3670295, 
14144907.6273215, 14227146.7129861, 14288935.3265229, 14358604.9940161, 
14429396.4173645, 14405810.7814366, 14459137.3290101, 14509322.9601892, 
14491961.6311087, 14540306.4321667, 14607732.5879497, 14664683.2698242, 
14758214.6977635, 14756201.2898184, 14674658.2680435, 14733938.7505402, 
14807669.7494883, 14866812.1697259, 14960567.9488362, 14992356.7839917, 
15061359.1505659, 15126392.2271914, 15168213.5865074, 15194272.8379106, 
15245384.6367445, 15215718.5088225, 15173448.4471645, 15135193.6962084, 
15148091.012245, 15115387.5146231, 15075849.9351762, 15083811.5254504, 
15172309.433527, 15258046.0964218, 15315387.9546972, 15395843.7361818, 
15427229.8897482, 15485492.1630841, 15502416.2950109, 15608689.7189453, 
15682184.8615342, 15703964.1829056, 15726560.3726433, 15740378.1037405, 
15774214.8624058, 15758763.394576, 15766794.0159797, 15753919.7103196, 
15768508.2890301, 15789856.1658419, 15772523.599732, 15799422.729878, 
15820557.760707, 15823365.0266418, 15864726.1784275, 15896123.8371822, 
15903855.3236912, 15931594.33258, 15936345.9753304, 15976809.7224319, 
15985162.4891069, 15981227.7147228, 16021334.8009884, 16092759.0096909, 
16129627.385462, 16183040.2219474, 16171604.0648195, 16195345.0207888, 
16212240.3897449, 16240278.5335284, 16270491.1578926, 16259733.8068718, 
16295779.5616826, 16416405.7079682, 16495055.1748964, 16569729.5992816, 
16555152.5257594, 16618822.2375763, 16662116.2609893, 16706537.7928514, 
16751684.1515738, 16778882.4166145, 16798061.5654398, 16877056.1880157, 
16928748.9988566, 17015762.737648, 17047039.5919259, 17049910.1363962, 
17042224.6706402, 17095275.0936955, 17088889.7142126, 17069630.0290695, 
17039589.9825292, 17041856.5046159, 17019812.5639146, 16970656.6470845, 
16888181.7050607, 16847533.874947, 16810418.1376283, 16777421.2577058, 
16734460.8847524, 16706296.183898, 16691926.2037644, 16697621.2719519, 
16633790.4874993, 16509195.0512649, 16406459.4727196, 16355295.9005386, 
16288036.5699853, 16195833.9912898, 16127631.2352994, 16144912.0280621, 
16084072.5925565, 15986589.1324508, 15890348.2326769, 15827219.2647081, 
15763572.5632676, 15655814.970048, 15583855.7700915, 15563198.2045752, 
15537323.0361841, 15482627.371208, 15375531.3263132, 15412123.5775661, 
15385195.6844495, 15330827.9173387, 15231779.75163, 15289996.0042129, 
15306862.6101984, 15349857.4987166, 15340975.4933818, 15250418.1566071, 
15180869.2935906, 15138231.0659084, 15051309.368623, 15054760.9251003, 
14985097.0102012, 14926374.529335, 14947302.4667753, 14804465.5545586, 
14726241.7795959, 14619180.2502659, 14419858.616299, 14275715.8652151, 
14149026.4847177, 14042810.5867246, -3791693.03630745, -3859355.33537563, 
-3889927.71913948, -3959704.12173155, -4014065.28186255, -4017322.81551126, 
-4029258.86694406, -4004796.78184814, -4019430.31046229, -4025588.64166414, 
-4097404.25070535, -4091297.51499506, -4129527.91215411, -4172681.55107406, 
-4167341.41444631, -4167292.2409058, -4080808.63169056, -4055220.08330026, 
-3978348.64561877, -3960159.34936499, -3929808.65617663, -3882087.03557194, 
-3790258.44936293, -3712543.79203764, -3581115.95681552, -3507499.83996426, 
-3434465.08230903, -3351514.76976485, -3314237.22863245, -3263868.72950309, 
-3165358.8703484, -3066507.42350143, -3013522.72786968, -3067240.50409116, 
-2952249.73149118, -2988091.11987174, -3036091.97703796, -2972634.9206643, 
-2875614.29236952, -2836977.22542172, -2800363.92320106, -2729828.72915107, 
-2699909.27243846, -2639274.72251905, -2568708.30154929, -2482240.94842732, 
-2573770.36869356, -2491069.33278718, -2451021.62426187, -2400070.76596144, 
-2356342.67156318, -2347052.93212045, -2361724.42268179, -2317414.12252599, 
-2304249.91405069, -2278268.06395507, -2267457.09212176, -2270248.00022422, 
-2235599.17334432, -2183183.68347557, -2120272.40280301, -2060695.98779995, 
-2013988.8071454, -1950525.0188308, -1851695.2185212, -1952109.30903373, 
-1928862.64108635, -1873906.07654942, -1817617.38457662, -1842731.88204154, 
-1754639.63042729, -1697856.69049282, -1652394.18648421, -1632801.37089045, 
-1600692.42426066, -1614096.46319853, -1585231.17183487, -1568800.98877384, 
-1553340.68185598, -1606004.53115667, -1674127.00353756, -1674912.66643752, 
-1685718.05638241, -1622523.56301162, -1530507.30500601, -1500591.28355889, 
-1472018.85203734, -1406814.9928468, -1366615.97970235, -1380148.97946472, 
-1358689.71981214, -1300561.53903708, -1263169.03583867, -1246684.47894421, 
-1274820.55930932, -1321422.04647482, -1350530.24414878, -1339015.37942298, 
-1374014.52075254, -1341414.44372313, -1351324.32940193, -1329462.13171074, 
-1385790.02297541, -1446850.72886891, -1493024.26768526, -1496831.16393316, 
-1542602.55320515, -1599926.85838041, -1656426.39124437, -1688939.75020832, 
-1752698.92268447, -1789761.13257204, -1829643.97426049, -1898440.49261022, 
-1898326.31611362, -1928122.48134219, -1964124.80805045, -2003726.35588172, 
-1963829.46167578, -1901283.07704514, -1849800.33101132, -1786262.76282145, 
-1694377.6863439, -1638696.64368649, -1605256.61555858, -1539600.4363129, 
-1453413.66271353, -1430219.95000822, -1392133.05547685, -1331766.39916556, 
-1269328.6860518, -1236953.6025809, -1194499.0131356, -1249956.1027853, 
-1321216.36975043, -1334970.32110771, -1382792.71797255, -1440814.39583805, 
-1505516.86926849, -1547115.24141489, -1637198.92460473, -1593862.47457898, 
-1642506.71675411, -1687468.79528505, -1738599.19954727, -1837829.02757616, 
-1895802.56545823, -1909993.40727472, -2009669.38667483, -2070356.73226311, 
-2150023.97260451, -2211615.8076785, -2267812.05290578, -2319433.14262533, 
-2348226.95074496, -2422968.95884847, -2552697.86348712, -2526273.28129647, 
-2578429.07883541, -2559907.82040461, -2688014.90467051, -2762703.01607805, 
-2809303.68675193, -2908637.07114083, -3007898.72163281, -3078730.35774241, 
-3156030.55161027, -3262857.79888012, -3375019.51399103, -3434095.09904414, 
-3548649.86400185, -3622836.55070775, -3716205.51944614, -3835725.52310616, 
-3900792.7162766, -4004125.14174569, -4070552.34068001, -4187478.71825907, 
-4255565.87265487, -4358596.1273866, -4454318.20898445, -4498549.55281372, 
-4547362.86901192, -4552487.59259601, -4610440.30737966, -4665466.36287924, 
-4726794.68285066, -4663648.24834872, -4638566.2237089, -4564770.99839063, 
-4591486.19512433, -4694415.76185719, -4655746.51817631, -4633251.89353084, 
-4623100.65074532, -4582157.24606207, -4495420.72270167, -4389545.35908419, 
-4319676.55340595, -4263910.76970062, -4247404.2354532, -4181188.91553876, 
-4080578.59922371, -4174326.26823968, -4199343.38550038, -4124180.40477193, 
-4046307.25503167, -3980628.64510184, -3882039.07548188, -3995653.39161668, 
-4041533.91080861, -4148958.6403352, -4093258.28872507, -4021815.57626563, 
-3924911.48839371, -3875155.40804418, -3844607.63660161, -3764784.04879734, 
-3761032.98996577, -3697307.42978264, -3709666.52861605, -3756550.88786811, 
-3800419.84771416, -3791693.03630745), dim = c(224L, 2L)))), class = c("XY", 
"MULTIPOLYGON", "sfg")), structure(list(list(structure(c(1890167.86004555, 
1881717.29927042, 1819025.52845536, 1840586.2512499, 1803631.58656684, 
1782410.26682591, 1685053.36379103, 1628879.28212384, 1536929.81756999, 
1377744.03283938, 1352875.56842082, 1242862.95830271, 1229919.62151303, 
1162476.20794763, 1105675.09352041, 1055305.37932912, 1072333.05795021, 
1068024.36494778, 1101625.26725378, 1157954.66896244, 1173808.81838126, 
1271982.58978241, 1351569.72955359, 1404936.54528595, 1439653.45085292, 
1450031.13066118, 1434251.76496603, 1474243.79934907, 1513493.74908949, 
1596198.79487845, 1658821.53456396, 1698002.45317484, 1784412.16958271, 
1836691.74502474, 1888010.63724727, 1879071.1059712, 1890167.86004555, 
6127424.98463182, 6059549.04954236, 6059224.15690211, 6023441.21834946, 
5918012.9022472, 5890583.33705815, 5886542.51436578, 5849820.35350787, 
5862344.93113767, 5904215.98938172, 5960929.55715548, 5932543.56686826, 
5901583.47386972, 5924715.38833866, 5929144.45848093, 5958871.45044064, 
5998997.15651113, 6028202.01937217, 6037296.55646638, 5991588.2883388, 
6035019.89345597, 6027989.0474163, 6057599.87731379, 6052523.83873936, 
6018742.60321076, 6046772.04193465, 6155093.91244306, 6176362.82620278, 
6254045.68297867, 6199740.11397837, 6268823.27473133, 6281494.07167277, 
6229829.65464683, 6238595.33550586, 6206752.35448146, 6185407.56891869, 
6127424.98463182), dim = c(37L, 2L)))), class = c("XY", "MULTIPOLYGON", 
"sfg")), structure(list(list(structure(c(5165775.49327043, 5197069.60533079, 
5273573.35464897, 5322815.56039101, 5341919.92549258, 5408385.4805758, 
5466929.54850432, 5523552.33251356, 5575417.72117831, 5609703.18218563, 
5518018.3369617, 5498655.10512435, 5479504.71926976, 5438684.31133219, 
5441658.40249675, 5413953.90917272, 5344531.60322703, 5382912.91125401, 
5350025.33061998, 5308278.75502768, 5176993.05182148, 5174519.43634611, 
5124540.89855558, 5077283.33778795, 5108663.73876025, 5049360.24588702, 
5071755.09483023, 5029358.47610138, 5006313.58402163, 5033580.88019188, 
5116533.28752837, 5176538.59688531, 5191708.1876028, 5136885.96555587, 
5165775.49327043, 5140132.05203837, 5135120.49623868, 5044806.36243026, 
5034701.22646658, 5072385.44273754, 5132391.77491879, 5054068.47332702, 
4949550.72521968, 4942699.19108432, 4903295.39496714, 4891565.89020821, 
4779056.51791767, 4728724.20589171, 4695275.93294752, 4624765.03214843, 
4617691.81330753, 4692208.76265778, 4763119.48796869, 4805418.29389498, 
4794754.16990532, 4688865.82456019, 4788377.53015683, 4812033.59375466, 
4851420.27573927, 4897741.54263453, 4947877.14650911, 4984693.71501262, 
5010181.60870631, 5049009.74903011, 5073221.47372324, 5030630.04703986, 
5021851.89275961, 5039175.38515783, 5119546.6105542, 5140132.05203837
), dim = c(35L, 2L))), list(structure(c(5136684.62476136, 5060330.44289054, 
5004110.34047032, 4986444.12390094, 5009598.31526914, 5042566.43222097, 
5091751.11202174, 5091239.13114428, 5136684.62476136, 4684668.41208755, 
4703659.08087775, 4769881.73888305, 4824323.83207971, 4828231.92578032, 
4789472.93557931, 4789797.10909514, 4767572.62024714, 4684668.41208755
), dim = c(9L, 2L)))), class = c("XY", "MULTIPOLYGON", "sfg")), 
    structure(list(list(structure(c(-8792013.38285275, -8739693.22217991, 
    -8666222.35825635, -8662882.77353255, -8784221.01849722, 
    -8792013.38285275, 3097259.43378317, 3107239.33424544, 3103496.04548875, 
    3071095.58280495, 3051193.42242798, 3097259.43378317), dim = c(6L, 
    2L))), list(structure(c(-8659543.18880875, -8571600.79108207, 
    -8590808.96921844, -8611276.1707957, -8609449.41795178, -8659322.77621698, 
    -8659543.18880875, 3128470.10997259, 3072340.38932973, 2984124.54799876, 
    2999991.30092148, 3064873.17948332, 3114124.58756744, 3128470.10997259
    ), dim = c(7L, 2L))), list(structure(c(-8704167.83308305, 
    -8670675.13788808, -8631713.31611043, -8631118.8700296, -8658429.99390082, 
    -8686710.71053685, -8728392.06747458, -8704167.83308305, 
    2901597.42944541, 2896639.78281282, 2794893.66047824, 2724159.80887394, 
    2718109.95369125, 2788315.7021532, 2823710.88744709, 2901597.42944541
    ), dim = c(8L, 2L)))), class = c("XY", "MULTIPOLYGON", "sfg"
    )), structure(list(list(structure(c(10316280.1101239, 10314002.082849, 
    10275149.0621034, 10282420.3410822, 10250620.0007385, 10244200.1056908, 
    10223013.3015146, 10176503.5779837, 10073969.340233, 10084093.9058996, 
    10049141.1439733, 10001774.2839172, 9985586.48403894, 9954062.26821342, 
    9910992.59597151, 9893665.78245573, 9855088.88622837, 9874032.17869433, 
    9805513.03002685, 9830220.42180981, 9899815.30557936, 9819468.82338319, 
    9858793.55684729, 9946963.56705855, 10000106.0316199, 10009925.7097977, 
    10115848.2254902, 10219084.2797247, 10283271.7250132, 10231941.3276024, 
    10182141.1202299, 10147769.3703106, 10208718.1051047, 10226913.5603339, 
    10257649.6707638, 10316280.1101239, 2516477.17981649, 2430560.00685054, 
    2448666.28607801, 2352677.92347605, 2414810.61473581, 2475732.60424217, 
    2533503.06505043, 2603626.29082453, 2608455.66138571, 2558750.60962022, 
    2491890.52312387, 2516225.83142584, 2494378.89843521, 2507465.09200054, 
    2518214.99879473, 2617409.97071087, 2708525.12415322, 2781913.26016556, 
    2814657.46764507, 2859304.44047303, 2905091.19752046, 2970383.12960557, 
    3054490.98529092, 3000865.4529523, 2994756.85426561, 2908913.86279146, 
    2892040.43112002, 2893864.18569747, 2872882.13343733, 2769307.66069916, 
    2762262.04668321, 2693026.34889544, 2630236.66293183, 2707699.43989115, 
    2708082.45159819, 2516477.17981649), dim = c(36L, 2L)))), class = c("XY", 
    "MULTIPOLYGON", "sfg")), structure(list(list(structure(c(3136616.94548537, 
    3253814.54567028, 3269628.4269302, 3328040.26771347, 3436867.84344106, 
    3447769.00931503, 3423913.00146313, 3493703.47343306, 3539005.15219692, 
    3532309.13263106, 3607374.73341705, 3639439.69309066, 3596122.65930122, 
    3506301.24598984, 3484878.99403956, 3511018.78176057, 3538397.99477028, 
    3538400.49362069, 3442839.0361467, 3408542.06995112, 3401380.09026084, 
    3357102.37325189, 3256644.82198162, 3227467.66456063, 3185698.07859182, 
    3143842.20371108, 3056172.66918901, 2931928.14119639, 2819476.43116769, 
    2733239.29258368, 2672233.03184835, 2619021.53615746, 2616898.82892396, 
    2582555.84197535, 2649314.69683943, 2649953.23478772, 2619073.30950462, 
    2614241.13043648, 2721837.65102051, 2842693.9010713, 2868528.8013035, 
    2959793.70715603, 2949335.49102997, 3017032.01873703, 3136616.94548537, 
    7592158.58373715, 7542177.44402315, 7493018.41324071, 7516617.39097967, 
    7469542.16882494, 7377708.98211765, 7325420.05711409, 7199957.18311814, 
    7165354.60643445, 7131244.04080482, 7098147.97642796, 7048267.65653626, 
    7007586.49974394, 7014028.18804889, 6996696.90093253, 6935426.38421399, 
    6818531.42417991, 6818530.98379283, 6807787.12182042, 6768149.71764855, 
    6678005.97723172, 6695236.53759296, 6686690.4260582, 6728487.36143999, 
    6697302.96068369, 6723145.14312683, 6726741.72770261, 6769857.72566085, 
    6783987.01253027, 6779982.84508382, 6731247.80117019, 6724260.516108, 
    6804402.18409736, 6888660.74247047, 6926062.81596514, 6999613.06993494, 
    7070435.57690891, 7153601.78596765, 7152317.61147155, 7223826.39301768, 
    7332221.14334912, 7394379.32376322, 7482172.794944, 7515399.92123579, 
    7592158.58373715), dim = c(45L, 2L)))), class = c("XY", "MULTIPOLYGON", 
    "sfg")), structure(list(list(structure(c(685356.050909586, 
    672711.849014591, 643695.764229205, 631632.574341226, 534246.908335714, 
    477117.896043148, 399434.864928586, 347678.775552274, 295934.191364217, 
    279809.670021345, 369020.899769916, 369025.390480064, 369020.899769916, 
    450517.900791841, 553702.181679135, 624165.707162118, 685356.050909586, 
    6586647.40756828, 6468481.73738129, 6461933.75674037, 6365185.93014694, 
    6443743.09327525, 6430271.27536171, 6512171.20391375, 6582534.10157716, 
    6585436.86293625, 6647604.90483387, 6682687.80165445, 6682687.03053312, 
    6682683.19677235, 6668705.53208388, 6705753.98893607, 6627894.04739667, 
    6586647.40756828), dim = c(17L, 2L)))), class = c("XY", "MULTIPOLYGON", 
    "sfg")), structure(list(list(structure(c(-9923362.31904107, 
    -9924233.83705157, -9910758.38530499, -9890552.39842778, 
    -9850675.41592732, -9829514.49842473, -9829103.18794453, 
    -9808005.54897736, -9809860.76058388, -9827880.76169217, 
    -9818141.6198322, -9829805.00442824, -9822778.21069997, -9835681.27933075, 
    -9857544.01331704, -9877649.329797, -9899710.52828074, -9932940.38826543, 
    -9924222.33186332, -9923362.31904107, 2015124.76416716, 2032336.76767295, 
    2037725.44505114, 2023881.60984971, 2094610.69511586, 2096154.44955067, 
    2078940.24351334, 2078400.83123333, 2046525.13891271, 1995937.81055001, 
    1977878.08688662, 1936160.3548483, 1925023.78462651, 1866272.06223032, 
    1835485.93284148, 1831794.88499833, 1791672.07433155, 1791633.19748862, 
    1922638.33362977, 2015124.76416716), dim = c(20L, 2L)))), class = c("XY", 
    "MULTIPOLYGON", "sfg")), structure(list(list(structure(c(299638.86198313, 
    207637.62408212, 180220.760464523, 185288.795891947, 162865.183978102, 
    158637.027293474, 119979.594748311, 85976.0108533035, 100138.897598272, 
    138422.411525066, 161099.137580578, 215512.92544437, 239834.893420701, 
    277203.744881025, 317109.490352117, 401994.76931588, 397657.313342804, 
    422692.602991101, 400757.961578199, 412487.501006708, 358487.899920183, 
    324196.686318739, 303211.22293708, 306024.241466035, 299638.86198313, 
    698118.140397226, 685055.239473799, 762347.725902108, 1020516.70275066, 
    1043753.27053019, 1099158.50596063, 1138745.3744274, 1172147.8078973, 
    1231805.08117345, 1244641.41490154, 1294278.54651376, 1304895.88716023, 
    1338897.85396202, 1372242.77885329, 1372537.09270777, 1307057.37476299, 
    1269317.02304702, 1202039.56921104, 1156458.64626639, 1126035.76582638, 
    1056111.46598057, 1021533.42008928, 950476.203685245, 878934.840203356, 
    698118.140397226), dim = c(25L, 2L)))), class = c("XY", "MULTIPOLYGON", 
    "sfg")), structure(list(list(structure(c(10207625.1122202, 
    10252938.2961723, 10245120.5207514, 10154287.0594585, 10060306.9291772, 
    9990315.11641277, 9889138.49087641, 9886756.91690711, 9960401.6269433, 
    10020516.2355887, 10100074.6123892, 10158889.1347615, 10207625.1122202, 
    3220226.01975614, 3180134.59428431, 3103285.25943583, 3099585.1412515, 
    3107953.69007706, 3088458.38635906, 3135841.74035503, 3160917.34460433, 
    3254365.77870535, 3286399.57221047, 3257165.46442583, 3254095.2925381, 
    3220226.01975614), dim = c(13L, 2L)))), class = c("XY", "MULTIPOLYGON", 
    "sfg")), structure(list(list(structure(c(-7740008.36193209, 
    -7657240.03760771, -7599921.18970891, -7575090.11715218, 
    -7477753.34819676, -7419099.89846008, -7273441.33882321, 
    -7285285.93013429, -7271600.50870201, -7280548.66886927, 
    -7159663.65584784, -7035002.06478088, -6991204.68938168, 
    -6915955.00558358, -6869882.47920647, -6799853.27458019, 
    -6735196.99287017, -6730287.15378129, -6708594.12132179, 
    -6707127.20981896, -6739612.10886398, -6696801.30335787, 
    -6483382.93747851, -6499728.93369534, -6487789.42458113, 
    -6426981.62834324, -6400689.39687781, -6420463.93919537, 
    -6450964.19326597, -6440255.73929532, -6475053.18118009, 
    -6476954.41353964, -6580656.42789852, -6684019.0392038, -6878022.39989864, 
    -6931415.10230458, -6934222.3682394, -6978068.6406887, -6996036.86844983, 
    -7122982.2393859, -7166417.20135498, -7231858.71216358, -7377514.39550339, 
    -7470280.72842352, -7550598.44764905, -7594205.987442, -7654012.83230149, 
    -7618953.64738385, -7677351.1066818, -7692204.30472222, -7746770.53633043, 
    -7676551.49609791, -7724433.21332851, -7698894.57169395, 
    -7718841.69183537, -7675354.95651913, -7673166.09445314, 
    -7667695.37743671, -7643761.70956406, -7740008.36193209, 
    -1226633.77385548, -1236232.69322668, -1233753.58737518, 
    -1199469.22474322, -1153587.61164838, -1111128.72460437, 
    -1091995.61576237, -1176749.07273157, -1220300.4601323, -1296386.39311792, 
    -1398330.15832423, -1417153.30482285, -1459806.89528152, 
    -1482451.635449, -1515678.30816196, -1514554.33160414, -1548524.87180669, 
    -1614862.44897308, -1648433.97705667, -1698100.95417814, 
    -1700025.36053307, -1834652.92577957, -1839441.21870478, 
    -1906524.49080686, -1952476.78466513, -1985231.58219187, 
    -2057946.99449399, -2150443.67227402, -2202087.00252808, 
    -2269476.78655347, -2293975.36959615, -2257447.52219421, 
    -2197001.21634997, -2195330.63998778, -2229692.1105472, -2333990.18828997, 
    -2398036.5303156, -2541450.5439883, -2515726.17388558, -2510762.17440611, 
    -2607619.39214695, -2520635.75384883, -2491403.9713719, -2600114.26772184, 
    -2616657.53307509, -2450922.70288083, -2317230.02842197, 
    -2202684.70128889, -2152779.55617351, -2068018.35128823, 
    -1988447.6861175, -1862779.9024144, -1765397.01487935, -1726565.48216455, 
    -1683806.67707782, -1626313.3946023, -1528672.47342348, -1448278.86480322, 
    -1409655.60218224, -1226633.77385548), dim = c(60L, 2L)))), class = c("XY", 
    "MULTIPOLYGON", "sfg")), structure(list(list(structure(c(2066089.74912315, 
    1967563.26145368, 1925534.80874907, 1883097.92186132, 1831922.84449202, 
    1807790.71212194, 1753284.88275208, 1776588.64156763, 1816528.9026035, 
    1840661.03497358, 1892670.23849155, 1988364.64182322, 2065334.35126582, 
    2115680.86767952, 2115680.35588176, 2156039.23726884, 2128162.6103844, 
    2181835.30287038, 2165609.37389235, 2139395.86020034, 2118593.58695581, 
    2082395.82813456, 2066089.74912315, 5258849.10939568, 5316320.36580506, 
    5380158.10209806, 5414164.6373531, 5471826.34643254, 5519944.19883713, 
    5593026.35595417, 5658400.24213299, 5622171.1733102, 5654896.51249368, 
    5658400.24213299, 5632192.13481673, 5634375.26793506, 5599545.03934935, 
    5599544.33365235, 5599979.3640131, 5531148.38042856, 5471397.4357431, 
    5398846.13191682, 5392048.59815613, 5378040.77599597, 5342480.3998761, 
    5258849.10939568), dim = c(23L, 2L)))), class = c("XY", "MULTIPOLYGON", 
    "sfg")), structure(list(list(structure(c(3276376.21984322, 
    3118864.44000407, 3018918.86961126, 2981849.15304563, 2948380.5604046, 
    2887811.49682305, 2868241.17159706, 2856977.59229298, 2785789.23994976, 
    2695185.88242204, 2642008.90229593, 2595090.74458189, 2540786.25600654, 
    2513541.97021281, 2460825.19761699, 2405157.34423313, 2325420.63701461, 
    2300580.93556669, 2310837.81089824, 2244838.29845916, 2214786.74673059, 
    2214752.23116582, 2324477.21157749, 2327761.942825, 2410628.06124957, 
    2582262.45967479, 2624802.89325685, 2695864.68852923, 2729632.41606496, 
    2792387.46541544, 2812400.74038934, 2855251.81405435, 2877652.41559169, 
    2912651.19827097, 3038633.00969047, 3086304.75723537, 3086580.88175355, 
    3119324.64753437, 3205406.4660769, 3276376.21984322, -2522491.95733426, 
    -2611201.59655871, -2701622.64046915, -2782764.85595039, 
    -2828692.06397227, -2838496.76452478, -2897235.77903124, 
    -2935658.5023084, -2964402.10763063, -2958292.75306769, -2923739.8484122, 
    -2908783.37953791, -2937341.00750129, -2996535.65388003, 
    -3033833.46299146, -3089347.09708633, -3102066.74310732, 
    -3058336.7652327, -2982758.22795976, -2865671.45466973, -2847249.72378093, 
    -2493424.33563602, -2489247.52610726, -2067091.55442244, 
    -2063215.21404107, -2022225.37045177, -2070496.07433086, 
    -2024600.86204459, -2024340.93496998, -1998002.34594771, 
    -2006733.89843196, -2100385.90278202, -2121341.3477007, -2189472.573339, 
    -2319469.96572776, -2332245.92283204, -2374216.28953542, 
    -2449921.15555353, -2468292.03741557, -2522491.95733426), dim = c(40L, 
    2L)))), class = c("XY", "MULTIPOLYGON", "sfg")), structure(list(
        list(structure(c(-5941528.83870969, -5972351.2380515, 
        -5923264.35235093, -5987647.38583983, -6074977.5173083, 
        -6189531.80049105, -6230913.08635618, -6342542.17542446, 
        -6414800.51027562, -6266274.28246557, -6140637.62669379, 
        -6065879.78969369, -5972149.897257, -5969880.49887321, 
        -6025729.55897212, -6080859.54480494, -6059002.56341278, 
        -6043922.13790428, -6043864.61196299, -6083925.67747556, 
        -6125678.00566199, -6167182.97230088, -6180195.3402201, 
        -6190552.88594891, -6211400.28707148, -6286580.93974004, 
        -6332020.68076299, -6449534.67362498, -6442133.96127835, 
        -6475053.18118009, -6440255.73929532, -6450964.19326597, 
        -6420463.93919537, -6400689.39687781, -6426981.62834324, 
        -6487789.42458113, -6499728.93369534, -6483382.93747851, 
        -6696801.30335787, -6739612.10886398, -6707127.20981896, 
        -6708594.12132179, -6730287.15378129, -6735196.99287017, 
        -6799853.27458019, -6869882.47920647, -6915955.00558358, 
        -6991204.68938168, -7035002.06478088, -7159663.65584784, 
        -7280548.66886927, -7271600.50870201, -7285285.93013429, 
        -7273441.33882321, -7419099.89846008, -7477753.34819676, 
        -7575090.11715218, -7599921.18970891, -7657240.03760771, 
        -7740008.36193209, -7802800.8031444, -7853443.7655568, 
        -7846008.5376454, -7937348.2272216, -8035585.27715817, 
        -8077679.88469526, -8151560.45109072, -8128035.21740122, 
        -8189892.86206761, -8236221.37888345, -8206851.50955915, 
        -8206972.31403585, -8139684.22051193, -8150780.97458628, 
        -8122371.78848147, -8114292.27002765, -7986995.99084973, 
        -7895762.72426491, -7880837.61879788, -7780523.88238084, 
        -7730482.06605489, -7727853.13053805, -7745283.49074815, 
        -7794663.75874929, -7794097.12822761, -7731405.35741255, 
        -7709145.69443137, -7705383.49787118, -7770612.16269701, 
        -7771989.90899084, -7555094.09996066, -7518274.62123963, 
        -7487348.6752035, -7465647.01385282, -7444638.54009464, 
        -7383350.402247, -7296799.74728297, -7275253.40597376, 
        -7192464.94756994, -7146634.03014623, -7133696.44595068, 
        -7054181.21360611, -7060201.30336185, -7154503.57891435, 
        -7169957.92304123, -7165468.02332374, -7215291.2410728, 
        -7194429.4584649, -7112017.79497651, -7023502.62911752, 
        -6991368.63831435, -6911318.41471581, -6786803.51479914, 
        -6746092.40615001, -6760830.55230786, -6702956.57907562, 
        -6677049.77141682, -6691526.17454181, -6653277.17617979, 
        -6627744.28713935, -6658621.33612539, -6676333.57344779, 
        -6647838.09843106, -6639767.20886843, -6571285.45206279, 
        -6516644.43673091, -6504339.63788953, -6469159.64849519, 
        -6418789.9343039, -6382594.61204585, -6321021.72078883, 
        -6293935.63133364, -6233412.58850512, -6223382.94064165, 
        -6242055.86118355, -6230921.71524737, -6185996.83139894, 
        -6133435.3788446, -6069667.87292747, -6021055.57624252, 
        -5986597.53741134, -5961697.43372507, -5946516.33781931, 
        -5893215.67691943, -5850554.43886066, -5816369.6482506, 
        -5750519.70325886, -5712598.60276218, -5685060.93466788, 
        -5622622.27799448, -5563088.68135611, -5560085.8272209, 
        -5643814.83476478, -5609189.97070387, -5412416.73593603, 
        -5408401.42523417, -5323849.79672989, -5183768.37710083, 
        -4998880.00180298, -4944546.75025699, -4962799.7314275, 
        -4833357.73463956, -4616715.03975104, -4450404.66719198, 
        -4285843.08324805, -4143673.47195026, -4057922.42757013, 
        -3962728.49992767, -3922385.55730278, -3884608.27165932, 
        -3866125.18672366, -3910454.67707977, -3967088.96627726, 
        -4123999.60002995, -4194920.45674618, -4277326.36764044, 
        -4305157.41803531, -4336258.81819236, -4328357.63015653, 
        -4359392.87548111, -4371220.20900981, -4406417.45618653, 
        -4426154.60664225, -4539023.37974528, -4557949.41442885, 
        -4648052.29626738, -4674114.42396765, -4795054.08663331, 
        -4970171.68080348, -5048576.66248121, -5173249.75873642, 
        -5304259.33742445, -5398489.70555035, -5414691.88691395, 
        -5396182.91530472, -5416975.66678306, -5442238.18389945, 
        -5520036.26689658, -5643550.21543486, -5741439.23342664, 
        -5817120.3617844, -5867884.1286735, -5941528.83870969, 
        -3997743.06237572, -3922147.4242522, -3859211.73331003, 
        -3769513.54173187, -3697138.76847462, -3613787.01222889, 
        -3617573.60967191, -3517656.81032104, -3531382.93901416, 
        -3356919.06159336, -3234094.16129103, -3182912.58144158, 
        -3113913.90945118, -3014554.24598071, -2943161.14539648, 
        -2966822.29272218, -2895678.55168395, -2823118.40171326, 
        -2755968.97718952, -2733872.15588578, -2753563.31548347, 
        -2748161.36758485, -2701340.20449939, -2590424.41702439, 
        -2554433.19523421, -2521889.755351, -2545435.05205255, 
        -2522355.37356637, -2360032.84200296, -2293975.36959615, 
        -2269476.78655347, -2202087.00252808, -2150443.67227402, 
        -2057946.99449399, -1985231.58219187, -1952476.78466513, 
        -1906524.49080686, -1839441.21870478, -1834652.92577957, 
        -1700025.36053307, -1698100.95417814, -1648433.97705667, 
        -1614862.44897308, -1548524.87180669, -1514554.33160414, 
        -1515678.30816196, -1482451.635449, -1459806.89528152, 
        -1417153.30482285, -1398330.15832423, -1296386.39311792, 
        -1220300.4601323, -1176749.07273157, -1091995.61576237, 
        -1111128.72460437, -1153587.61164838, -1199469.22474322, 
        -1233753.58737518, -1236232.69322668, -1226633.77385548, 
        -1246168.55351838, -1233144.09546967, -1061298.98261582, 
        -1127870.27933002, -1124949.01075342, -1064693.59797853, 
        -1058149.60590907, -1009721.7823239, -941202.579600635, 
        -839966.422475801, -819441.286187271, -772053.043506626, 
        -739693.099855098, -679125.010996261, -640185.399047393, 
        -587992.599090448, -511948.665440105, -490465.58723391, 
        -473683.464442126, -478921.39139043, -173266.397167228, 
        -124977.316896398, -61225.7648883787, -20611.5459419595, 
        60270.8603441235, 78611.2236725564, 67088.0244666323, 
        109730.42776047, 121243.25716585, 190919.746658794, 188430.649447839, 
        226823.719881881, 191498.142182032, 125811.673659094, 
        139534.581657066, 80647.8007123322, 87862.1835551758, 
        121933.693898527, 147926.871242535, 166202.656392256, 
        213369.021677976, 245063.293416748, 268478.068215428, 
        278053.414776955, 348245.146757944, 423013.302245111, 
        451939.124041732, 462210.814363527, 447931.119048446, 
        420041.361298795, 446417.350241353, 463733.501892819, 
        505525.719666973, 548153.716413597, 579688.64478295, 
        584630.503242568, 558876.537142623, 509824.985625358, 
        492912.007920136, 441042.952346606, 401738.955424256, 
        306829.37296529, 250492.083739065, 198948.364255666, 
        146698.364794724, 141174.467961548, 162983.00819657, 
        167799.548500461, 187331.427233233, 216952.049324455, 
        207503.937239139, 211492.635732475, 202375.729586123, 
        225134.273671312, 247279.691986091, 279541.881231338, 
        269641.126322137, 281033.241990026, 257423.698434065, 
        234442.2567235, 264649.251629232, 259991.466289546, 228631.1859143, 
        236592.315620349, 278911.368443388, 360989.559734518, 
        463075.97450084, 468350.752058947, 406635.59992812, 211719.988266849, 
        193334.054842344, 116467.774887697, 24822.5410229579, 
        -8732.40591923987, -26214.6105540039, -137802.572162729, 
        -64746.5242085374, -104759.414280234, -172759.982626261, 
        -238028.511992017, -299705.298766046, -265363.119652662, 
        -324304.045973432, -319961.056684156, -412241.459235279, 
        -537299.591782285, -569531.557445518, -574013.519783775, 
        -609278.579041355, -751827.261498701, -819690.692671395, 
        -1005615.48403166, -1079267.02009394, -1236725.01987677, 
        -1365197.69175045, -1464087.56545371, -1466319.67528311, 
        -1550520.98797572, -1766197.59316458, -1945098.35373755, 
        -2022074.26694173, -2068272.77349516, -2225600.39431043, 
        -2380496.27724796, -2504001.05242013, -2556087.8364783, 
        -2628399.57059332, -2628112.16485364, -2674638.02115831, 
        -2728671.85812934, -2764253.07432799, -2861650.4905345, 
        -2983857.8976627, -3076535.89022524, -3145466.86722482, 
        -3272461.4288454, -3334233.21291936, -3404247.06013035, 
        -3630731.79487257, -3734165.31186015, -3795562.5195438, 
        -3921425.57523966, -3997743.06237572), dim = c(203L, 
        2L)))), class = c("XY", "MULTIPOLYGON", "sfg"))), class = c("sfc_MULTIPOLYGON", 
"sfc"), precision = 0, bbox = structure(c(xmin = -9932940.38826543, 
ymin = -7410537.97676342, xmax = 17095275.0936955, ymax = 7592158.58373715
), class = "bbox"), crs = structure(list(input = "EPSG:3857", 
    wkt = "PROJCRS[\"WGS 84 / Pseudo-Mercator\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"Popular Visualisation Pseudo-Mercator\",\n        METHOD[\"Popular Visualisation Pseudo Mercator\",\n            ID[\"EPSG\",1024]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"False easting\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"easting (X)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"northing (Y)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Web mapping and visualisation.\"],\n        AREA[\"World between 85.06°S and 85.06°N.\"],\n        BBOX[-85.06,-180,85.06,180]],\n    ID[\"EPSG\",3857]]"), class = "crs"), n_empty = 0L), 
    pop_est = c(38041754, 2854191, 43053054, 31825295, 44938712, 
    2957731, 25364307, 8877067, 10023318, 389482, 163046161, 
    9466856, 11484055, 390353, 11801151, 763092, 11513100, 3301000, 
    2303697, 211049527), iso_a3 = c("AFG", "ALB", "DZA", "AGO", 
    "ARG", "ARM", "AUS", "AUT", "AZE", "BHS", "BGD", "BLR", "BEL", 
    "BLZ", "BEN", "BTN", "BOL", "BIH", "BWA", "BRA"), country = structure(c(1L, 
    3L, 4L, 7L, 10L, 11L, 14L, 15L, 16L, 17L, 19L, 21L, 22L, 
    23L, 24L, 26L, 27L, 28L, 29L, 31L), levels = c("Afghanistan", 
    "Akrotiri", "Albania", "Algeria", "American Samoa", "Andorra", 
    "Angola", "Anguilla", "Antigua and Barbuda", "Argentina", 
    "Armenia", "Aruba", "Ashmore and Cartier Islands", "Australia", 
    "Austria", "Azerbaijan", "Bahamas, The", "Bahrain", "Bangladesh", 
    "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", 
    "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", 
    "Bouvet Island", "Brazil", "British Indian Ocean Territory", 
    "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", 
    "Burma", "Burundi", "Cabo Verde", "Cambodia", "Cameroon", 
    "Canada", "Cayman Islands", "Central African Republic", "Chad", 
    "Chile", "China", "Christmas Island", "Clipperton Island", 
    "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo, Democratic Republic of the", 
    "Congo, Republic of the", "Cook Islands", "Coral Sea Islands", 
    "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Curacao", 
    "Cyprus", "Czech Republic", "Denmark", "Dhekelia", "Djibouti", 
    "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", 
    "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "European Union", 
    "Falkland Islands (Islas Malvinas)", "Faroe Islands", "Fiji", 
    "Finland", "France", "French Polynesia", "French Southern and Antarctic Lands", 
    "Gabon", "Gambia, The", "Gaza Strip", "Georgia", "Germany", 
    "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guam", 
    "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", 
    "Haiti", "Heard Island and McDonald Islands", "Holy See (Vatican City)", 
    "Honduras", "Hong Kong", "Howland Island", "Hungary", "Iceland", 
    "India", "Indonesia", "Iran", "Iraq", "Ireland", "Isle of Man", 
    "Israel", "Italy", "Jamaica", "Jan Mayen", "Japan", "Jarvis Island", 
    "Jersey", "Johnston Atoll", "Jordan", "Kazakhstan", "Kenya", 
    "Kingman Reef", "Kiribati", "Korea, North", "Korea, South", 
    "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", 
    "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", 
    "Luxembourg", "Macau", "Macedonia", "Madagascar", "Malawi", 
    "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", 
    "Mauritania", "Mauritius", "Mexico", "Micronesia, Federated States of", 
    "Midway Islands", "Moldova", "Monaco", "Mongolia", "Montenegro", 
    "Montserrat", "Morocco", "Mozambique", "Namibia", "Nauru", 
    "Navassa Island", "Nepal", "Netherlands", "New Caledonia", 
    "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", 
    "Northern Mariana Islands", "Norway", "Oman", "Pakistan", 
    "Palau", "Palmyra Atoll", "Panama", "Papua New Guinea", "Paraguay", 
    "Peru", "Philippines", "Pitcairn Islands", "Poland", "Portugal", 
    "Puerto Rico", "Qatar", "Romania", "Russia", "Rwanda", "Saint Barthelemy", 
    "Saint Helena, Ascension, and Tristan da Cunha", "Saint Kitts and Nevis", 
    "Saint Lucia", "Saint Martin", "Saint Pierre and Miquelon", 
    "Saint Vincent and the Grenadines", "Samoa", "San Marino", 
    "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", 
    "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", 
    "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", 
    "South Georgia and South Sandwich Islands", "South Sudan", 
    "Spain", "Spratly Islands", "Sri Lanka", "Sudan", "Suriname", 
    "Svalbard", "Swaziland", "Sweden", "Switzerland", "Syria", 
    "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Timor-Leste", 
    "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", 
    "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", 
    "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", 
    "United States", "United States Pacific Island Wildlife Refuges", 
    "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", 
    "Virgin Islands", "Wake Island", "Wallis and Futuna", "West Bank", 
    "Western Sahara", "Yemen", "Zambia", "Zimbabwe"), class = "factor"), 
    area = c(652230, 28748, 2381741, 1246700, 2780400, 29743, 
    7741220, 83871, 86600, 13880, 143998, 207600, 30528, 22966, 
    112622, 38394, 1098581, 51197, 581730, 8514877), birth_rate = c(38.84, 
    12.73, 23.99, 38.97, 16.88, 13.92, 12.19, 8.76, 16.96, 15.65, 
    21.61, 10.86, 9.99, 25.14, 36.51, 18.12, 23.28, 8.89, 21.34, 
    14.72), death_rate = c(14.12, 6.47, 4.31, 11.67, 7.34, 9.3, 
    7.07, 10.38, 7.09, 7, 5.64, 13.51, 10.76, 5.95, 8.39, 6.78, 
    6.59, 9.64, 13.32, 6.54), infant_mortality_rate = c(117.23, 
    13.19, 21.76, 79.99, 9.96, 13.97, 4.43, 4.16, 26.67, 12.5, 
    45.67, 3.64, 4.18, 20.31, 57.09, 37.89, 38.61, 5.84, 9.38, 
    19.21), internet_users = c(1e+06, 1300000, NA, NA, 13694000, 
    208200, 15810000, 6143000, 2420000, 115800, 617300, 2643000, 
    8113000, 36000, NA, 50000, 1103000, 1422000, 120000, 75982000
    ), life_exp_at_birth = c(50.49, 77.96, 76.39, 55.29, 77.51, 
    74.12, 82.07, 80.17, 71.91, 71.93, 70.65, 72.15, 79.92, 68.49, 
    61.07, 68.98, 68.55, 76.33, 54.06, 73.28), maternal_mortality_rate = c(460L, 
    27L, 97L, 450L, 77L, 30L, 7L, 4L, 43L, 47L, 240L, 4L, 8L, 
    53L, 350L, 180L, 190L, 8L, 160L, 56L), net_migration_rate = c(-1.83, 
    -3.31, -0.93, 0.47, 0, -5.88, 5.74, 1.76, 0, 0, -0.02, 0.78, 
    1.22, 0, 0, 0, -0.69, -0.38, 4.62, -0.15), population = c(31822848L, 
    3020209L, 38813722L, 19088106L, 43024374L, 3060631L, 22507617L, 
    8223062L, 9686210L, 321834L, 166280712L, 9608058L, 10449361L, 
    340844L, 10160556L, 733643L, 10631486L, 3871643L, 2155784L, 
    202656788L), population_growth_rate = c(2.29, 0.3, 1.88, 
    2.78, 0.95, -0.13, 1.09, 0.01, 0.99, 0.87, 1.6, -0.19, 0.05, 
    1.92, 2.81, 1.13, 1.6, -0.11, 1.26, 0.8)), row.names = c(NA, 
-20L), sf_column = "geometry", agr = structure(c(name = NA_integer_, 
pop_est = NA_integer_, iso_a3 = NA_integer_, country = NA_integer_, 
area = NA_integer_, birth_rate = NA_integer_, death_rate = NA_integer_, 
infant_mortality_rate = NA_integer_, internet_users = NA_integer_, 
life_exp_at_birth = NA_integer_, maternal_mortality_rate = NA_integer_, 
net_migration_rate = NA_integer_, population = NA_integer_, population_growth_rate = NA_integer_
), class = "factor", levels = c("constant", "aggregate", "identity"
)), class = c("sf", "tbl_df", "tbl", "data.frame"))


world_map |> 
  gt() |> 
  cols_hide(geometry) |> 
  gtExtras::gt_theme_nytimes() |> 
  fmt_number(
    columns = -c(pop_est, population, area),
    decimals = 1
  ) |> 
  fmt_number(
    columns = c(pop_est, population, area),
    decimals = 0
  ) |> 
  cols_label_with(
    fn = snakecase::to_title_case
  )
```

### Key Learning: Using `geom_text_repel()` in place of `geom_text_sf()` with `stat = "sf_coordinates"`

In this code, we generate two versions of a world map using the Mercator projection (CRS = 3857). The first plot demonstrates how using `geom_sf_text()` without any adjustment can lead to overlapping labels, particularly in densely populated areas. The second plot corrects this with `geom_text_repel()` from the `{ggrepel}` package [@ggrepel], which dynamically adjusts label positions to prevent overlap and improve readability. Each map includes labels based on country name, and the label sizes vary by population, offering a clear contrast between the two approaches for displaying map text labels.

```{r}
#| label: code-worldmap
#| fig-cap: "A world map drawn in Mercator Projection (CRS 3857) to be used as a base map for creating cartograms in the next step"

# Plot the transformed world map data with overlapping labels
g <- ggplot(world_map) +
  
  # Draws the base map with country shapes
  geom_sf(
    linewidth = 0.1
  ) +    
  
  # Adds country names as labels, without overlap prevention
  geom_sf_text(
    mapping = aes(
      label = country
    )
  ) +
  
  # Applies a minimal theme for a clean visual layout
  theme_minimal() +           
  
  # Sets title, subtitle, and caption for the plot
  labs(
    title = "World Map: Labels Overlapping when using geom_sf_text()",
    subtitle = "Map in the Mercator Projection (CRS = 3857)",
    caption = "Source: {rnaturalearth} package data retrieved with ne_countries() function"
  ) +
  
  theme(
    panel.grid = element_line(
      linewidth = 0.1
    )
  )

ggsave(
  filename = here::here("geocomputation",
                        "images",
                        "cartogram_types_1.png"),
  plot = g,
  height = 600,
  width = 800,
  units = "px"
)

# Plot the transformed world map data with repelled labels
g <- ggplot(world_map) +
  
  # Draws the base map with country shapes
  geom_sf(
    linewidth = 0.1,       # Sets line width for label positioning
    colour = "grey10"
  ) +    
  
  # Adds country names as labels with repel effect to prevent overlap
  geom_text_repel(
    mapping = aes(
      label = country,
      geometry = geometry,
      size = population
    ),
    stat = "sf_coordinates",   # Sets the stat for spatial coordinates
    family = "caption_font",   # Sets the font family for labels
    force_pull = 100,
    force = 0.01,
    linewidth = 0.01
  ) +
  
  # Scales the size of labels based on population
  scale_size_continuous(
    range = c(5, 25)
  ) +
  
  # Applies a minimal theme for a clean visual layout
  theme_minimal(
    base_size = 80
  ) +    
    
  # Sets title, subtitle, and caption for the plot
  labs(
    title = "World Map: Labels with geom_text_repel() with stat = \"sf_coordinates\"",
    caption = "Source: {rnaturalearth} package data retrieved with ne_countries() function",
    x = NULL, y = NULL
  ) +
  
  # Removes the legend for size
  theme(
    legend.position = "none",
    panel.grid = element_line(
      linewidth = 0.01
    )
  )

ggsave(
  filename = here::here("geocomputation",
                        "images",
                        "cartogram_types_2.png"),
  plot = g,
  height = 3700,
  width = 4900,
  units = "px",
  bg = "white"
)
```

![Basic World Map: With no effort to prevent overlapping of labels](images/cartogram_types_1.png){#fig-basemap-w1}

![Labels Repelled from each other to prevent overlapping, using geom_text_repel() from package {ggrepel}](images/cartogram_types_2.png){#fig-basemapw2}

### Step 3: Converting `geometry` into Cartograms geometry using {`cartogram`}

In this step, we generate three types of cartograms based on population data, each offering a unique way to represent global population distribution using the `{cartogram}` package. First, we transform the world map data to the Mercator projection (EPSG 3857), which is the standard projection for web maps. We then create three cartograms:

-   a *contiguous cartogram* that distorts countries proportionally to population while maintaining geographic adjacency,

-   a *Dorling cartogram* that represents each country as a circle sized by population, and

-   a *non-contiguous cartogram* that allows countries to resize independently, resulting in more accurate shapes but less geographic continuity.

```{r}
#| label: cartograms-df
#| code-fold: false
#| eval: false

# Transforming the data to different cartogram types based on population

# Create a contiguous cartogram where countries maintain adjacency
world_map_cont <- cartogram::cartogram_cont(world_map, "population")

# Create a Dorling cartogram where each country is represented by a circle
world_map_dorling <- cartogram::cartogram_dorling(world_map, "population")

# Create a non-contiguous cartogram where countries resize independently
world_map_ncont <- cartogram::cartogram_ncont(world_map, "population")
```

# Results

### Type 1: A Continuous Cartogram

In this code, we generate a contiguous cartogram plot, shown in @fig-cartocont, using `{ggplot2}` and `{sf}` libraries, with countries sized according to population. The code begins by arranging `world_map_cont` in descending order of population (so that the countries with larger population are displayed first, while we use the argument `check_overlap = TRUE` with `geom_sf_text()`. The cartogram plot is created using `geom_sf()` for shapes and `geom_sf_text()` for country labels, with label sizes reflecting population. Manual scales are applied to align fill and text colors with predefined palettes. The plot includes a centered title and minimal theme.

```{r}
#| label: fig-cont
#| eval: false


# Arrange the cartogram data by population in descending order
g <- world_map_cont |> 
  arrange(desc(population)) |> 

# Initialize ggplot, mapping fill and color aesthetics to country
  ggplot(
    mapping = aes(
      fill = country,
      colour = country
    )
  ) +

# Add the country shapes without borders
  geom_sf(
    colour = "transparent"
  ) +

# Add text labels for each country with size proportional to population
  geom_sf_text(
    mapping = aes(
      label = country,
      size = population,
      geometry = geometry
    ),
    family = "caption_font",
    fontface = "bold",
    check_overlap = TRUE
  ) +

# Set continuous scale for text size within a specified range
  scale_size_continuous(
    range = c(1, 10)
  ) +

# Apply manual color scale for fill and outline of countries
  scale_fill_manual(
    values = fill_palette
  ) +
  scale_colour_manual(
    values = colour_palette
  ) +

# Add plot title and remove x and y axis labels
  labs(
    x = NULL, y = NULL,
    title = "A contiguous Cartogram of countries' population"
  ) +

# Apply a minimal theme with custom font and size
  theme_minimal(
    base_family = "caption_font",
    base_size = 16
  ) +

# Customize plot appearance with centered title and invisible legend
  theme(
    legend.position = "none",
    panel.grid = element_line(
      colour = "grey90",
      linetype = 3,
      linewidth = 0.1
    ),
    plot.title = element_text(
      hjust = 0.5,
      margin = margin(0,0,0,0, "mm"),
      size = 32
    ),
    plot.margin = margin(0,0,0,0, "mm")
  )

# Save the plot as a PNG with defined size and white background
ggsave(
  plot = g,
  filename = here::here("geocomputation", "images",
                        "cartogram_types_3.png"),
  height = 900,
  width = 1200,
  units = "px",
  bg = "white"
)

```

![A World Map Cartogram, with countries sized by population, using data from CIA World Factbook. The contiguous cartogram ensures that neighbousing countries keep touching each other, although shapes are distorted.](images/cartogram_types_3.png){#fig-cartocont width="1200"}

### Type 2: A Non-continuous Cartogram

The next code chunk generates a non-contiguous cartogram, shown in @fig-cartoncont, where countries are resized according to population but maintain their original shapes, making it easier to recognize familiar geographic forms.. It uses two layers of `geom_sf()` to add the original world map with a grey outline for context and the resized cartogram countries with a semi-transparent overlay. Text labels are added for each country, sized by population, without overlapping.

```{r}
#| label: ncont-cart
#| eval: false

# Arrange the non-contiguous cartogram data by population in descending order
g <- world_map_ncont |> 
  arrange(desc(population)) |> 

# Initialize ggplot, mapping fill and color aesthetics to country
  ggplot(
    mapping = aes(
      fill = country,
      colour = country
    )
  ) +

# Add the original world map with grey borders and white fill
  geom_sf(
    data = world_map,
    fill = "white",
    colour = "grey60",
    linewidth = 0.1
  ) +

# Add the non-contiguous cartogram countries with transparency
  geom_sf(
    colour = "transparent",
    alpha = 0.75
  ) +

# Add text labels for each country with size proportional to population
  geom_sf_text(
    mapping = aes(
      label = country,
      size = population,
      geometry = geometry
    ),
    family = "caption_font",
    fontface = "bold",
    check_overlap = FALSE
  ) +

# Set continuous scale for text size within a specified range
  scale_size_continuous(
    range = c(1, 10)
  ) +

# Apply manual color scale for fill and outline of countries
  scale_fill_manual(
    values = fill_palette
  ) +
  scale_colour_manual(
    values = colour_palette
  ) +

# Add plot title and remove x and y axis labels
  labs(
    x = NULL, y = NULL,
    title = "A non-contiguous Cartogram of countries' population - preserves the country shapes"
  ) +

# Apply a minimal theme with custom font and size
  theme_minimal(
    base_family = "caption_font",
    base_size = 16
  ) +

# Customize plot appearance with centered title and invisible legend
  theme(
    legend.position = "none",
    panel.grid = element_line(
      colour = "grey90",
      linetype = 3,
      linewidth = 0.1
    ),
    plot.title = element_text(
      hjust = 0.5,
      margin = margin(0,0,0,0, "mm"),
      size = 28
    ),
    plot.margin = margin(0,0,0,0, "mm")
  )

# Save the plot as a PNG with defined size and white background
ggsave(
  plot = g,
  filename = here::here("geocomputation", "images",
                        "cartogram_types_4.png"),
  height = 900,
  width = 1200,
  units = "px",
  bg = "white"
)
```

![A non-contiguous cartogram of countries population, using data from CIA Factbook, shows that while shapes of countries are preserved, their neighbouring countries don't touch each others' borders anymore.](images/cartogram_types_4.png){#fig-cartoncont}

### Type 3: A non-overlapping circles Cartogram

This code snippet creates a Dorling cartogram, shown in @fig-cartodorling, where countries are represented as non-overlapping circles sized according to their populations. The `ggplot` function is used to set up the aesthetic mappings for fill and color based on the country. The `geom_sf()` function is employed to add the circular representations of countries without outlines, while `geom_sf_text()` adds text labels for each country, sized according to their populations.

```{r}
#| label: fig-dorling
#| eval: false
# Arrange the Dorling cartogram data by population in descending order
g <- world_map_dorling |> 
  arrange(desc(population)) |> 

# Initialize ggplot, mapping fill and color aesthetics to country
  ggplot(
    mapping = aes(
      fill = country,
      colour = country
    )
  ) +

# Add the non-overlapping circles representing countries
  geom_sf(
    colour = "transparent"
  ) +

# Add text labels for each country, sized by population
  geom_sf_text(
    mapping = aes(
      label = country,
      size = population,
      geometry = geometry
    ),
    family = "caption_font",
    fontface = "bold"
  ) +

# Set continuous scale for text size within a specified range
  scale_size_continuous(
    range = c(1, 10)
  ) +

# Apply manual color scale for fill and Text of countries
  scale_fill_manual(
    values = fill_palette
  ) +
  scale_colour_manual(
    values = colour_palette
  ) +

# Add plot title and remove x and y axis labels
  labs(
    x = NULL, y = NULL,
    title = "A non-overlapping circles Cartogram of countries' population."
  ) +

# Apply a map theme with custom font and size
  ggthemes::theme_map(
    base_family = "caption_font",
    base_size = 16
  ) +

# Customize plot appearance with centered title and invisible legend
  theme(
    legend.position = "none",
    plot.title = element_text(
      hjust = 0.5,
      margin = margin(0,0,0,0, "mm"),
      size = 28
    ),
    plot.margin = margin(0,0,0,0, "mm")
  )

# Save the plot as a PNG with defined size and white background
ggsave(
  plot = g,
  filename = here::here("geocomputation", "images",
                        "cartogram_types_5.png"),
  height = 900,
  width = 1200,
  units = "px",
  bg = "white"
)

```

![](images/cartogram_types_5.png){#fig-cartodorling}
