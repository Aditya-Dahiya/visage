---
title: "Exploring the package {rnaturalearth} in R"
author: "Aditya Dahiya"
subtitle: "Various types of maps and geographic data available with {rnaturalearth}"
date: "2025-02-08"
bibliography: references.bib
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
execute: 
  error: false
  message: false
  warning: false
  eval: false
categories:
  - "Maps"
  - "Gecomputation"
  - "{rnaturalearth}"
comments:
  giscus: 
    repo: Aditya-Dahiya/visage
filters:
  - social-share
share:
  permalink: "https://aditya-dahiya.github.io/visage/geocomputation/rnaturalearth_package.html"
  description: "Visualizing Information and Spatial Analysis with ggplot2 Extensions"
  twitter: true
  linkedin: true
  email: true
  mastodon: true
  facebook: true
---

## Introduction

```{r}
#| label: setup

# Data wrangling & visualization
library(tidyverse)  # Data manipulation & visualization

# Spatial data handling
library(sf)         # Import, export, and manipulate vector data
library(terra)      # Import, export, and manipulate raster data

# ggplot2 extensions
library(tidyterra)  # Helper functions for using terra with ggplot2

# Final plot tools
library(scales)               # Nice Scales for ggplot2
library(fontawesome)          # Icons display in ggplot2
library(ggtext)               # Markdown text in ggplot2
library(showtext)             # Display fonts in ggplot2
library(patchwork)            # Composing Plots

# Package to explore
library(rnaturalearth)        # Open Source Geographic data

bts = 12 # Base Text Size
sysfonts::font_add_google("Roboto Condensed", "body_font")
sysfonts::font_add_google("Oswald", "title_font")
showtext::showtext_auto()
# A base Colour
bg_col <- "white"
seecolor::print_color(bg_col)

# Colour for highlighted text
text_hil <- "grey30"
seecolor::print_color(text_hil)

# Colour for the text
text_col <- "grey20"
seecolor::print_color(text_col)

theme_set(
  theme_minimal(
    base_size = bts,
    base_family = "body_font"
  ) +
    theme(
      text = element_text(
        colour = "grey30",
        lineheight = 0.3,
        margin = margin(0,0,0,0, "pt")
      ),
      plot.title = element_text(
        hjust = 0.5
      ),
      plot.subtitle = element_text(
        hjust = 0.5
      )
    )
)

# Caption stuff for the plot
sysfonts::font_add(
  family = "Font Awesome 6 Brands",
  regular = here::here("docs", "Font Awesome 6 Brands-Regular-400.otf")
)
github <- "&#xf09b"
github_username <- "aditya-dahiya"
xtwitter <- "&#xe61b"
xtwitter_username <- "@adityadahiyaias"
social_caption_1 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{github};</span> <span style='color: {text_hil}'>{github_username}  </span>")
social_caption_2 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{xtwitter};</span> <span style='color: {text_hil}'>{xtwitter_username}</span>")
plot_caption <- paste0(
  "**Tools**: {rnaturalearth}  ",
  "  |  **Code:** ", 
  social_caption_1, 
  " |  **Graphics:** ", 
  social_caption_2
  )
rm(github, github_username, xtwitter, 
   xtwitter_username, social_caption_1, 
   social_caption_2)

```

Basic plot of World Map

```{r}
world1 <- rnaturalearth::ne_countries(
  scale = "medium",
  returnclass = "sf"
)

g <- ggplot(world1) +
  geom_sf(
    fill = NA, colour = "grey30",
    linewidth = 0.1
  ) +
  coord_sf(
    crs = "ESRI:54030"
  ) +
  labs(
    title = "Basic world map with ne_countries()"
  ) +
  theme(
    plot.title = element_textbox(
      hjust = 0.5, 
      halign = 0.5
    ),
    panel.grid = element_line(
      linewidth = 0.05, 
      colour = "grey20",
      linetype = 2
    )
  )

ggsave(
  plot = g,
  filename = here::here(
    "geocomputation", "images",
     "rnaturalearth_package_1.png"
  ),
  height = 500,
  width = 800,
  units = "px"
)
```

![Basic World map with ne_countries()](images/rnaturalearth_package_1.png){#fig-1}

World Coastline Map

```{r}
world1 <- rnaturalearth::ne_coastline(
  scale = "medium",
  returnclass = "sf"
)

g <- ggplot(world1) +
  geom_sf(
    fill = NA, colour = "grey30",
    linewidth = 0.1
  ) +
  coord_sf(
    crs = "ESRI:54030"
  ) +
  labs(
    title = "Basic Coastline map with ne_coastline()"
  ) +
  theme(
    plot.title = element_textbox(
      hjust = 0.5, 
      halign = 0.5
    ),
    panel.grid = element_line(
      linewidth = 0.05, 
      colour = "grey20",
      linetype = 2
    )
  )

ggsave(
  plot = g,
  filename = here::here(
    "geocomputation", "images",
     "rnaturalearth_package_2.png"
  ),
  height = 500,
  width = 800,
  units = "px"
)
```

![](images/rnaturalearth_package_2.png)

### Exploring `ne_download()`

Target: to download raster from <https://www.naturalearthdata.com/downloads/10m-raster-data/10m-cross-blend-hypso/>

Target 2: understand how to download <https://www.naturalearthdata.com/downloads/50m-physical-vectors/> features.

```{r}
rnaturalearthhires::states10 |> 
  ggplot() +
  geom_sf()

rast1 <- ne_download(
  scale = 10, 
  type = "MSR_50M", 
  category = "raster", 
  destdir = tempdir()
  )

ggplot()

rast1
```
