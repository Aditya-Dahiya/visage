---
title: "Different Packages to access Open Street Maps in R"
author: "Aditya Dahiya"
subtitle: "Exploring {osmdata}, {osmextract}, {osmapiR}"
date: "2025-02-06"
bibliography: references.bib
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
execute: 
  error: false
  message: false
  warning: false
  eval: false
categories:
  - "Maps"
  - "Open Street Maps"
  - "{osmdata}"
  - "{osmextract}"
  - "{osmapiR}"
comments:
  giscus: 
    repo: Aditya-Dahiya/visage
filters:
  - social-share
share:
  permalink: "https://aditya-dahiya.github.io/visage/geocomputation/osm_packages.html"
  description: "Visualizing Information and Spatial Analysis with ggplot2 Extensions"
  twitter: true
  linkedin: true
  email: true
  mastodon: true
  facebook: true
---

## Introduction

```{r}
#| label: setup

# Data wrangling & visualization
library(tidyverse)  # Data manipulation & visualization

# Spatial data handling
library(sf)         # Import, export, and manipulate vector data
library(terra)      # Import, export, and manipulate raster data

# ggplot2 extensions
library(tidyterra)  # Helper functions for using terra with ggplot2

# Final plot tools
library(scales)               # Nice Scales for ggplot2
library(fontawesome)          # Icons display in ggplot2
library(ggtext)               # Markdown text in ggplot2
library(showtext)             # Display fonts in ggplot2
library(patchwork)            # Composing Plots

bts = 18 # Base Text Size
sysfonts::font_add_google("Roboto Condensed", "body_font")
sysfonts::font_add_google("Oswald", "title_font")
showtext::showtext_auto()
# A base Colour
bg_col <- "white"
seecolor::print_color(bg_col)

# Colour for highlighted text
text_hil <- "grey30"
seecolor::print_color(text_hil)

# Colour for the text
text_col <- "grey20"
seecolor::print_color(text_col)

theme_set(
  theme_minimal(
    base_size = bts,
    base_family = "body_font"
  ) +
    theme(
      text = element_text(
        colour = "grey30",
        lineheight = 0.3,
        margin = margin(0,0,0,0, "pt")
      ),
      plot.title = element_text(
        hjust = 0.5
      ),
      plot.subtitle = element_text(
        hjust = 0.5
      )
    )
)

# Caption stuff for the plot
sysfonts::font_add(
  family = "Font Awesome 6 Brands",
  regular = here::here("docs", "Font Awesome 6 Brands-Regular-400.otf")
)
github <- "&#xf09b"
github_username <- "aditya-dahiya"
xtwitter <- "&#xe61b"
xtwitter_username <- "@adityadahiyaias"
social_caption_1 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{github};</span> <span style='color: {text_hil}'>{github_username}  </span>")
social_caption_2 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{xtwitter};</span> <span style='color: {text_hil}'>{xtwitter_username}</span>")
plot_caption <- paste0(
  "**Tools**: Open Street Maps ",
  "  |  **Code:** ", 
  social_caption_1, 
  " |  **Graphics:** ", 
  social_caption_2
  )
rm(github, github_username, xtwitter, 
   xtwitter_username, social_caption_1, 
   social_caption_2)

```

```{r}
#| label: tbl-osm-pkgs
#| tbl-cap: "Comparison of various R packages that facilitate access to OpenStreetMap (OSM) data. Each package serves different purposes, ranging from querying small datasets via the Overpass API to downloading large-scale extracts for bulk processing."
#| eval: true

library(gt)

osm_packages <- tibble::tibble(
  `Package Name` = c(
    "[osmdata](https://github.com/ropensci/osmdata)",
    "[osmapiR](https://github.com/ropensci/osmapiR)",
    "[osmextract](https://github.com/ropensci/osmextract)",
    "[geofabrik](https://cran.r-project.org/package=geofabrik)",
    "[OpenStreetMap](https://cran.r-project.org/package=OpenStreetMap)"
  ),
  `Description` = c(
    "Provides an R interface to the Overpass API for querying OSM data.",
    "R interface to the OpenStreetMap API v0.6 for fetching and saving raw geodata.",
    "Downloads, converts, and imports bulk OSM data (.pbf files).",
    "Downloads OSM data from Geofabrikâ€™s regional extracts.",
    "Accesses high-resolution raster maps using the OpenStreetMap protocol."
  ),
  `Advantages` = c(
    "Ideal for extracting specific features; flexible Overpass API queries.",
    "Allows fetching, editing, and saving OSM data, including metadata and GPS traces.",
    "Efficiently handles large-scale OSM extracts; supports bulk processing.",
    "Easy access to pre-processed regional OSM extracts; simplifies data handling.",
    "Provides static raster tiles for visualization without complex queries."
  ),
  `Disadvantages` = c(
    "Rate-limited API; not suited for large datasets.",
    "Not designed for bulk OSM data retrieval; more useful for metadata analysis.",
    "Requires handling large .pbf files; needs external dependencies for conversion.",
    "Limited to available regional extracts; lacks fine-grained filtering.",
    "Raster tiles only; no access to raw OSM vector data."
  )
)

osm_packages |> 
  gt() |> 
  gtExtras::gt_theme_nytimes() |> 
  fmt_markdown(columns = `Package Name`) |> 
  tab_header(
    title = "Comparison of R Packages for Accessing OpenStreetMap Data"
  ) |> 
  tab_footnote(
    footnote = md("**Data sources:** OpenStreetMap, Overpass API, Geofabrik, and various R package repositories.")
  ) |> 
  tab_style(
    style = cell_text(font = "monospace", weight = "bold"),
    locations = cells_body(
      columns = `Package Name`
    )
  )
```

## `osmextract`

```{r}
#| label: download-india-data

# Load necessary libraries
library(osmextract)
library(sf)

# Download and extract the data
health_india <- oe_get(
  place = "India",
  query = "SELECT * FROM 'multipolygons'"
)

names(health_india)
object.size(health_india) |> print(units = "Mb")

# Temporarily Saving the Data for easy use in travel / reload
saveRDS(
  object = health_small,
  file = "india_health_small.rds"
)

health_large <- opq(bbox = in_bbox) |>
  add_osm_feature(
    key = "amenity",
    value = c("hospital", "nursing_home")
  ) |>
  osmdata_sf()

object.size(health_large) |> print(units = "Mb")

# Temporarily Saving the Data for easy use in travel / reload
saveRDS(
  object = health_large,
  file = "india_health_large.rds"
)

########### India Highways -----------------------------------
# Troubleshoot: Large data, hence need to increase time-out
# Credits: https://github.com/ropensci/osmdata/issues/200
roads_1 <- opq(bbox = in_bbox, timeout = 500) |> 
  add_osm_feature(
    key = "highway", 
    value = c("motorway")
  ) |> 
  osmdata_sf()

object.size(roads_1) |> print(units = "Mb")

saveRDS(
  object = roads_1,
  file = "india_roads_1.rds"
)

roads_1_5 <- opq(bbox = in_bbox, timeout = 100) |> 
  add_osm_feature(
    key = "highway", 
    value = c("trunk")
  ) |> 
  osmdata_sf()

object.size(roads_1) |> print(units = "Mb")

saveRDS(
  object = roads_1_5,
  file = "india_roads_1_5.rds"
)
# 
# roads_2 <- opq(bbox = in_bbox) |> 
#   add_osm_feature(
#     key = "highway", 
#     value = c("primary", "secondary")
#   ) |> 
#   osmdata_sf()
# 
# object.size(roads_2) |> print(units = "Mb")
# 
# # Temporary Saving the Data for easy use in travel
# 
# saveRDS(
#   object = roads_2,
#   file = "india_roads_2.rds"
# )


```
